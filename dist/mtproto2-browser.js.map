{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 7806a79498e26b8126ef","webpack:///external \"vendor\"","webpack:///./bin.js","webpack:///delegated ../node_modules/bluebird/js/browser/bluebird.js from dll-reference vendor","webpack:///delegated ../node_modules/ramda/index.js from dll-reference vendor","webpack:///./defer.js","webpack:///./service/time-manager.js","webpack:///./store.js","webpack:///./tl.js","webpack:///./crypto.js","webpack:///./http.js","webpack:///./service/dc-configurator.js","webpack:///./service/secure-random.js","webpack:///./smart-timeout.js","webpack:///delegated ../node_modules/jsbn/index.js from dll-reference vendor","webpack:///./for-each.js","webpack:///./service/authorizer.js","webpack:///./service/networker.js","webpack:///delegated ../node_modules/timers-browserify/main.js from dll-reference vendor","webpack:///delegated ../node_modules/setimmediate/setImmediate.js from dll-reference vendor","webpack:///./leemon.js","webpack:///./service/rsa-keys-manger.js","webpack:///delegated ../node_modules/@goodmind/node-cryptojs-aes/cryptojs.js from dll-reference vendor","webpack:///delegated ../node_modules/axios/index.js from dll-reference vendor","webpack:///delegated ../node_modules/pako/lib/inflate.js from dll-reference vendor","webpack:///delegated ../node_modules/rusha/rusha.js from dll-reference vendor","webpack:///./index.js","webpack:///../~/eventemitter2/lib/eventemitter2.js","webpack:///./service/api-manager/index.js","webpack:///./service/api-manager/error-cases.js","webpack:///./switch.js","webpack:///../~/detect-node/index.js","webpack:///delegated ../node_modules/webpack/buildin/global.js from dll-reference vendor"],"names":["rushaInstance","bigint","num","toString","bigStringInt","strNum","dHexDump","bytes","arr","i","length","push","console","log","join","bytesToHex","bytesFromHex","hexString","len","start","parseInt","charAt","substr","bytesToBase64","mod3","result","nLen","nUint24","nIdx","String","fromCharCode","uint6ToBase64","replace","nUint6","bytesCmp","bytes1","bytes2","bytesXor","bytesToWords","ArrayBuffer","Uint8Array","words","CryptoJS","lib","WordArray","init","bytesFromWords","wordArray","sigBytes","bytesFromBigInt","bigInt","toByteArray","padding","needPadding","bufferConcat","concat","slice","bytesFromLeemonBigInt","str","bigInt2str","bytesToArrayBuffer","b","buffer","convertToArrayBuffer","undefined","byteLength","BYTES_PER_ELEMENT","convertToUint8Array","convertToByteArray","Array","isArray","newBytes","bytesFromArrayBuffer","byteView","from","buffer1","buffer2","l1","l2","tmp","set","longToInts","sLong","divRem","divideAndRemainder","intValue","longToBytes","reverse","longFromInts","high","low","shiftLeft","add","intToUint","val","uintToInt","sha1HashSync","hashBytes","rawDigest","sha1BytesSync","sha256HashSync","hashWords","SHA256","rsaEncrypt","publicKey","addPadding","N","modulus","E","exponent","X","encryptedBigInt","modPowInt","encryptedBytes","blockSize","zeroes","nextBytes","aesEncryptSync","keyBytes","ivBytes","encryptedWords","AES","encrypt","iv","pad","NoPadding","mode","IGE","ciphertext","aesDecryptSync","decryptedWords","decrypt","gzipUncompress","inflate","nextRandomInt","maxValue","Math","floor","random","pqPrimeFactorization","pqBytes","what","pqPrimeLeemon","str2bigInt","ceil","pqPrimeJsbn","it","g","q","x","y","clone","lim","j","a","c","equals","BigInteger","ZERO","and","ONE","compareTo","subtract","shiftRight","z","gcd","f","divide","P","Q","minBits","minLen","copyInt_","copy_","isZero","add_","greater","sub_","rightShift_","eGCD_","equalsInt","divide_","bytesModPow","m","xBigInt","yBigInt","mBigInt","resBigInt","powMod","e","error","modPow","blueDefer","resolve","reject","promise","rs","rj","tsNow","seconds","t","Date","window","tsOffset","logTimer","getTime","dTime","toFixed","lastMessageID","timerOffset","offset","TimeOffset","get","generateMessageID","timeTicks","timeSec","timeMSec","messageID","applyServerTime","serverTime","localTime","newTimeOffset","changed","abs","ValueStore","newVal","ValueStoreMap","Map","key","dcList","PureStorage","keys","ConfigStorage","obj","remove","noPrefix","clear","flatArgs","unapply","splitter","chain","split","rejecter","either","complement","is","flatPath","memoize","pipe","pipeWith","ln","ctx","funcs","view","SyncStorage","constructor","def","storage","fpSave","func","createOnNil","when","subtree","pathKeys","args","lensPath","pipeWithLn","overSubtree","fn","over","field","has","prop","merge","objOf","pipeOver","compose","lensProp","omit","dissocPath","without","save","innerStore","TLSerialization","mtproto","startMaxLength","storeIntString","value","valType","type","storeString","Number","storeInt","Error","writeInt","maxLength","createBuffer","intView","Int32Array","getArray","resultBuffer","resultArray","subarray","getBuffer","getBytes","typed","checkLength","needBytes","trace","max","previousBuffer","previousArray","debug","storeBool","storeLongP","iHigh","iLow","storeLong","storeIntBytes","storeDouble","doubleView","Float64Array","s","sUTF8","unescape","encodeURIComponent","charCodeAt","storeBytes","bits","storeRawBytes","storeMethod","methodName","params","schema","Config","Schema","MTProto","API","methodData","methods","method","id","param","condType","fieldBit","indexOf","storeObject","name","itemType","toLowerCase","Object","predicate","isBare","constructorData","constructors","TLDeserialization","override","Uint32Array","readInt","fetchInt","fetchDouble","fetchLong","longDec","fetchBool","fetchObject","fetchString","decodeURIComponent","escape","fetchBytes","fetchIntBytes","fetchRawBytes","fallback","constructorCmp","compressed","uncompressed","newDeserializer","checkType","index","constructorsIndex","schemaFallback","overrideKey","apply","isCond","isNil","pFlags","getOffset","fetchEnd","convertIfArray","webWorker","taskID","awaiting","webCrypto","isNode","crypto","subtle","webkitSubtle","useSha1Crypto","useSha256Crypto","finalizeTask","deferred","workerEnable","tmpWorker","Worker","onmessage","data","onerror","stack","performTaskWorker","task","embed","postMessage","sha1Hash","bytesTyped","digest","then","smartTimeout","sha256Hash","identity","aesEncrypt","aesDecrypt","factorize","CryptoWorker","httpClient","axios","create","defaults","headers","post","common","sslSubdomains","dcOptions","Modes","test","host","port","chosenServers","chooseServer","dcID","upload","chosenServer","dcOption","ssl","http","subdomain","path","cancelToken","Symbol","timeoutRefs","WeakSet","pause","delay","r","setTimeout","newToken","checkRun","delete","cancel","token","indexedMap","addIndex","forEach","ifElse","mapObjIndexed","mtpSendPlainRequest","requestBuffer","requestLength","requestArray","header","generateID","headerBuffer","headerArray","headerLength","requestData","requestPromise","url","baseError","code","responseType","Promise","originalError","deserializer","auth_key_id","msg_id","msg_len","message","mtpSendReqPQ","auth","warn","request","nonce","response","_","serverNonce","server_nonce","pq","fingerprints","server_public_key_fingerprints","select","p","mtpSendReqDhParams","newNonce","MtpSecureRandom","new_nonce","dataWithHash","public_key_fingerprint","fingerprint","encrypted_data","newNonceHash","new_nonce_hash","mtpDecryptServerDhDataAnswer","encrypted_answer","mtpSendSetClientDhParams","encryptedAnswer","tmpAesKey","tmpAesIv","answerWithHash","hash","answerWithPadding","dhPrime","dh_prime","gA","g_a","server_time","retry","mtpVerifyDhParams","dhPrimeHex","gABigInt","dhPrimeBigInt","two","fromInt","twoPow","pow","gBytes","gB","retry_id","g_b","encryptedData","authKey","authKeyHash","authKeyAux","authKeyID","newNonceHash1","new_nonce_hash1","serverSalt","newNonceHash2","new_nonce_hash2","newNonceHash3","new_nonce_hash3","cached","mtpAuth","count","setImmediate","catch","updatesProcessor","iii","offlineInited","akStopped","NetworkerFabric","appConfig","emit","NetworkerThread","dc","options","authKeyUint8","authKeyBuffer","fileUpload","fileDownload","updateSession","lastServerMessages","currentRequests","checkConnectionPeriod","sentMessages","clientMessages","pendingMessages","pendingAcks","pendingResends","connectionInited","pendingTimeouts","setInterval","checkLongPoll","seqNo","prevSessionID","sessionID","updateSentMessage","sentMessageID","sentMessage","container","newInner","updateInner","innerSentMessageID","innerSentMessage","inner","seq_no","generateSeqNo","notContentRelated","wrapMtpCall","serializer","body","pushMessage","wrapMtpMessage","object","wrapApiCall","afterMessageID","resultType","isAPI","sendLongPoll","maxWait","self","longPollPending","max_delay","wait_after","max_wait","noResponse","longPoll","noShedule","sheduleRequest","pushResend","getMsgKeyIv","msgKey","isOut","sha1aText","sha1bText","sha1cText","sha1dText","promises","sha1a","sha1b","sha1c","sha1d","onAll","aesKey","aesIv","all","values","toggleOffline","enabled","offline","nextReqPromise","nextReq","checkConnectionPromise","checkConnection","min","onOnlineCb","getEncryptedMessage","f1","f2","bytesHash","f3","keyIv","f4","encryptFlow","pipeP","getDecryptedMessage","getKeyCurry","cryptoAesCurry","decryptFlow","parseResponse","responseBuffer","afterDecrypt","dataWithPadding","salt","isInvalidSession","totalLength","messageBodyLength","messageBody","paddingLength","hashData","afterShaHash","dataHash","deserializerOptions","getDeserializeOpts","getMsgById","applyServerSalt","newServerSalt","storeObj","performSheduledRequest","ackMessage","msgID","reqResendMessage","cleanupSent","notEmpty","cleanMessages","processError","rawError","matches","error_message","match","error_code","description","processMessage","msgidInt","messages","bad_msg_id","bad_msg_seqno","new_server_salt","badMessage","shift","processMessageAck","first_msg_id","server_salt","onBaseDc","baseDcID","updateCond","msg_ids","answer_msg_id","spliceCond","lastResendReq","req_msg_id","resend_msg_ids","spliceMessage","dRes","checkLongPollCond","checkLongPollAfterDcCond","isClean","baseDc","sleepAfter","force","afterGetDc","event","pingID","ping_id","pingMessage","sendEncryptedRequest","timeout","onNoResponseMsg","onNoResponseMsgReject","resetPendingMessage","ackMsgIDs","resendMsgIDs","resendOpts","messagesByteLen","currentTime","hasApiCall","hasHttpWait","lengthOverflow","singlesCount","onPendingMessage","messageByteLength","cond1","cond2","singleInRequest","noResponseMsgs","onloads","innerMessages","containerSentMessage","afterSendRequest","afterResponseParse","sqrt","onRequestFail","getRequestUrl","afterRequestData","afterRequestReject","onEncryptedResult","encryptedResult","acked","badMsgID","pos","splice","msgGetter","mt_message","seqno","mt_rpc_result","startAll","stopAll","getNetworker","Networker","setUpdatesProcessor","callback","bpe","mask","radix","digitsStr","one","int2bigInt","ss","s0","s1","s2","s3","s4","s5","s6","s7","T","sa","mr_x1","mr_r","mr_a","eg_v","eg_u","eg_A","eg_B","eg_C","eg_D","md_q1","md_q2","md_q3","md_r","md_r1","md_r2","md_tt","primes","pows","s_i","s_i2","s_R","s_rm","s_q","s_n1","s_a","s_r2","s_n","s_b","s_d","s_x1","s_x2","s_aa","rpprb","k","buff","findPrimes","n","ans","millerRabinInt","dup","millerRabin","addInt_","powMod_","squareMod_","bitSize","w","expand","randTruePrime","randTruePrime_","trim","randProbPrime","randProbPrimeRounds","divisible","B","randBigInt_","modInt","mod","mod_","addInt","mult","mult_","sub","inverseMod","inverseMod_","multMod","multMod_","pm","dd","zz","recSize","recLimit","carry_","multInt_","GCD_","randBigInt","GCD","xc","yc","xp","yp","A","C","D","sing","qp","linComb_","halve_","negative","inverseModInt","inverseModInt_","v","leftShift_","greaterShift","kx","ky","y1","y2","subShift_","linCombShift_","addShift_","minSize","base","d","kk","substring","divInt_","ys","kn","k1","k2","np","mont_","ui","ks","publisKeysHex","publicKeysParsed","prepared","mapPrepare","keyParsed","RSAPublicKey","fingerprintBytes","prepareRsaKeys","selectRsaKeyByFingerPrint","fingerprintHex","foundKey","hasPath","pathSatisfies","defDc","unless","always","withoutNil","mtpClearStorage","saveKeys","tap","restoreObj","Ln","propEq","ApiManager","appSettings","emitter","wildcard","on","cache","uploader","downloader","mtpGetNetworker","akk","ssk","networkGetter","authKeyHex","serverSaltHex","networkFabric","createNetworker","onDcAuth","netError","mtpInvokeApi","bind","setUserAuth","rejectPromise","noErrorBox","input","cachedNetworker","cachedNetThunk","performRequest","requestThunk","waitTime","networker","deferResolve","apiSavedNet","apiRecall","switchErrors","getDcNetworker","userAuth","fullUserAuth","user_auth","invokeWithLayer","layer","NaN","initConnection","api_id","device_model","system_version","app_version","lang_code","api","cachedExportPromise","protect","errR","patterns","noBaseAuth","noDcAuth","migrate","floodWait","waitFail","matchProtect","matched","invoke","throwNext","getNet","importAuth","exportDeferred","dc_id","newDcID","now","stopTime","propOr","Switch","protector","mProtector","keyList","normalized"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO,IAAIC,MAAI,CAAR,C,CAAmB;AAC1B,IAAIC,OAAK,CAAT,C,CAAmB;AACnB,IAAIC,QAAMD,OAAK,CAAf,C,CAAmB;;AAEnB;AACA,IAAIE,YAAU,oGAAd;;AAEA;AACA,KAAKH,MAAI,CAAT,EAAa,KAAIA,MAAI,CAAT,GAAgB,KAAGA,GAA/B,EAAqCA,KAArC,CAA2C,C,CAAG;AAC9CA,QAAM,CAAN,C,CAA2B;AAC3BC,OAAK,CAAC,KAAGD,GAAJ,IAAS,CAAd,C,CAA2B;AAC3BE,QAAMD,OAAK,CAAX,C,CAA2B;AACpB,IAAIG,MAAIC,WAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CAAR,C,CAA+B;;AAEtC;AACA;AACA,IAAI7jB,IAAE,IAAInI,KAAJ,CAAU,CAAV,CAAN;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AACD,CAXD;;AAaA;;;;;;;AC5DA,+C;;;;;;ACAA,+C;;;;;;ACAA,+C;;;;;;ACAA,+C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEAj4B,QAAQ4S,KAAR,CAAc,eAAd;;AAGA,8DAAe,EAAf,C;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,oDAAoD,YAAY;AAChE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,kDAAkD,uBAAuB;AACzE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;;AAEA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,2BAA2B;AAC3B,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,wCAAwC,iCAAiC;AACzE;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4CAA4C;AAC5C,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;AACA;;AAEA;;AAEA,iDAAiD,YAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AAC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","file":"mtproto2-browser.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"vendor\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mtproto\"] = factory(require(\"vendor\"));\n\telse\n\t\troot[\"mtproto\"] = factory(root[\"vendor\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7806a79498e26b8126ef","module.exports = vendor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor\"\n// module id = 0\n// module chunks = 0","import { BigInteger, SecureRandom } from 'jsbn'\r\nimport Rusha from 'rusha'\r\nimport { CryptoJS } from '@goodmind/node-cryptojs-aes'\r\n\r\nimport { inflate } from 'pako/lib/inflate'\r\n\r\n// import Int from 'big-integer'\r\n\r\n// import BN from 'bn.js'\r\n\r\nimport { eGCD_, greater, divide_, str2bigInt, equalsInt,\r\n  isZero, bigInt2str, copy_, copyInt_, rightShift_,\r\n  sub_, add_, powMod, bpe, one } from './leemon'\r\n\r\n// import { bigInt2str } from 'BigInt'\r\n\r\n// const { BigInteger } = jsbn\r\n\r\nconst rushaInstance = new Rusha(1024 * 1024)\r\n\r\nexport function bigint(num) {\r\n  return new BigInteger(num.toString(16), 16)\r\n}\r\n\r\nexport function bigStringInt(strNum) {\r\n  return new BigInteger(strNum, 10)\r\n}\r\n\r\nexport function dHexDump(bytes) {\r\n  const arr = []\r\n  for (let i = 0; i < bytes.length; i++) {\r\n    if (i && !(i % 2)) {\r\n      if (!(i % 16)) {\r\n        arr.push('\\n')\r\n      } else if (!(i % 4)) {\r\n        arr.push('  ')\r\n      } else {\r\n        arr.push(' ')\r\n      }\r\n    }\r\n    arr.push((bytes[i] < 16 ? '0' : '') + bytes[i].toString(16))\r\n  }\r\n\r\n  console.log(arr.join(''))\r\n}\r\n\r\nexport function bytesToHex(bytes = []) {\r\n  const arr = []\r\n  for (let i = 0; i < bytes.length; i++) {\r\n    arr.push((bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16))\r\n  }\r\n  return arr.join('')\r\n}\r\n\r\nexport function bytesFromHex(hexString) {\r\n  const len = hexString.length\r\n  let start = 0\r\n  const bytes = []\r\n\r\n  if (hexString.length % 2) {\r\n    bytes.push(parseInt(hexString.charAt(0), 16))\r\n    start++\r\n  }\r\n\r\n  for (let i = start; i < len; i += 2) {\r\n    bytes.push(parseInt(hexString.substr(i, 2), 16))\r\n  }\r\n\r\n  return bytes\r\n}\r\n\r\nexport function bytesToBase64(bytes) {\r\n  let mod3\r\n  let result = ''\r\n\r\n  for (let nLen = bytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\r\n    mod3 = nIdx % 3\r\n    nUint24 |= bytes[nIdx] << (16 >>> mod3 & 24)\r\n    if (mod3 === 2 || nLen - nIdx === 1) {\r\n      result += String.fromCharCode(\r\n        uint6ToBase64(nUint24 >>> 18 & 63),\r\n        uint6ToBase64(nUint24 >>> 12 & 63),\r\n        uint6ToBase64(nUint24 >>> 6 & 63),\r\n        uint6ToBase64(nUint24 & 63)\r\n      )\r\n      nUint24 = 0\r\n    }\r\n  }\r\n\r\n  return result.replace(/A(?=A$|$)/g, '=')\r\n}\r\n\r\nexport function uint6ToBase64(nUint6) {\r\n  return nUint6 < 26\r\n    ? nUint6 + 65\r\n    : nUint6 < 52\r\n      ? nUint6 + 71\r\n      : nUint6 < 62\r\n        ? nUint6 - 4\r\n        : nUint6 === 62\r\n          ? 43\r\n          : nUint6 === 63\r\n            ? 47\r\n            : 65\r\n}\r\n\r\n// export function base64ToBlob(base64str, mimeType) {\r\n//   const sliceSize = 1024\r\n//   const byteCharacters = atob(base64str)\r\n//   const bytesLength = byteCharacters.length\r\n//   const slicesCount = Math.ceil(bytesLength / sliceSize)\r\n//   const byteArrays = new Array(slicesCount)\r\n\r\n//   for (let sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\r\n//     const begin = sliceIndex * sliceSize\r\n//     const end = Math.min(begin + sliceSize, bytesLength)\r\n\r\n//     const bytes = new Array(end - begin)\r\n//     for (let offset = begin, i = 0; offset < end; ++i, ++offset) {\r\n//       bytes[i] = byteCharacters[offset].charCodeAt(0)\r\n//     }\r\n//     byteArrays[sliceIndex] = new Uint8Array(bytes)\r\n//   }\r\n\r\n//   return blobConstruct(byteArrays, mimeType)\r\n// }\r\n\r\n// export function dataUrlToBlob(url) {\r\n//   // var name = 'b64blob ' + url.length\r\n//   // console.time(name)\r\n//   const urlParts = url.split(',')\r\n//   const base64str = urlParts[1]\r\n//   const mimeType = urlParts[0].split(':')[1].split(';')[0]\r\n//   const blob = base64ToBlob(base64str, mimeType)\r\n//   // console.timeEnd(name)\r\n//   return blob\r\n// }\r\n\r\n// export function blobConstruct(blobParts, mimeType) {\r\n//   let blob\r\n//   try {\r\n//     blob = new Blob(blobParts, { type: mimeType })\r\n//   } catch (e) {\r\n//     const bb = new BlobBuilder\r\n//     angular.forEach(blobParts, function(blobPart) {\r\n//       bb.append(blobPart)\r\n//     })\r\n//     blob = bb.getBlob(mimeType)\r\n//   }\r\n//   return blob\r\n// }\r\n\r\nexport function bytesCmp(bytes1, bytes2) {\r\n  const len = bytes1.length\r\n  if (len !== bytes2.length) {\r\n    return false\r\n  }\r\n\r\n  for (let i = 0; i < len; i++) {\r\n    if (bytes1[i] !== bytes2[i])\r\n      return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport function bytesXor(bytes1, bytes2) {\r\n  const len = bytes1.length\r\n  const bytes = []\r\n\r\n  for (let i = 0; i < len; ++i) {\r\n    bytes[i] = bytes1[i] ^ bytes2[i]\r\n  }\r\n\r\n  return bytes\r\n}\r\n\r\nexport function bytesToWords(bytes) {\r\n  if (bytes instanceof ArrayBuffer) {\r\n    bytes = new Uint8Array(bytes)\r\n  }\r\n  const len = bytes.length\r\n  const words = []\r\n  let i\r\n  for (i = 0; i < len; i++) {\r\n    words[i >>> 2] |= bytes[i] << (24 - (i % 4) * 8)\r\n  }\r\n\r\n  return new CryptoJS.lib.WordArray.init(words, len)\r\n}\r\n\r\nexport function bytesFromWords(wordArray) {\r\n  const words = wordArray.words\r\n  const sigBytes = wordArray.sigBytes\r\n  const bytes = []\r\n\r\n  for (let i = 0; i < sigBytes; i++) {\r\n    bytes.push((words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)\r\n  }\r\n\r\n  return bytes\r\n}\r\n\r\nexport function bytesFromBigInt(bigInt, len) {\r\n  let bytes = bigInt.toByteArray()\r\n\r\n  if (len && bytes.length < len) {\r\n    const padding = []\r\n    for (let i = 0, needPadding = len - bytes.length; i < needPadding; i++) {\r\n      padding[i] = 0\r\n    }\r\n    if (bytes instanceof ArrayBuffer) {\r\n      bytes = bufferConcat(padding, bytes)\r\n    } else {\r\n      bytes = padding.concat(bytes)\r\n    }\r\n  } else {\r\n    while (!bytes[0] && (!len || bytes.length > len)) {\r\n      bytes = bytes.slice(1)\r\n    }\r\n  }\r\n\r\n  return bytes\r\n}\r\n\r\nexport function bytesFromLeemonBigInt(bigInt, len) {\r\n  const str = bigInt2str(bigInt, 16)\r\n  return bytesFromHex(str)\r\n}\r\n\r\nexport function bytesToArrayBuffer(b) {\r\n  return (new Uint8Array(b)).buffer\r\n}\r\n\r\nexport function convertToArrayBuffer(bytes) {\r\n  // Be careful with converting subarrays!!\r\n  if (bytes instanceof ArrayBuffer) {\r\n    return bytes\r\n  }\r\n  if (bytes.buffer !== undefined &&\r\n    bytes.buffer.byteLength == bytes.length * bytes.BYTES_PER_ELEMENT) {\r\n    return bytes.buffer\r\n  }\r\n  return bytesToArrayBuffer(bytes)\r\n}\r\n\r\nexport function convertToUint8Array(bytes) {\r\n  if (bytes.buffer !== undefined) {\r\n    return bytes\r\n  }\r\n  return new Uint8Array(bytes)\r\n}\r\n\r\nexport function convertToByteArray(bytes) {\r\n  if (Array.isArray(bytes)) {\r\n    return bytes\r\n  }\r\n  bytes = convertToUint8Array(bytes)\r\n  const newBytes = []\r\n  for (let i = 0, len = bytes.length; i < len; i++) {\r\n    newBytes.push(bytes[i])\r\n  }\r\n  return newBytes\r\n}\r\n\r\nexport function bytesFromArrayBuffer(buffer) {\r\n  const byteView = new Uint8Array(buffer)\r\n  const bytes = Array.from( byteView )\r\n  return bytes\r\n}\r\n\r\nexport function bufferConcat(buffer1, buffer2) {\r\n  const l1 = buffer1.byteLength || buffer1.length\r\n  const l2 = buffer2.byteLength || buffer2.length\r\n  const tmp = new Uint8Array(l1 + l2)\r\n  tmp.set(\r\n    buffer1 instanceof ArrayBuffer\r\n      ? new Uint8Array(buffer1)\r\n      : buffer1,\r\n    0)\r\n  tmp.set(\r\n    buffer2 instanceof ArrayBuffer\r\n      ? new Uint8Array(buffer2)\r\n      : buffer2,\r\n    l1)\r\n\r\n  return tmp.buffer\r\n}\r\n\r\nexport function longToInts(sLong) {\r\n  const divRem = bigStringInt(sLong).divideAndRemainder(bigint(0x100000000))\r\n\r\n  return [divRem[0].intValue(), divRem[1].intValue()]\r\n}\r\n\r\nexport function longToBytes(sLong) {\r\n  return bytesFromWords({ words: longToInts(sLong), sigBytes: 8 }).reverse()\r\n}\r\n\r\nexport function longFromInts(high, low) {\r\n  return bigint(high)\r\n    .shiftLeft(32)\r\n    .add(bigint(low))\r\n    .toString(10)\r\n}\r\n\r\nexport function intToUint(val) {\r\n  val = parseInt(val)\r\n  if (val < 0) {\r\n    val = val + 4294967296\r\n  }\r\n  return val\r\n}\r\n\r\nexport function uintToInt(val) {\r\n  if (val > 2147483647) {\r\n    val = val - 4294967296\r\n  }\r\n  return val\r\n}\r\n\r\nexport function sha1HashSync(bytes) {\r\n  // console.log(dT(), 'SHA-1 hash start', bytes.byteLength || bytes.length)\r\n  const hashBytes = rushaInstance.rawDigest(bytes).buffer\r\n  // console.log(dT(), 'SHA-1 hash finish')\r\n\r\n  return hashBytes\r\n}\r\n\r\nexport function sha1BytesSync(bytes) {\r\n  return bytesFromArrayBuffer(sha1HashSync(bytes))\r\n}\r\n\r\nexport function sha256HashSync(bytes) {\r\n  // console.log(dT(), 'SHA-2 hash start', bytes.byteLength || bytes.length)\r\n  const hashWords = CryptoJS.SHA256(bytesToWords(bytes))\r\n  // console.log(dT(), 'SHA-2 hash finish')\r\n\r\n  const hashBytes = bytesFromWords(hashWords)\r\n\r\n  return hashBytes\r\n}\r\n\r\nexport function rsaEncrypt(publicKey, bytes) {\r\n  bytes = addPadding(bytes, 255)\r\n\r\n  // console.log('RSA encrypt start')\r\n  const N = new BigInteger(publicKey.modulus, 16)\r\n  const E = new BigInteger(publicKey.exponent, 16)\r\n  const X = new BigInteger(bytes)\r\n  const encryptedBigInt = X.modPowInt(E, N),\r\n        encryptedBytes = bytesFromBigInt(encryptedBigInt, 256)\r\n    // console.log('RSA encrypt finish')\r\n\r\n  return encryptedBytes\r\n}\r\n\r\nexport function addPadding(bytes, blockSize, zeroes) {\r\n  blockSize = blockSize || 16\r\n  const len = bytes.byteLength || bytes.length\r\n  const needPadding = blockSize - (len % blockSize)\r\n  if (needPadding > 0 && needPadding < blockSize) {\r\n    const padding = new Array(needPadding)\r\n    if (zeroes) {\r\n      for (let i = 0; i < needPadding; i++) {\r\n        padding[i] = 0\r\n      }\r\n    } else {\r\n      (new SecureRandom()).nextBytes(padding)\r\n    }\r\n\r\n    if (bytes instanceof ArrayBuffer) {\r\n      bytes = bufferConcat(bytes, padding)\r\n    } else {\r\n      bytes = bytes.concat(padding)\r\n    }\r\n  }\r\n\r\n  return bytes\r\n}\r\n\r\nexport function aesEncryptSync(bytes, keyBytes, ivBytes) {\r\n  const len = bytes.byteLength || bytes.length\r\n\r\n  // console.log(dT(), 'AES encrypt start', len/*, bytesToHex(keyBytes), bytesToHex(ivBytes)*/)\r\n  bytes = addPadding(bytes)\r\n\r\n  const encryptedWords = CryptoJS.AES.encrypt(bytesToWords(bytes), bytesToWords(keyBytes), {\r\n    iv     : bytesToWords(ivBytes),\r\n    padding: CryptoJS.pad.NoPadding,\r\n    mode   : CryptoJS.mode.IGE\r\n  }).ciphertext\r\n\r\n  const encryptedBytes = bytesFromWords(encryptedWords)\r\n  // console.log(dT(), 'AES encrypt finish')\r\n\r\n  return encryptedBytes\r\n}\r\n\r\nexport function aesDecryptSync(encryptedBytes, keyBytes, ivBytes) {\r\n\r\n  // console.log(dT(), 'AES decrypt start', encryptedBytes.length)\r\n  const decryptedWords = CryptoJS.AES.decrypt({ ciphertext: bytesToWords(encryptedBytes) }, bytesToWords(keyBytes), {\r\n    iv     : bytesToWords(ivBytes),\r\n    padding: CryptoJS.pad.NoPadding,\r\n    mode   : CryptoJS.mode.IGE\r\n  })\r\n\r\n  const bytes = bytesFromWords(decryptedWords)\r\n  // console.log(dT(), 'AES decrypt finish')\r\n\r\n  return bytes\r\n}\r\n\r\nexport function gzipUncompress(bytes) {\r\n  // console.log('Gzip uncompress start')\r\n  const result = inflate(bytes)\r\n  // console.log('Gzip uncompress finish')\r\n  return result\r\n}\r\n\r\nexport function nextRandomInt(maxValue) {\r\n  return Math.floor(Math.random() * maxValue)\r\n}\r\n\r\n// const bytesToInt = bytes => Int(bytesToHex(bytes), 16)\r\n// const bytesFromInt = int => bytesFromHex(int.toString(16))\r\n\r\nexport function pqPrimeFactorization(pqBytes) {\r\n  const what = new BigInteger(pqBytes)\r\n  // const whatInt = bytesToInt(pqBytes)\r\n  // const whatBn = new BN(bytesToHex(pqBytes), 16)\r\n  let result = false\r\n  // let intRes = []\r\n  // const bnRes = []\r\n  // console.log(dT(), 'PQ start', pqBytes, what.toString(16), what.bitLength())\r\n\r\n  // try {\r\n  // console.time('pq leemon')\r\n  // const toHex = bytesToHex(pqBytes)\r\n  result = pqPrimeLeemon(str2bigInt(what.toString(16), 16, Math.ceil(64 / bpe) + 1))\r\n  // console.timeEnd('pq leemon')\r\n  // } catch (e) {\r\n  //   console.error('Pq leemon Exception', e)\r\n  // }\r\n\r\n  /*if (result === false && what.bitLength() <= 64) {\r\n    // console.time('PQ long')\r\n    try {\r\n      result = pqPrimeLong(goog.math.Long.fromString(what.toString(16), 16))\r\n    } catch (e) {\r\n      console.error('Pq long Exception', e)\r\n    }\r\n  // console.timeEnd('PQ long')\r\n  }*/\r\n  // console.log(result)\r\n\r\n  // if (result === false) {\r\n  // console.time('pq BigInt')\r\n  // intRes = pqPrimeJsbn(what)\r\n  // console.timeEnd('pq BigInt')\r\n\r\n  // console.time('pq bn')\r\n  // bnRes = pqPrimeBN(whatBn)\r\n  // console.timeEnd('pq bn')\r\n  // }\r\n  // console.log(...result, ...bnRes)\r\n  // console.log(dT(), 'PQ finish')\r\n\r\n  return result\r\n    //intRes//result//bnRes\r\n}\r\n\r\n/*export function pqPrimeBN(what) {\r\n  let it = 0,\r\n      g\r\n  const nOne = new BN(1)\r\n  for (let i = 0; i < 3; i++) {\r\n    const q = (nextRandomInt(128) & 15) + 17\r\n    let x = new BN(nextRandomInt(1000000000) + 1)\r\n    let y = x.clone()\r\n    const lim = 1 << (i + 18)\r\n\r\n    for (let j = 1; j < lim; j++) {\r\n      ++it\r\n      let a = x.clone()\r\n      let b = x.clone()\r\n      let c = new BN(q)\r\n\r\n      while (!b.isZero()) {\r\n        if (!b.and(nOne).isZero()) {\r\n          c = c.add(a)\r\n          if (c.gt(what)) {\r\n            c = c.sub(what)\r\n          }\r\n        }\r\n        a = a.add(a)\r\n        if (a.gt(what)) {\r\n          a = a.sub(what)\r\n        }\r\n        b = b.shrn(1)\r\n      }\r\n\r\n      x = c.clone()\r\n      const z = x.lt(y)\r\n        ? y.sub(x)\r\n        : x.sub(y)\r\n      g = z.gcd(what)\r\n      if (!g.eq(nOne)) {\r\n        break\r\n      }\r\n      if ((j & (j - 1)) == 0) {\r\n        y = x.clone()\r\n      }\r\n    }\r\n    if (g.gt(nOne)) {\r\n      break\r\n    }\r\n  }\r\n\r\n  let f = what.div(g), P, Q\r\n\r\n  if (g.gt(f)) {\r\n    P = f\r\n    Q = g\r\n  } else {\r\n    P = g\r\n    Q = f\r\n  }\r\n\r\n  return [P.toArray(), Q.toArray(), it]\r\n}*/\r\n\r\nexport function pqPrimeJsbn(what) {\r\n  let it = 0,\r\n      g\r\n  for (let i = 0; i < 3; i++) {\r\n    const q = (nextRandomInt(128) & 15) + 17\r\n    let x = bigint(nextRandomInt(1000000000) + 1)\r\n    let y = x.clone()\r\n    const lim = 1 << (i + 18)\r\n\r\n    for (let j = 1; j < lim; j++) {\r\n      ++it\r\n      let a = x.clone()\r\n      let b = x.clone()\r\n      let c = bigint(q)\r\n\r\n      while (!b.equals(BigInteger.ZERO)) {\r\n        if (!b.and(BigInteger.ONE).equals(BigInteger.ZERO)) {\r\n          c = c.add(a)\r\n          if (c.compareTo(what) > 0) {\r\n            c = c.subtract(what)\r\n          }\r\n        }\r\n        a = a.add(a)\r\n        if (a.compareTo(what) > 0) {\r\n          a = a.subtract(what)\r\n        }\r\n        b = b.shiftRight(1)\r\n      }\r\n\r\n      x = c.clone()\r\n      const z = x.compareTo(y) < 0 ? y.subtract(x) : x.subtract(y)\r\n      g = z.gcd(what)\r\n      if (!g.equals(BigInteger.ONE)) {\r\n        break\r\n      }\r\n      if ((j & (j - 1)) == 0) {\r\n        y = x.clone()\r\n      }\r\n    }\r\n    if (g.compareTo(BigInteger.ONE) > 0) {\r\n      break\r\n    }\r\n  }\r\n\r\n  let f = what.divide(g), P, Q\r\n\r\n  if (g.compareTo(f) > 0) {\r\n    P = f\r\n    Q = g\r\n  } else {\r\n    P = g\r\n    Q = f\r\n  }\r\n\r\n  return [bytesFromBigInt(P), bytesFromBigInt(Q), it]\r\n}\r\n\r\n/*export function pqPrimeBigInteger(what) {\r\n  let it = 0,\r\n      g\r\n  for (let i = 0; i < 3; i++) {\r\n    const q = (nextRandomInt(128) & 15) + 17\r\n    let x = Int(nextRandomInt(1000000000) + 1)\r\n    let y = Int(x)\r\n    const lim = 1 << (i + 18)\r\n\r\n    for (let j = 1; j < lim; j++) {\r\n      ++it\r\n      let a = Int(x)\r\n      let b = Int(x)\r\n      let c = Int(q)\r\n\r\n      while (!b.isZero()) {\r\n        if (!b.and(Int.one).isZero()) {\r\n          c = c.add(a)\r\n          if (c.greater(what))\r\n            c = c.subtract(what)\r\n        }\r\n        a = a.add(a)\r\n        if (a.greater(what))\r\n          a = a.subtract(what)\r\n        b = b.shiftRight(1)\r\n      }\r\n\r\n      x = Int(c)\r\n      const z = x.lesser(y)\r\n        ? y.subtract(x)\r\n        : x.subtract(y)\r\n      g = Int.gcd(z, what)\r\n      if (g.notEquals(Int.one))\r\n        break\r\n      if ((j & (j - 1)) == 0)\r\n        y = Int(x)\r\n    }\r\n    if (g.greater(Int.one))\r\n      break\r\n  }\r\n\r\n  const f = what.divide(g)\r\n  let P, Q\r\n\r\n  if (g.greater(f)) {\r\n    P = f\r\n    Q = g\r\n  } else {\r\n    P = g\r\n    Q = f\r\n  }\r\n\r\n  return [bytesFromInt(P), bytesFromInt(Q), it]\r\n}*/\r\n\r\n/*export function gcdLong(a, b) {\r\n  while (a.notEquals(goog.math.Long.ZERO) && b.notEquals(goog.math.Long.ZERO)) {\r\n    while (b.and(goog.math.Long.ONE).equals(goog.math.Long.ZERO)) {\r\n      b = b.shiftRight(1)\r\n    }\r\n    while (a.and(goog.math.Long.ONE).equals(goog.math.Long.ZERO)) {\r\n      a = a.shiftRight(1)\r\n    }\r\n    if (a.compare(b) > 0) {\r\n      a = a.subtract(b)\r\n    } else {\r\n      b = b.subtract(a)\r\n    }\r\n  }\r\n  return b.equals(goog.math.Long.ZERO) ? a : b\r\n}\r\n\r\nexport function pqPrimeLong(what) {\r\n  let it = 0,\r\n      g\r\n  for (let i = 0; i < 3; i++) {\r\n    const q = goog.math.Long.fromInt((nextRandomInt(128) & 15) + 17)\r\n    let x = goog.math.Long.fromInt(nextRandomInt(1000000000) + 1)\r\n    let y = x\r\n    const lim = 1 << (i + 18)\r\n\r\n    for (let j = 1; j < lim; j++) {\r\n      ++it\r\n      let a = x\r\n      let b = x\r\n      let c = q\r\n\r\n      while (b.notEquals(goog.math.Long.ZERO)) {\r\n        if (b.and(goog.math.Long.ONE).notEquals(goog.math.Long.ZERO)) {\r\n          c = c.add(a)\r\n          if (c.compare(what) > 0) {\r\n            c = c.subtract(what)\r\n          }\r\n        }\r\n        a = a.add(a)\r\n        if (a.compare(what) > 0) {\r\n          a = a.subtract(what)\r\n        }\r\n        b = b.shiftRight(1)\r\n      }\r\n\r\n      x = c\r\n      const z = x.compare(y) < 0 ? y.subtract(x) : x.subtract(y)\r\n      g = gcdLong(z, what)\r\n      if (g.notEquals(goog.math.Long.ONE)) {\r\n        break\r\n      }\r\n      if ((j & (j - 1)) == 0) {\r\n        y = x\r\n      }\r\n    }\r\n    if (g.compare(goog.math.Long.ONE) > 0) {\r\n      break\r\n    }\r\n  }\r\n\r\n  let f = what.div(g), P, Q\r\n\r\n  if (g.compare(f) > 0) {\r\n    P = f\r\n    Q = g\r\n  } else {\r\n    P = g\r\n    Q = f\r\n  }\r\n\r\n  return [bytesFromHex(P.toString(16)), bytesFromHex(Q.toString(16)), it]\r\n}*/\r\n\r\n/*//is bigint x equal to integer y?\r\n//y must have less than bpe bits\r\nfunction equalsInt(x,y) {\r\n  var i;\r\n  if (x[0]!=y)\r\n    return 0;\r\n  for (i=1;i<x.length;i++)\r\n    if (x[i])\r\n      return 0;\r\n  return 1;\r\n}*/\r\n\r\nexport function pqPrimeLeemon(what) {\r\n  const minBits = 64\r\n  const minLen = Math.ceil(minBits / bpe) + 1\r\n  let it = 0\r\n  let q, lim\r\n  const a = new Array(minLen)\r\n  const b = new Array(minLen)\r\n  const c = new Array(minLen)\r\n  const g = new Array(minLen)\r\n  const z = new Array(minLen)\r\n  const x = new Array(minLen)\r\n  const y = new Array(minLen)\r\n\r\n  for (let i = 0; i < 3; i++) {\r\n    q = (nextRandomInt(128) & 15) + 17\r\n    copyInt_(x, nextRandomInt(1000000000) + 1)\r\n    copy_(y, x)\r\n    lim = 1 << (i + 18)\r\n\r\n    for (let j = 1; j < lim; j++) {\r\n      ++it\r\n      copy_(a, x)\r\n      copy_(b, x)\r\n      copyInt_(c, q)\r\n\r\n      while (!isZero(b)) {\r\n        if (b[0] & 1) {\r\n          add_(c, a)\r\n          if (greater(c, what)) {\r\n            sub_(c, what)\r\n          }\r\n        }\r\n        add_(a, a)\r\n        if (greater(a, what)) {\r\n          sub_(a, what)\r\n        }\r\n        rightShift_(b, 1)\r\n      }\r\n\r\n      copy_(x, c)\r\n      if (greater(x, y)) {\r\n        copy_(z, x)\r\n        sub_(z, y)\r\n      } else {\r\n        copy_(z, y)\r\n        sub_(z, x)\r\n      }\r\n      eGCD_(z, what, g, a, b)\r\n      if (!equalsInt(g, 1)) {\r\n        break\r\n      }\r\n      if ((j & (j - 1)) === 0) {\r\n        copy_(y, x)\r\n      }\r\n    }\r\n    if (greater(g, one)) {\r\n      break\r\n    }\r\n  }\r\n\r\n  divide_(what, g, x, y)\r\n\r\n  const [P, Q] =\r\n    greater(g, x)\r\n      ? [x, g]\r\n      : [g, x]\r\n\r\n  // console.log(dT(), 'done', bigInt2str(what, 10), bigInt2str(P, 10), bigInt2str(Q, 10))\r\n\r\n  return [bytesFromLeemonBigInt(P), bytesFromLeemonBigInt(Q), it]\r\n}\r\n\r\nexport function bytesModPow(x, y, m) {\r\n  try {\r\n    const xBigInt = str2bigInt(bytesToHex(x), 16)\r\n    const yBigInt = str2bigInt(bytesToHex(y), 16)\r\n    const mBigInt = str2bigInt(bytesToHex(m), 16)\r\n    const resBigInt = powMod(xBigInt, yBigInt, mBigInt)\r\n\r\n    return bytesFromHex(bigInt2str(resBigInt, 16))\r\n  } catch (e) {\r\n    console.error('mod pow error', e)\r\n  }\r\n\r\n  return bytesFromBigInt(new BigInteger(x).modPow(new BigInteger(y), new BigInteger(m)), 256)\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./bin.js","module.exports = (__webpack_require__(0))(128);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ../node_modules/bluebird/js/browser/bluebird.js from dll-reference vendor\n// module id = 2\n// module chunks = 0","module.exports = (__webpack_require__(0))(131);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ../node_modules/ramda/index.js from dll-reference vendor\n// module id = 3\n// module chunks = 0","import Promise from 'bluebird'\r\n/**\r\n * Defered promise like in Q and $q\r\n *\r\n * @returns {{ resolve: (res: any) => void, reject: (res: any) => void, promise: Promise<{}> }}\r\n */\r\nexport const blueDefer = () => {\r\n  let resolve, reject\r\n  const promise = new Promise((rs, rj) => {\r\n    resolve = rs\r\n    reject = rj\r\n  })\r\n  return {\r\n    resolve,\r\n    reject,\r\n    promise\r\n  }\r\n}\r\n\r\nexport default blueDefer\n\n\n// WEBPACK FOOTER //\n// ./defer.js","import isNode from 'detect-node'\r\n\r\nimport { TimeOffset } from '../store'\r\nimport { nextRandomInt, longFromInts } from '../bin'\r\n\r\nexport const tsNow = seconds => {\r\n  let t = +new Date()\r\n  //eslint-disable-next-line\r\n  if (!isNode) t += window.tsOffset || 0\r\n  return seconds\r\n    ? Math.floor(t / 1000)\r\n    : t\r\n}\r\n\r\nconst logTimer = (new Date()).getTime()\r\n\r\nexport const dTime = () => `[${(((new Date()).getTime() -logTimer) / 1000).toFixed(3)}]`\r\n\r\nlet lastMessageID = [0, 0]\r\nlet timerOffset = 0\r\n\r\nconst offset = TimeOffset.get()\r\nif (offset) timerOffset = offset\r\n\r\nconst generateMessageID = () => {\r\n  const timeTicks = tsNow(),\r\n        timeSec = Math.floor(timeTicks / 1000) + timerOffset,\r\n        timeMSec = timeTicks % 1000,\r\n        random = nextRandomInt(0xFFFF)\r\n\r\n  let messageID = [timeSec, timeMSec << 21 | random << 3 | 4]\r\n  if (lastMessageID[0] > messageID[0] ||\r\n    lastMessageID[0] == messageID[0] && lastMessageID[1] >= messageID[1]) {\r\n    messageID = [lastMessageID[0], lastMessageID[1] + 4]\r\n  }\r\n\r\n  lastMessageID = messageID\r\n\r\n  // console.log('generated msg id', messageID, timerOffset)\r\n\r\n  return longFromInts(messageID[0], messageID[1])\r\n}\r\n\r\nexport const applyServerTime = (serverTime, localTime) => {\r\n  const newTimeOffset = serverTime - Math.floor((localTime || tsNow()) / 1000)\r\n  const changed = Math.abs(timerOffset - newTimeOffset) > 10\r\n  TimeOffset.set(newTimeOffset)\r\n\r\n  lastMessageID = [0, 0]\r\n  timerOffset = newTimeOffset\r\n  console.log(dTime(), 'Apply server time', serverTime, localTime, newTimeOffset, changed)\r\n\r\n  return changed\r\n}\r\n\r\nexport { generateMessageID as generateID }\r\n\n\n\n// WEBPACK FOOTER //\n// ./service/time-manager.js","import Promise from 'bluebird'\r\n\r\nimport { clone, merge, unnest,\r\n  lensPath, unapply, pipe,\r\n  set, split, chain, memoize,\r\n  complement, is, isEmpty, either, reject, over,\r\n  isNil, view, when, __, dissocPath, has, curry,\r\n  objOf, prop, compose, lensProp, omit } from 'ramda'\r\n\r\nexport const ValueStore = () => {\r\n  let val = null\r\n\r\n  return {\r\n    get: () => clone(val),\r\n    set: newVal => val = newVal\r\n  }\r\n}\r\n\r\nexport const ValueStoreMap = () => {\r\n  const val = new Map\r\n\r\n  return {\r\n    get: key => clone(val.get(key)),\r\n    set: (key, newVal) => val.set(key, newVal)\r\n  }\r\n}\r\n\r\nexport const TimeOffset = ValueStore()\r\nexport const dcList = ValueStoreMap()\r\n\r\n\r\nexport const PureStorage = {\r\n  get     : (...keys) => new Promise(rs => ConfigStorage.get(keys, rs)),\r\n  set     : obj => new Promise(rs => ConfigStorage.set(obj, rs)),\r\n  remove  : (...keys) => new Promise(rs => ConfigStorage.remove(...keys, rs)),\r\n  noPrefix: () => ConfigStorage.noPrefix(),\r\n  clear   : () => new Promise(rs => ConfigStorage.clear(rs))\r\n}\r\n\r\nconst flatArgs = unapply( unnest )\r\nconst splitter = chain(split('.'))\r\nconst rejecter = either(\r\n  complement(\r\n    is(String)),\r\n  isEmpty)\r\n\r\n\r\nconst flatPath = memoize(pipe(\r\n  flatArgs,\r\n  splitter,\r\n  reject(rejecter)))\r\n\r\nconst pipeWith = (ln, ctx) =>\r\n  (...funcs) =>\r\n    pipe(view(ln), ...funcs)(ctx)\r\n\r\nexport class SyncStorage {\r\n  constructor(def = {}) {\r\n    this.storage = def\r\n  }\r\n  set = val => this.storage = val\r\n  fpSave = func => pipe( func, this.set )\r\n  createOnNil = when(\r\n    pipe(view(__, this.storage), isNil),\r\n    this.fpSave( set(__, {}, this.storage) )\r\n  )\r\n  set save(val) {\r\n    this.storage = merge(this.storage, val)\r\n  }\r\n  subtree = (...pathKeys) => {\r\n    const args = flatPath(...pathKeys)\r\n    const ln = lensPath(args)\r\n    this.createOnNil(ln)\r\n    //console.log(this.lensNil(ln))\r\n    const pipeWithLn = pipeWith(ln, this.storage)\r\n    const overSubtree = fn => this.fpSave( over(ln, fn ) )(this.storage)\r\n    return {\r\n      // has   : field => overSubtree( has ( field ) ),\r\n      field: key => ({\r\n        has     : () => pipeWithLn( has ( key ) ),\r\n        view    : () => pipeWithLn( prop ( key ) ),\r\n        set     : val => overSubtree( merge( objOf(key, val) ) ),\r\n        pipeWith: (...funcs) => pipeWithLn( prop ( key ), ...funcs ),\r\n        pipeOver: (...funcs) => this.fpSave(\r\n          over(\r\n            compose( ln, lensProp(key) ),\r\n            pipe(...funcs)\r\n          )\r\n        )(this.storage),\r\n        remove: () => overSubtree( omit([ key ]) )\r\n      }),\r\n      has    : key => pipeWithLn( has ( key ) ),\r\n      view   : () => view(ln, this.storage),\r\n      set    : this.fpSave( set(ln, __, this.storage) ),\r\n      over   : overSubtree,\r\n      remove : () => this.fpSave( dissocPath(args) )(this.storage),\r\n      without: (...keys) => overSubtree( omit(keys) )\r\n    }\r\n  }\r\n}\r\n\r\nexport const innerStore = new SyncStorage\n\n\n// WEBPACK FOOTER //\n// ./store.js","import { is, isNil, type } from 'ramda'\r\nimport { bigint, bigStringInt, uintToInt, intToUint, bytesToHex,\r\n  gzipUncompress, bytesToArrayBuffer } from './bin'\r\n\r\nexport class TLSerialization {\r\n  constructor({ mtproto = false, startMaxLength = 2048 /* 2Kb */ } = {}) {\r\n    this.maxLength = startMaxLength\r\n    this.offset = 0 // in bytes\r\n\r\n    this.createBuffer()\r\n\r\n    // this.debug = options.debug !== undefined ? options.debug : Config.Modes.debug\r\n    this.mtproto = mtproto\r\n  }\r\n\r\n  createBuffer() {\r\n    this.buffer = new ArrayBuffer(this.maxLength)\r\n    this.intView = new Int32Array(this.buffer)\r\n    this.byteView = new Uint8Array(this.buffer)\r\n  }\r\n\r\n  getArray() {\r\n    const resultBuffer = new ArrayBuffer(this.offset)\r\n    const resultArray = new Int32Array(resultBuffer)\r\n\r\n    resultArray.set(this.intView.subarray(0, this.offset / 4))\r\n\r\n    return resultArray\r\n  }\r\n\r\n  getBuffer() {\r\n    return this.getArray().buffer\r\n  }\r\n\r\n  getBytes(typed) {\r\n    if (typed) {\r\n      const resultBuffer = new ArrayBuffer(this.offset)\r\n      const resultArray = new Uint8Array(resultBuffer)\r\n\r\n      resultArray.set(this.byteView.subarray(0, this.offset))\r\n\r\n      return resultArray\r\n    }\r\n\r\n    const bytes = []\r\n    for (let i = 0; i < this.offset; i++) {\r\n      bytes.push(this.byteView[i])\r\n    }\r\n    return bytes\r\n  }\r\n\r\n  checkLength(needBytes) {\r\n    if (this.offset + needBytes < this.maxLength) {\r\n      return\r\n    }\r\n\r\n    console.trace('Increase buffer', this.offset, needBytes, this.maxLength)\r\n    this.maxLength = Math.ceil(Math.max(this.maxLength * 2, this.offset + needBytes + 16) / 4) * 4\r\n    const previousBuffer = this.buffer\r\n    const previousArray = new Int32Array(previousBuffer)\r\n\r\n    this.createBuffer()\r\n\r\n    new Int32Array(this.buffer).set(previousArray)\r\n  }\r\n\r\n  writeInt(i, field) {\r\n    this.debug && console.log('>>>', i.toString(16), i, field)\r\n\r\n    this.checkLength(4)\r\n    this.intView[this.offset / 4] = i\r\n    this.offset += 4\r\n  }\r\n\r\n  storeIntString = (value, field) => {\r\n    const valType = type(value)\r\n    switch (true) {\r\n      case is(String, value): return this.storeString(value, field)\r\n      case is(Number, value): return this.storeInt(value, field)\r\n      default: throw new Error(`tl storeIntString field ${field} value type ${valType}`)\r\n    }\r\n  }\r\n\r\n  storeInt = (i, field = '') => {\r\n    this.writeInt(i, `${ field }:int`)\r\n  }\r\n\r\n  storeBool(i, field = '') {\r\n    if (i) {\r\n      this.writeInt(0x997275b5, `${ field }:bool`)\r\n    } else {\r\n      this.writeInt(0xbc799737, `${ field }:bool`)\r\n    }\r\n  }\r\n\r\n  storeLongP(iHigh, iLow, field) {\r\n    this.writeInt(iLow, `${ field }:long[low]`)\r\n    this.writeInt(iHigh, `${ field }:long[high]`)\r\n  }\r\n\r\n  storeLong(sLong, field = '') {\r\n    if (is(Array, sLong))\r\n      return sLong.length === 2\r\n        ? this.storeLongP(sLong[0], sLong[1], field)\r\n        : this.storeIntBytes(sLong, 64, field)\r\n\r\n    if (typeof sLong !== 'string')\r\n      sLong = sLong\r\n        ? sLong.toString()\r\n        : '0'\r\n    const divRem = bigStringInt(sLong).divideAndRemainder(bigint(0x100000000))\r\n\r\n    this.writeInt(intToUint(divRem[1].intValue()), `${ field }:long[low]`)\r\n    this.writeInt(intToUint(divRem[0].intValue()), `${ field }:long[high]`)\r\n  }\r\n\r\n  storeDouble(f, field = '') {\r\n    const buffer = new ArrayBuffer(8)\r\n    const intView = new Int32Array(buffer)\r\n    const doubleView = new Float64Array(buffer)\r\n\r\n    doubleView[0] = f\r\n\r\n    this.writeInt(intView[0], `${ field }:double[low]`)\r\n    this.writeInt(intView[1], `${ field }:double[high]`)\r\n  }\r\n\r\n  storeString(s, field = '') {\r\n    this.debug && console.log('>>>', s, `${ field }:string`)\r\n\r\n    if (s === undefined) {\r\n      s = ''\r\n    }\r\n    const sUTF8 = unescape(encodeURIComponent(s))\r\n\r\n    this.checkLength(sUTF8.length + 8)\r\n\r\n    const len = sUTF8.length\r\n    if (len <= 253) {\r\n      this.byteView[this.offset++] = len\r\n    } else {\r\n      this.byteView[this.offset++] = 254\r\n      this.byteView[this.offset++] = len & 0xFF\r\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8\r\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16\r\n    }\r\n    for (let i = 0; i < len; i++) {\r\n      this.byteView[this.offset++] = sUTF8.charCodeAt(i)\r\n    }\r\n\r\n    // Padding\r\n    while (this.offset % 4) {\r\n      this.byteView[this.offset++] = 0\r\n    }\r\n  }\r\n\r\n  storeBytes(bytes, field = '') {\r\n    if (bytes instanceof ArrayBuffer) {\r\n      bytes = new Uint8Array(bytes)\r\n    }\r\n    else if (bytes === undefined) {\r\n      bytes = []\r\n    }\r\n    this.debug && console.log('>>>', bytesToHex(bytes), `${ field }:bytes`)\r\n\r\n    const len = bytes.byteLength || bytes.length\r\n    this.checkLength(len + 8)\r\n    if (len <= 253) {\r\n      this.byteView[this.offset++] = len\r\n    } else {\r\n      this.byteView[this.offset++] = 254\r\n      this.byteView[this.offset++] = len & 0xFF\r\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8\r\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16\r\n    }\r\n\r\n    this.byteView.set(bytes, this.offset)\r\n    this.offset += len\r\n\r\n    // Padding\r\n    while (this.offset % 4) {\r\n      this.byteView[this.offset++] = 0\r\n    }\r\n  }\r\n\r\n  storeIntBytes(bytes, bits, field = '') {\r\n    if (bytes instanceof ArrayBuffer) {\r\n      bytes = new Uint8Array(bytes)\r\n    }\r\n    const len = bytes.length\r\n    if (bits % 32 || len * 8 != bits) {\r\n      throw new Error(`Invalid bits: ${  bits  }, ${  bytes.length}`)\r\n    }\r\n\r\n    this.debug && console.log('>>>', bytesToHex(bytes), `${ field }:int${  bits}`)\r\n    this.checkLength(len)\r\n\r\n    this.byteView.set(bytes, this.offset)\r\n    this.offset += len\r\n  }\r\n\r\n  storeRawBytes(bytes, field = '') {\r\n    if (bytes instanceof ArrayBuffer) {\r\n      bytes = new Uint8Array(bytes)\r\n    }\r\n    const len = bytes.length\r\n\r\n    this.debug && console.log('>>>', bytesToHex(bytes), field)\r\n    this.checkLength(len)\r\n\r\n    this.byteView.set(bytes, this.offset)\r\n    this.offset += len\r\n  }\r\n\r\n  storeMethod(methodName, params) {\r\n    const schema = this.mtproto\r\n      ? Config.Schema.MTProto\r\n      : Config.Schema.API\r\n    let methodData = false\r\n\r\n    for (let i = 0; i < schema.methods.length; i++) {\r\n      if (schema.methods[i].method == methodName) {\r\n        methodData = schema.methods[i]\r\n        break\r\n      }\r\n    }\r\n    if (!methodData) {\r\n      throw new Error(`No method ${  methodName  } found`)\r\n    }\r\n\r\n    this.storeInt(intToUint(methodData.id), `${methodName  }[id]`)\r\n\r\n    let param, type\r\n    let condType\r\n    let fieldBit\r\n    const len = methodData.params.length\r\n    for (let i = 0; i < len; i++) {\r\n      param = methodData.params[i]\r\n      type = param.type\r\n      if (type.indexOf('?') !== -1) {\r\n        condType = type.split('?')\r\n        fieldBit = condType[0].split('.')\r\n        if (!(params[fieldBit[0]] & 1 << fieldBit[1])) {\r\n          continue\r\n        }\r\n        type = condType[1]\r\n      }\r\n\r\n      this.storeObject(params[param.name], type, `${methodName  }[${  param.name  }]`)\r\n    }\r\n\r\n    return methodData.type\r\n  }\r\n\r\n  storeObject(obj, type, field) {\r\n    switch (type) {\r\n      case '#':\r\n      case 'int':\r\n        return this.storeInt(obj, field)\r\n      case 'long':\r\n        return this.storeLong(obj, field)\r\n      case 'int128':\r\n        return this.storeIntBytes(obj, 128, field)\r\n      case 'int256':\r\n        return this.storeIntBytes(obj, 256, field)\r\n      case 'int512':\r\n        return this.storeIntBytes(obj, 512, field)\r\n      case 'string':\r\n        return this.storeString(obj, field)\r\n      case 'bytes':\r\n        return this.storeBytes(obj, field)\r\n      case 'double':\r\n        return this.storeDouble(obj, field)\r\n      case 'Bool':\r\n        return this.storeBool(obj, field)\r\n      case 'true':\r\n        return\r\n    }\r\n\r\n    if (is(Array, obj)) {\r\n      if (type.substr(0, 6) == 'Vector') {\r\n        this.writeInt(0x1cb5c415, `${field  }[id]`)\r\n      }\r\n      else if (type.substr(0, 6) != 'vector') {\r\n        throw new Error(`Invalid vector type ${  type}`)\r\n      }\r\n      const itemType = type.substr(7, type.length - 8) // for \"Vector<itemType>\"\r\n      this.writeInt(obj.length, `${field  }[count]`)\r\n      for (let i = 0; i < obj.length; i++) {\r\n        this.storeObject(obj[i], itemType, `${field  }[${  i  }]`)\r\n      }\r\n      return true\r\n    }\r\n    else if (type.substr(0, 6).toLowerCase() == 'vector') {\r\n      throw new Error('Invalid vector object')\r\n    }\r\n\r\n    if (!is(Object, obj))\r\n      throw new Error(`Invalid object for type ${  type}`)\r\n\r\n    const schema = this.mtproto\r\n      ? Config.Schema.MTProto\r\n      : Config.Schema.API\r\n    const predicate = obj['_']\r\n    let isBare = false\r\n    let constructorData = false\r\n\r\n    if (isBare = type.charAt(0) == '%')\r\n      type = type.substr(1)\r\n\r\n    for (let i = 0; i < schema.constructors.length; i++) {\r\n      if (schema.constructors[i].predicate == predicate) {\r\n        constructorData = schema.constructors[i]\r\n        break\r\n      }\r\n    }\r\n    if (!constructorData)\r\n      throw new Error(`No predicate ${  predicate  } found`)\r\n\r\n    if (predicate == type)\r\n      isBare = true\r\n\r\n    if (!isBare)\r\n      this.writeInt(intToUint(constructorData.id), `${field  }[${  predicate  }][id]`)\r\n\r\n    let param\r\n    let condType\r\n    let fieldBit\r\n    const len = constructorData.params.length\r\n    for (let i = 0; i < len; i++) {\r\n      param = constructorData.params[i]\r\n      type = param.type\r\n      if (type.indexOf('?') !== -1) {\r\n        condType = type.split('?')\r\n        fieldBit = condType[0].split('.')\r\n        if (!(obj[fieldBit[0]] & 1 << fieldBit[1])) {\r\n          continue\r\n        }\r\n        type = condType[1]\r\n      }\r\n\r\n      this.storeObject(obj[param.name], type, `${field  }[${  predicate  }][${  param.name  }]`)\r\n    }\r\n\r\n    return constructorData.type\r\n  }\r\n\r\n}\r\n\r\nexport class TLDeserialization {\r\n  constructor(buffer, { mtproto = false, override = {} } = {}) {\r\n    this.offset = 0 // in bytes\r\n    this.override = override\r\n\r\n    this.buffer = buffer\r\n    this.intView = new Uint32Array(this.buffer)\r\n    this.byteView = new Uint8Array(this.buffer)\r\n\r\n      // this.debug = options.debug !== undefined ? options.debug : Config.Modes.debug\r\n    this.mtproto = mtproto\r\n    return this\r\n  }\r\n\r\n  readInt(field) {\r\n    if (this.offset >= this.intView.length * 4) {\r\n      throw new Error(`Nothing to fetch: ${  field}`)\r\n    }\r\n\r\n    const i = this.intView[this.offset / 4]\r\n\r\n    this.debug && console.log('<<<', i.toString(16), i, field)\r\n\r\n    this.offset += 4\r\n\r\n    return i\r\n  }\r\n\r\n  fetchInt(field = '') {\r\n    return this.readInt(`${ field }:int`)\r\n  }\r\n\r\n  fetchDouble(field = '') {\r\n    const buffer = new ArrayBuffer(8)\r\n    const intView = new Int32Array(buffer)\r\n    const doubleView = new Float64Array(buffer)\r\n\r\n    intView[0] = this.readInt(`${ field }:double[low]`),\r\n      intView[1] = this.readInt(`${ field }:double[high]`)\r\n\r\n    return doubleView[0]\r\n  }\r\n\r\n  fetchLong(field = '') {\r\n    const iLow = this.readInt(`${ field }:long[low]`)\r\n    const iHigh = this.readInt(`${ field }:long[high]`)\r\n\r\n    const longDec = bigint(iHigh)\r\n      .shiftLeft(32)\r\n      .add(bigint(iLow))\r\n      .toString()\r\n\r\n    return longDec\r\n  }\r\n\r\n  fetchBool(field = '') {\r\n    const i = this.readInt(`${ field }:bool`)\r\n    if (i == 0x997275b5) {\r\n      return true\r\n    } else if (i == 0xbc799737) {\r\n      return false\r\n    }\r\n\r\n    this.offset -= 4\r\n    return this.fetchObject('Object', field)\r\n  }\r\n\r\n  fetchString(field = '') {\r\n    let len = this.byteView[this.offset++]\r\n\r\n    if (len == 254) {\r\n      len = this.byteView[this.offset++] |\r\n          this.byteView[this.offset++] << 8 |\r\n          this.byteView[this.offset++] << 16\r\n    }\r\n\r\n    let sUTF8 = ''\r\n    for (let i = 0; i < len; i++) {\r\n      sUTF8 += String.fromCharCode(this.byteView[this.offset++])\r\n    }\r\n\r\n      // Padding\r\n    while (this.offset % 4) {\r\n      this.offset++\r\n    }\r\n    let s\r\n    try {\r\n      s = decodeURIComponent(escape(sUTF8))\r\n    } catch (e) {\r\n      s = sUTF8\r\n    }\r\n\r\n    this.debug && console.log('<<<', s, `${ field }:string`)\r\n\r\n    return s\r\n  }\r\n\r\n  fetchBytes(field = '') {\r\n    let len = this.byteView[this.offset++]\r\n\r\n    if (len == 254) {\r\n      len = this.byteView[this.offset++] |\r\n          this.byteView[this.offset++] << 8 |\r\n          this.byteView[this.offset++] << 16\r\n    }\r\n\r\n    const bytes = this.byteView.subarray(this.offset, this.offset + len)\r\n    this.offset += len\r\n\r\n    // Padding\r\n    while (this.offset % 4)\r\n      this.offset++\r\n\r\n    this.debug && console.log('<<<', bytesToHex(bytes), `${ field }:bytes`)\r\n\r\n    return bytes\r\n  }\r\n\r\n  fetchIntBytes(bits, typed, field = '') {\r\n    if (bits % 32)\r\n      throw new Error(`Invalid bits: ${  bits}`)\r\n\r\n    const len = bits / 8\r\n    if (typed) {\r\n      const result = this.byteView.subarray(this.offset, this.offset + len)\r\n      this.offset += len\r\n      return result\r\n    }\r\n\r\n    const bytes = []\r\n    for (let i = 0; i < len; i++) {\r\n      bytes.push(this.byteView[this.offset++])\r\n    }\r\n\r\n    this.debug && console.log('<<<', bytesToHex(bytes), `${ field }:int${  bits}`)\r\n\r\n    return bytes\r\n  }\r\n\r\n  fetchRawBytes(len, typed, field = '') {\r\n    if (len === false) {\r\n      len = this.readInt(`${ field }_length`)\r\n      if (len > this.byteView.byteLength)\r\n        throw new Error(`Invalid raw bytes length: ${  len  }, buffer len: ${  this.byteView.byteLength}`)\r\n    }\r\n    let bytes\r\n    if (typed) {\r\n      bytes = new Uint8Array(len)\r\n      bytes.set(this.byteView.subarray(this.offset, this.offset + len))\r\n      this.offset += len\r\n      return bytes\r\n    }\r\n\r\n    bytes = []\r\n    for (let i = 0; i < len; i++)\r\n      bytes.push(this.byteView[this.offset++])\r\n\r\n    this.debug && console.log('<<<', bytesToHex(bytes), field)\r\n\r\n    return bytes\r\n  }\r\n\r\n  fetchObject(type, field) {\r\n    switch (type) {\r\n      case '#':\r\n      case 'int':\r\n        return this.fetchInt(field)\r\n      case 'long':\r\n        return this.fetchLong(field)\r\n      case 'int128':\r\n        return this.fetchIntBytes(128, false, field)\r\n      case 'int256':\r\n        return this.fetchIntBytes(256, false, field)\r\n      case 'int512':\r\n        return this.fetchIntBytes(512, false, field)\r\n      case 'string':\r\n        return this.fetchString(field)\r\n      case 'bytes':\r\n        return this.fetchBytes(field)\r\n      case 'double':\r\n        return this.fetchDouble(field)\r\n      case 'Bool':\r\n        return this.fetchBool(field)\r\n      case 'true':\r\n        return true\r\n    }\r\n    let fallback\r\n    field = field || type || 'Object'\r\n\r\n    if (type.substr(0, 6) == 'Vector' || type.substr(0, 6) == 'vector') {\r\n      if (type.charAt(0) == 'V') {\r\n        const constructor = this.readInt(`${field  }[id]`)\r\n        const constructorCmp = uintToInt(constructor)\r\n\r\n        if (constructorCmp == 0x3072cfa1) { // Gzip packed\r\n          const compressed = this.fetchBytes(`${field  }[packed_string]`)\r\n          const uncompressed = gzipUncompress(compressed)\r\n          const buffer = bytesToArrayBuffer(uncompressed)\r\n          const newDeserializer = new TLDeserialization(buffer)\r\n\r\n          return newDeserializer.fetchObject(type, field)\r\n        }\r\n        if (constructorCmp != 0x1cb5c415) {\r\n          throw new Error(`Invalid vector constructor ${  constructor}`)\r\n        }\r\n      }\r\n      const len = this.readInt(`${field  }[count]`)\r\n      const result = []\r\n      if (len > 0) {\r\n        const itemType = type.substr(7, type.length - 8) // for \"Vector<itemType>\"\r\n        for (let i = 0; i < len; i++)\r\n          result.push(this.fetchObject(itemType, `${field  }[${  i  }]`))\r\n      }\r\n\r\n      return result\r\n    }\r\n\r\n    const schema = this.mtproto\r\n      ? Config.Schema.MTProto\r\n      : Config.Schema.API\r\n    let predicate = false\r\n    let constructorData = false\r\n\r\n    if (type.charAt(0) == '%') {\r\n      const checkType = type.substr(1)\r\n      for (let i = 0; i < schema.constructors.length; i++) {\r\n        if (schema.constructors[i].type == checkType) {\r\n          constructorData = schema.constructors[i]\r\n          break\r\n        }\r\n      }\r\n      if (!constructorData) {\r\n        throw new Error(`Constructor not found for type: ${  type}`)\r\n      }\r\n    }\r\n    else if (type.charAt(0) >= 97 && type.charAt(0) <= 122) {\r\n      for (let i = 0; i < schema.constructors.length; i++) {\r\n        if (schema.constructors[i].predicate == type) {\r\n          constructorData = schema.constructors[i]\r\n          break\r\n        }\r\n      }\r\n      if (!constructorData) {\r\n        throw new Error(`Constructor not found for predicate: ${  type}`)\r\n      }\r\n    } else {\r\n      const constructor = this.readInt(`${field  }[id]`)\r\n      const constructorCmp = uintToInt(constructor)\r\n\r\n      if (constructorCmp == 0x3072cfa1) { // Gzip packed\r\n        const compressed = this.fetchBytes(`${field  }[packed_string]`)\r\n        const uncompressed = gzipUncompress(compressed)\r\n        const buffer = bytesToArrayBuffer(uncompressed)\r\n        const newDeserializer = new TLDeserialization(buffer)\r\n\r\n        return newDeserializer.fetchObject(type, field)\r\n      }\r\n\r\n      let index = schema.constructorsIndex\r\n      if (!index) {\r\n        schema.constructorsIndex = index = {}\r\n        for (let i = 0; i < schema.constructors.length; i++) {\r\n          index[schema.constructors[i].id] = i\r\n        }\r\n      }\r\n      let i = index[constructorCmp]\r\n      if (i) {\r\n        constructorData = schema.constructors[i]\r\n      }\r\n\r\n      fallback = false\r\n      if (!constructorData && this.mtproto) {\r\n        const schemaFallback = Config.Schema.API\r\n        for (i = 0; i < schemaFallback.constructors.length; i++) {\r\n          if (schemaFallback.constructors[i].id == constructorCmp) {\r\n            constructorData = schemaFallback.constructors[i]\r\n\r\n            delete this.mtproto\r\n            fallback = true\r\n            break\r\n          }\r\n        }\r\n      }\r\n      if (!constructorData) {\r\n        throw new Error(`Constructor not found: ${  constructor  } ${  this.fetchInt()  } ${  this.fetchInt()}`)\r\n      }\r\n    }\r\n\r\n    predicate = constructorData.predicate\r\n\r\n    const result = { '_': predicate }\r\n    const overrideKey = (this.mtproto ? 'mt_' : '') + predicate\r\n\r\n    if (this.override[overrideKey]) {\r\n      this.override[overrideKey].apply(this, [result, `${field  }[${  predicate  }]`])\r\n    } else {\r\n      let param, isCond\r\n      let condType, fieldBit\r\n      let value\r\n      const len = constructorData.params.length\r\n      for (let i = 0; i < len; i++) {\r\n        param = constructorData.params[i]\r\n        type = param.type\r\n        if (type === '#' && isNil(result.pFlags))\r\n          result.pFlags = {}\r\n\r\n        isCond = type.indexOf('?') !== -1\r\n        if (isCond) {\r\n          condType = type.split('?')\r\n          fieldBit = condType[0].split('.')\r\n          if (!(result[fieldBit[0]] & 1 << fieldBit[1]))\r\n            continue\r\n          type = condType[1]\r\n        }\r\n\r\n        value = this.fetchObject(type, `${field  }[${  predicate  }][${  param.name  }]`)\r\n\r\n        if (isCond && type === 'true')\r\n          result.pFlags[param.name] = value\r\n        else\r\n          result[param.name] = value\r\n      }\r\n    }\r\n\r\n    if (fallback)\r\n      this.mtproto = true\r\n\r\n    return result\r\n  }\r\n\r\n  getOffset() {\r\n    return this.offset\r\n  }\r\n\r\n  fetchEnd() {\r\n    if (this.offset !== this.byteView.length)\r\n      throw new Error('Fetch end with non-empty buffer')\r\n    return true\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./tl.js","import { when, is, identity } from 'ramda'\r\nimport isNode from 'detect-node'\r\n\r\nimport blueDefer from './defer'\r\nimport smartTimeout from './smart-timeout'\r\nimport { convertToUint8Array, sha1HashSync, sha256HashSync,\r\n  aesEncryptSync, aesDecryptSync, convertToByteArray, convertToArrayBuffer,\r\n  pqPrimeFactorization, bytesModPow } from './bin'\r\n\r\nconst convertIfArray = when(is(Array), convertToUint8Array)\r\nlet webWorker = false\r\nlet taskID = 0\r\nconst awaiting = {}\r\nconst webCrypto = isNode\r\n  ? false\r\n  //eslint-disable-next-line\r\n  : window.crypto.subtle || window.crypto.webkitSubtle //TODO remove browser depends\r\n  /* || window.msCrypto && window.msCrypto.subtle*/\r\nlet useSha1Crypto = true//webCrypto && webCrypto.digest !== undefined\r\nlet useSha256Crypto = true//webCrypto && webCrypto.digest !== undefined\r\nconst finalizeTask = (taskID, result) => {\r\n  const deferred = awaiting[taskID]\r\n  if (deferred !== undefined) {\r\n    // console.log(rework_d_T(), 'CW done')\r\n    deferred.resolve(result) //TODO Possibly, can be used as\r\n    delete awaiting[taskID]  //\r\n  }                          //    deferred = Promise.resolve()\r\n}                            //    deferred.resolve( result )\r\n// window.Worker\r\nconst workerEnable = false\r\nif (workerEnable) { //TODO worker disabled here\r\n  //eslint-disable-next-line\r\n  const tmpWorker = new Worker('js/lib/crypto_worker.js')``\r\n  tmpWorker.onmessage = e =>\r\n    webWorker\r\n      ? finalizeTask(e.data.taskID, e.data.result)\r\n      : webWorker = tmpWorker\r\n  tmpWorker.onerror = error => {\r\n    console.error('CW error', error, error.stack)\r\n    webWorker = false\r\n  }\r\n}\r\n\r\nconst performTaskWorker = (task, params, embed) => {\r\n  // console.log(rework_d_T(), 'CW start', task)\r\n  const deferred = blueDefer()\r\n\r\n  awaiting[taskID] = deferred\r\n\r\n  params.task = task\r\n  params.taskID = taskID\r\n  ;(embed || webWorker).postMessage(params)\r\n\r\n  taskID++\r\n\r\n  return deferred.promise\r\n}\r\n\r\nconst sha1Hash = bytes => {\r\n  if (useSha1Crypto) {\r\n    // We don't use buffer since typedArray.subarray(...).buffer gives the whole buffer and not sliced one.\r\n    // webCrypto.digest supports typed array\r\n    const bytesTyped = convertIfArray(bytes)\r\n    // console.log(rework_d_T(), 'Native sha1 start')\r\n    return webCrypto.digest({ name: 'SHA-1' }, bytesTyped).then(digest =>\r\n      // console.log(rework_d_T(), 'Native sha1 done')\r\n        digest, e => {\r\n      console.error('Crypto digest error', e)\r\n      useSha1Crypto = false\r\n      return sha1HashSync(bytes)\r\n    })\r\n  }\r\n  return smartTimeout.promise(sha1HashSync, 0, bytes)\r\n}\r\n\r\nconst sha256Hash = bytes => {\r\n  if (useSha256Crypto) {\r\n    const bytesTyped = convertIfArray(bytes)\r\n    // console.log(rework_d_T(), 'Native sha1 start')\r\n    return webCrypto.digest({ name: 'SHA-256' }, bytesTyped)\r\n      .then(identity\r\n        // console.log(rework_d_T(), 'Native sha1 done')\r\n        , e => {\r\n          console.error('Crypto digest error', e)\r\n          useSha256Crypto = false\r\n          return sha256HashSync(bytes)\r\n        })\r\n  }\r\n  return smartTimeout.promise(sha256HashSync, 0, bytes)\r\n}\r\n\r\nconst aesEncrypt = (bytes, keyBytes, ivBytes) =>\r\n  smartTimeout.promise(() => convertToArrayBuffer(aesEncryptSync(bytes, keyBytes, ivBytes)))\r\n\r\nconst aesDecrypt = (encryptedBytes, keyBytes, ivBytes) =>\r\n  smartTimeout.promise(() => convertToArrayBuffer(\r\n    aesDecryptSync(encryptedBytes, keyBytes, ivBytes)))\r\n\r\nconst factorize = bytes => {\r\n  bytes = convertToByteArray(bytes)\r\n  return webWorker\r\n    ? performTaskWorker('factorize', { bytes })\r\n    : smartTimeout.promise(() => pqPrimeFactorization(bytes))\r\n}\r\n\r\nconst modPow = (x, y, m) => webWorker\r\n  ? performTaskWorker('mod-pow', {\r\n    x,\r\n    y,\r\n    m\r\n  })\r\n  : smartTimeout.promise(() => bytesModPow(x, y, m))\r\n\r\nexport const CryptoWorker = {\r\n  sha1Hash,\r\n  sha256Hash,\r\n  aesEncrypt,\r\n  aesDecrypt,\r\n  factorize,\r\n  modPow\r\n}\r\n\r\nexport default CryptoWorker\n\n\n// WEBPACK FOOTER //\n// ./crypto.js","import axios from 'axios'\r\n\r\nexport const httpClient = axios.create()\r\ndelete httpClient.defaults.headers.post['Content-Type']\r\ndelete httpClient.defaults.headers.common['Accept']\r\n\r\nexport default httpClient\n\n\n// WEBPACK FOOTER //\n// ./http.js","const sslSubdomains = ['pluto', 'venus', 'aurora', 'vesta', 'flora']\r\n\r\nconst dcOptions = Config.Modes.test\r\n  ? [\r\n    { id: 1, host: '149.154.175.10',  port: 80 },\r\n    { id: 2, host: '149.154.167.40',  port: 80 },\r\n    { id: 3, host: '149.154.175.117', port: 80 }\r\n  ]\r\n  : [\r\n    { id: 1, host: '149.154.175.50',  port: 80 },\r\n    { id: 2, host: '149.154.167.51',  port: 80 },\r\n    { id: 3, host: '149.154.175.100', port: 80 },\r\n    { id: 4, host: '149.154.167.91',  port: 80 },\r\n    { id: 5, host: '149.154.171.5',   port: 80 }\r\n  ]\r\n\r\nconst chosenServers = {}\r\n\r\nexport const chooseServer = (dcID, upload) => {\r\n  if (chosenServers[dcID] === undefined) {\r\n    let chosenServer = false,\r\n        i, dcOption\r\n\r\n    if (Config.Modes.ssl || !Config.Modes.http) {\r\n      const subdomain = sslSubdomains[dcID - 1] + (upload ? '-1' : '')\r\n      const path = Config.Modes.test\r\n        ? 'apiw_test1'\r\n        : 'apiw1'\r\n      chosenServer = `https://${  subdomain  }.web.telegram.org/${  path}`\r\n      return chosenServer\r\n    }\r\n\r\n    for (i = 0; i < dcOptions.length; i++) {\r\n      dcOption = dcOptions[i]\r\n      if (dcOption.id == dcID) {\r\n        chosenServer = `http://${  dcOption.host  }${dcOption.port != 80 ? `:${  dcOption.port}` : ''  }/apiw1`\r\n        break\r\n      }\r\n    }\r\n    chosenServers[dcID] = chosenServer\r\n  }\r\n\r\n  return chosenServers[dcID]\r\n}\n\n\n// WEBPACK FOOTER //\n// ./service/dc-configurator.js","import { SecureRandom } from 'jsbn'\r\n\r\nexport const random = new SecureRandom()\r\n\r\nexport default random\n\n\n// WEBPACK FOOTER //\n// ./service/secure-random.js","import Promise from 'bluebird'\r\n\r\nconst cancelToken = Symbol('cancel token')\r\n\r\nconst timeoutRefs = new WeakSet\r\n\r\nconst pause = delay => new Promise(r => setTimeout(r, delay))\r\n\r\nexport const smartTimeout = (fn, delay, ...args) => {\r\n  const newToken = Symbol('cancel id')\r\n  const checkRun = () => {\r\n    if (timeoutRefs.has(newToken)) {\r\n      timeoutRefs.delete(newToken)\r\n      return fn(...args)\r\n    } else return false\r\n  }\r\n  const promise = pause(delay).then(checkRun)\r\n  promise[cancelToken] = newToken\r\n  return promise\r\n}\r\n\r\nsmartTimeout.cancel = promise => {\r\n  if (!promise || !promise[cancelToken]) return false\r\n  const token = promise[cancelToken]\r\n  return timeoutRefs.has(token)\r\n    ? timeoutRefs.delete(token)\r\n    : false\r\n}\r\n\r\nsmartTimeout.promise = (fn, delay = 0, ...args) => pause(delay)\r\n  .then(() => fn(...args))\r\n\r\nexport default smartTimeout\n\n\n// WEBPACK FOOTER //\n// ./smart-timeout.js","module.exports = (__webpack_require__(0))(129);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ../node_modules/jsbn/index.js from dll-reference vendor\n// module id = 13\n// module chunks = 0","import { is, addIndex, pipe, reject, isNil, ifElse, map, mapObjIndexed } from 'ramda'\r\n\r\nconst indexedMap = addIndex(map)\r\nexport const forEach = (data, func) => pipe(\r\n  reject(isNil),\r\n  ifElse(\r\n    is(Array),\r\n    indexedMap(func),\r\n    mapObjIndexed(func)\r\n  )\r\n)(data)\r\n\r\nexport default forEach\n\n\n// WEBPACK FOOTER //\n// ./for-each.js","import Promise from 'bluebird'\r\nimport jsbn from 'jsbn'\r\nconst { BigInteger } = jsbn\r\n\r\nimport blueDefer from '../defer'\r\n\r\nimport httpClient from '../http'\r\nimport CryptoWorker from '../crypto'\r\n\r\nimport MtpSecureRandom from './secure-random'\r\nimport { TLSerialization, TLDeserialization } from '../tl'\r\nimport { generateID, applyServerTime, dTime, tsNow } from './time-manager'\r\nimport { chooseServer } from './dc-configurator'\r\nimport { select, prepare } from './rsa-keys-manger'\r\n\r\nimport { bytesCmp, bytesToHex, sha1BytesSync, nextRandomInt,\r\n  aesEncryptSync, rsaEncrypt, aesDecryptSync, bytesToArrayBuffer,\r\n  bytesFromHex, bytesXor } from '../bin'\r\n\r\nfunction mtpSendPlainRequest(dcID, requestBuffer) {\r\n  const requestLength = requestBuffer.byteLength,\r\n        requestArray = new Int32Array(requestBuffer)\r\n\r\n  const header = new TLSerialization()\r\n  header.storeLongP(0, 0, 'auth_key_id') // Auth key\r\n  header.storeLong(generateID(), 'msg_id') // Msg_id\r\n  header.storeInt(requestLength, 'request_length')\r\n\r\n  const headerBuffer = header.getBuffer(),\r\n        headerArray = new Int32Array(headerBuffer)\r\n  const headerLength = headerBuffer.byteLength\r\n\r\n  const resultBuffer = new ArrayBuffer(headerLength + requestLength),\r\n        resultArray = new Int32Array(resultBuffer)\r\n\r\n  resultArray.set(headerArray)\r\n  resultArray.set(requestArray, headerArray.length)\r\n\r\n  const requestData = resultArray\r\n  let requestPromise\r\n  const url = chooseServer(dcID)\r\n  const baseError = { code: 406, type: 'NETWORK_BAD_RESPONSE', url: url }\r\n  try {\r\n    requestPromise = httpClient.post(url, requestData, {\r\n      responseType: 'arraybuffer'\r\n    })\r\n  } catch (e) {\r\n    requestPromise = Promise.reject({ originalError: e, ...baseError })\r\n  }\r\n  return requestPromise.then(\r\n    result => {\r\n      if (!result.data || !result.data.byteLength)\r\n        return Promise.reject(baseError)\r\n      let deserializer\r\n      try {\r\n        deserializer = new TLDeserialization(result.data, { mtproto: true })\r\n        const auth_key_id = deserializer.fetchLong('auth_key_id')\r\n        const msg_id = deserializer.fetchLong('msg_id')\r\n        const msg_len = deserializer.fetchInt('msg_len')\r\n      } catch (e) {\r\n        return Promise.reject({ originalError: e, ...baseError })\r\n      }\r\n\r\n      return deserializer\r\n    },\r\n    error => {\r\n      if (!error.message && !error.type) {\r\n        error = { originalError: error, ...baseError }\r\n      }\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n}\r\n\r\nfunction mtpSendReqPQ(auth) {\r\n  console.warn('mtpSendReqPQ')\r\n  const deferred = auth.deferred\r\n\r\n  const request = new TLSerialization({ mtproto: true })\r\n\r\n  request.storeMethod('req_pq', { nonce: auth.nonce })\r\n\r\n  console.log(dTime(), 'Send req_pq', bytesToHex(auth.nonce))\r\n  mtpSendPlainRequest(auth.dcID, request.getBuffer()).then(function(deserializer) {\r\n    const response = deserializer.fetchObject('ResPQ')\r\n\r\n    if (response._ != 'resPQ') {\r\n      throw new Error(`[MT] resPQ response invalid: ${  response._}`)\r\n    }\r\n\r\n    if (!bytesCmp(auth.nonce, response.nonce)) {\r\n      throw new Error('[MT] resPQ nonce mismatch')\r\n    }\r\n\r\n    auth.serverNonce = response.server_nonce\r\n    auth.pq = response.pq\r\n    auth.fingerprints = response.server_public_key_fingerprints\r\n\r\n    console.log(dTime(), 'Got ResPQ', bytesToHex(auth.serverNonce), bytesToHex(auth.pq), auth.fingerprints)\r\n\r\n    auth.publicKey = select(auth.fingerprints)\r\n\r\n    if (!auth.publicKey)\r\n      throw new Error('[MT] No public key found')\r\n\r\n    console.log(dTime(), 'PQ factorization start', auth.pq)\r\n    CryptoWorker.factorize(auth.pq).then(([ p, q, it ]) => {\r\n      auth.p = p\r\n      auth.q = q\r\n      console.log(dTime(), 'PQ factorization done', it)\r\n      mtpSendReqDhParams(auth)\r\n    }, function(error) {\r\n      console.log('Worker error', error, error.stack)\r\n      deferred.reject(error)\r\n    })\r\n  }, function(error) {\r\n    console.error(dTime(), 'req_pq error', error.message)\r\n    deferred.reject(error)\r\n  })\r\n\r\n  setTimeout(prepare, 0)\r\n}\r\n\r\nfunction mtpSendReqDhParams(auth) {\r\n  const deferred = auth.deferred\r\n\r\n  auth.newNonce = new Array(32)\r\n  MtpSecureRandom.nextBytes(auth.newNonce)\r\n\r\n  const data = new TLSerialization({ mtproto: true })\r\n  data.storeObject({\r\n    _           : 'p_q_inner_data',\r\n    pq          : auth.pq,\r\n    p           : auth.p,\r\n    q           : auth.q,\r\n    nonce       : auth.nonce,\r\n    server_nonce: auth.serverNonce,\r\n    new_nonce   : auth.newNonce\r\n  }, 'P_Q_inner_data', 'DECRYPTED_DATA')\r\n\r\n  const dataWithHash = sha1BytesSync(data.getBuffer()).concat(data.getBytes())\r\n\r\n  const request = new TLSerialization({ mtproto: true })\r\n  request.storeMethod('req_DH_params', {\r\n    nonce                 : auth.nonce,\r\n    server_nonce          : auth.serverNonce,\r\n    p                     : auth.p,\r\n    q                     : auth.q,\r\n    public_key_fingerprint: auth.publicKey.fingerprint,\r\n    encrypted_data        : rsaEncrypt(auth.publicKey, dataWithHash)\r\n  })\r\n\r\n  console.log(dTime(), 'Send req_DH_params')\r\n  mtpSendPlainRequest(auth.dcID, request.getBuffer()).then(function(deserializer) {\r\n    const response = deserializer.fetchObject('Server_DH_Params', 'RESPONSE')\r\n\r\n    if (response._ != 'server_DH_params_fail' && response._ != 'server_DH_params_ok') {\r\n      deferred.reject(new Error(`[MT] Server_DH_Params response invalid: ${  response._}`))\r\n      return false\r\n    }\r\n\r\n    if (!bytesCmp(auth.nonce, response.nonce)) {\r\n      deferred.reject(new Error('[MT] Server_DH_Params nonce mismatch'))\r\n      return false\r\n    }\r\n\r\n    if (!bytesCmp(auth.serverNonce, response.server_nonce)) {\r\n      deferred.reject(new Error('[MT] Server_DH_Params server_nonce mismatch'))\r\n      return false\r\n    }\r\n\r\n    if (response._ == 'server_DH_params_fail') {\r\n      const newNonceHash = sha1BytesSync(auth.newNonce).slice(-16)\r\n      if (!bytesCmp(newNonceHash, response.new_nonce_hash)) {\r\n        deferred.reject(new Error('[MT] server_DH_params_fail new_nonce_hash mismatch'))\r\n        return false\r\n      }\r\n      deferred.reject(new Error('[MT] server_DH_params_fail'))\r\n      return false\r\n    }\r\n\r\n    try {\r\n      mtpDecryptServerDhDataAnswer(auth, response.encrypted_answer)\r\n    } catch (e) {\r\n      deferred.reject(e)\r\n      return false\r\n    }\r\n\r\n    mtpSendSetClientDhParams(auth)\r\n  }, function(error) {\r\n    deferred.reject(error)\r\n  })\r\n}\r\n\r\nfunction mtpDecryptServerDhDataAnswer(auth, encryptedAnswer) {\r\n  auth.localTime = tsNow()\r\n\r\n  auth.tmpAesKey = sha1BytesSync(\r\n    auth.newNonce\r\n      .concat(auth.serverNonce))\r\n        .concat(sha1BytesSync(auth.serverNonce.concat(auth.newNonce)).slice(0, 12))\r\n  auth.tmpAesIv = sha1BytesSync(\r\n    auth\r\n      .serverNonce\r\n      .concat(auth.newNonce))\r\n        .slice(12)\r\n        .concat(\r\n          sha1BytesSync([].concat(auth.newNonce, auth.newNonce)),\r\n          auth.newNonce.slice(0, 4))\r\n\r\n  const answerWithHash = aesDecryptSync(encryptedAnswer, auth.tmpAesKey, auth.tmpAesIv)\r\n\r\n  const hash = answerWithHash.slice(0, 20)\r\n  const answerWithPadding = answerWithHash.slice(20)\r\n  const buffer = bytesToArrayBuffer(answerWithPadding)\r\n\r\n  const deserializer = new TLDeserialization(buffer, { mtproto: true })\r\n  const response = deserializer.fetchObject('Server_DH_inner_data')\r\n\r\n  if (response._ != 'server_DH_inner_data') {\r\n    throw new Error(`[MT] server_DH_inner_data response invalid: ${  constructor}`)\r\n  }\r\n\r\n  if (!bytesCmp(auth.nonce, response.nonce)) {\r\n    throw new Error('[MT] server_DH_inner_data nonce mismatch')\r\n  }\r\n\r\n  if (!bytesCmp(auth.serverNonce, response.server_nonce)) {\r\n    throw new Error('[MT] server_DH_inner_data serverNonce mismatch')\r\n  }\r\n\r\n  console.log(dTime(), 'Done decrypting answer')\r\n  auth.g = response.g\r\n  auth.dhPrime = response.dh_prime\r\n  auth.gA = response.g_a\r\n  auth.serverTime = response.server_time\r\n  auth.retry = 0\r\n\r\n  mtpVerifyDhParams(auth.g, auth.dhPrime, auth.gA)\r\n\r\n  const offset = deserializer.getOffset()\r\n\r\n  if (!bytesCmp(hash, sha1BytesSync(answerWithPadding.slice(0, offset)))) {\r\n    throw new Error('[MT] server_DH_inner_data SHA1-hash mismatch')\r\n  }\r\n\r\n  applyServerTime(auth.serverTime, auth.localTime)\r\n}\r\n\r\nfunction mtpVerifyDhParams(g, dhPrime, gA) {\r\n  console.log(dTime(), 'Verifying DH params')\r\n  const dhPrimeHex = bytesToHex(dhPrime)\r\n  if (g != 3 ||\r\n      dhPrimeHex !== 'c71caeb9c6b1c9048e6c522f70f13f73980d40238e3e21c14934d037563d930f48198a0aa7c14058229493d22530f4dbfa336f6e0ac925139543aed44cce7c3720fd51f69458705ac68cd4fe6b6b13abdc9746512969328454f18faf8c595f642477fe96bb2a941d5bcd1d4ac8cc49880708fa9b378e3c4f3a9060bee67cf9a4a4a695811051907e162753b56b0f6b410dba74d8a84b2a14b3144e0ef1284754fd17ed950d5965b4b9dd46582db1178d169c6bc465b0d6ff9ca3928fef5b9ae4e418fc15e83ebea0f87fa9ff5eed70050ded2849f47bf959d956850ce929851f0d8115f635b105ee2e4e15d04b2454bf6f4fadf034b10403119cd8e3b92fcc5b') {\r\n    // The verified value is from https://core.telegram.org/mtproto/security_guidelines\r\n    throw new Error('[MT] DH params are not verified: unknown dhPrime')\r\n  }\r\n  console.log(dTime(), 'dhPrime cmp OK')\r\n\r\n  const gABigInt = new BigInteger(bytesToHex(gA), 16)\r\n  const dhPrimeBigInt = new BigInteger(dhPrimeHex, 16)\r\n\r\n  if (gABigInt.compareTo(BigInteger.ONE) <= 0) {\r\n    throw new Error('[MT] DH params are not verified: gA <= 1')\r\n  }\r\n\r\n  if (gABigInt.compareTo(dhPrimeBigInt.subtract(BigInteger.ONE)) >= 0) {\r\n    throw new Error('[MT] DH params are not verified: gA >= dhPrime - 1')\r\n  }\r\n  console.log(dTime(), '1 < gA < dhPrime-1 OK')\r\n\r\n\r\n  const two = new BigInteger(null)\r\n  two.fromInt(2)\r\n  const twoPow = two.pow(2048 - 64)\r\n\r\n  if (gABigInt.compareTo(twoPow) < 0) {\r\n    throw new Error('[MT] DH params are not verified: gA < 2^{2048-64}')\r\n  }\r\n  if (gABigInt.compareTo(dhPrimeBigInt.subtract(twoPow)) >= 0) {\r\n    throw new Error('[MT] DH params are not verified: gA > dhPrime - 2^{2048-64}')\r\n  }\r\n  console.log(dTime(), '2^{2048-64} < gA < dhPrime-2^{2048-64} OK')\r\n\r\n  return true\r\n}\r\n\r\nfunction mtpSendSetClientDhParams(auth) {\r\n  const deferred = auth.deferred\r\n  const gBytes = bytesFromHex(auth.g.toString(16))\r\n\r\n  auth.b = new Array(256)\r\n  MtpSecureRandom.nextBytes(auth.b)\r\n\r\n  CryptoWorker.modPow(gBytes, auth.b, auth.dhPrime).then(function(gB) {\r\n    const data = new TLSerialization({ mtproto: true })\r\n    data.storeObject({\r\n      _           : 'client_DH_inner_data',\r\n      nonce       : auth.nonce,\r\n      server_nonce: auth.serverNonce,\r\n      retry_id    : [0, auth.retry++],\r\n      g_b         : gB\r\n    }, 'Client_DH_Inner_Data')\r\n\r\n    const dataWithHash = sha1BytesSync(data.getBuffer()).concat(data.getBytes())\r\n\r\n    const encryptedData = aesEncryptSync(dataWithHash, auth.tmpAesKey, auth.tmpAesIv)\r\n\r\n    const request = new TLSerialization({ mtproto: true })\r\n    request.storeMethod('set_client_DH_params', {\r\n      nonce         : auth.nonce,\r\n      server_nonce  : auth.serverNonce,\r\n      encrypted_data: encryptedData\r\n    })\r\n\r\n    console.log(dTime(), 'Send set_client_DH_params')\r\n    mtpSendPlainRequest(auth.dcID, request.getBuffer()).then(function(deserializer) {\r\n      const response = deserializer.fetchObject('Set_client_DH_params_answer')\r\n\r\n      if (response._ != 'dh_gen_ok' && response._ != 'dh_gen_retry' && response._ != 'dh_gen_fail') {\r\n        deferred.reject(new Error(`[MT] Set_client_DH_params_answer response invalid: ${  response._}`))\r\n        return false\r\n      }\r\n\r\n      if (!bytesCmp(auth.nonce, response.nonce)) {\r\n        deferred.reject(new Error('[MT] Set_client_DH_params_answer nonce mismatch'))\r\n        return false\r\n      }\r\n\r\n      if (!bytesCmp(auth.serverNonce, response.server_nonce)) {\r\n        deferred.reject(new Error('[MT] Set_client_DH_params_answer server_nonce mismatch'))\r\n        return false\r\n      }\r\n\r\n      CryptoWorker.modPow(auth.gA, auth.b, auth.dhPrime).then(function(authKey) {\r\n        const authKeyHash = sha1BytesSync(authKey),\r\n              authKeyAux = authKeyHash.slice(0, 8),\r\n              authKeyID = authKeyHash.slice(-8)\r\n\r\n        console.log(dTime(), 'Got Set_client_DH_params_answer', response._)\r\n        switch (response._) {\r\n          case 'dh_gen_ok': {\r\n            const newNonceHash1 = sha1BytesSync(auth.newNonce.concat([1], authKeyAux)).slice(-16)\r\n\r\n            if (!bytesCmp(newNonceHash1, response.new_nonce_hash1)) {\r\n              deferred.reject(new Error('[MT] Set_client_DH_params_answer new_nonce_hash1 mismatch'))\r\n              return false\r\n            }\r\n\r\n            const serverSalt = bytesXor(auth.newNonce.slice(0, 8), auth.serverNonce.slice(0, 8))\r\n            // console.log('Auth successfull!', authKeyID, authKey, serverSalt)\r\n\r\n            auth.authKeyID = authKeyID\r\n            auth.authKey = authKey\r\n            auth.serverSalt = serverSalt\r\n\r\n            deferred.resolve(auth)\r\n            break\r\n          }\r\n          case 'dh_gen_retry': {\r\n            const newNonceHash2 = sha1BytesSync(auth.newNonce.concat([2], authKeyAux)).slice(-16)\r\n            if (!bytesCmp(newNonceHash2, response.new_nonce_hash2)) {\r\n              deferred.reject(new Error('[MT] Set_client_DH_params_answer new_nonce_hash2 mismatch'))\r\n              return false\r\n            }\r\n\r\n            return mtpSendSetClientDhParams(auth)\r\n          }\r\n          case 'dh_gen_fail': {\r\n            const newNonceHash3 = sha1BytesSync(auth.newNonce.concat([3], authKeyAux)).slice(-16)\r\n            if (!bytesCmp(newNonceHash3, response.new_nonce_hash3)) {\r\n              deferred.reject(new Error('[MT] Set_client_DH_params_answer new_nonce_hash3 mismatch'))\r\n              return false\r\n            }\r\n\r\n            deferred.reject(new Error('[MT] Set_client_DH_params_answer fail'))\r\n            return false\r\n          }\r\n        }\r\n      }, function(error) {\r\n        deferred.reject(error)\r\n      })\r\n    }, function(error) {\r\n      deferred.reject(error)\r\n    })\r\n  }, function(error) {\r\n    deferred.reject(error)\r\n  })\r\n}\r\n\r\nconst cached = {}\r\n\r\nfunction mtpAuth(dcID) {\r\n  console.count('mtpAuth')\r\n  if (cached[dcID] !== undefined) {\r\n    return cached[dcID].promise\r\n  }\r\n  console.warn('mtpAuth')\r\n  const nonce = []\r\n  for (let i = 0; i < 16; i++) {\r\n    nonce.push(nextRandomInt(0xFF))\r\n  }\r\n\r\n  if (!chooseServer(dcID))\r\n    return Promise.reject(new Error(`[MT] No server found for dc ${  dcID}`))\r\n\r\n  const auth = {\r\n    dcID    : dcID,\r\n    nonce   : nonce,\r\n    deferred: blueDefer()\r\n  }\r\n\r\n  setImmediate(() => mtpSendReqPQ(auth))\r\n\r\n  cached[dcID] = auth.deferred\r\n\r\n  cached[dcID].promise.catch(() => {\r\n    delete cached[dcID]\r\n  })\r\n\r\n  return cached[dcID].promise\r\n}\r\n\r\nexport { mtpAuth as auth }\n\n\n// WEBPACK FOOTER //\n// ./service/authorizer.js","import Promise from 'bluebird'\r\n\r\nimport { pipeP, is, values, mapObjIndexed } from 'ramda'\r\n\r\nimport CryptoWorker from '../crypto'\r\nimport { dTime, tsNow, generateID, applyServerTime } from './time-manager'\r\nimport MtpSecureRandom from './secure-random'\r\nimport forEach from '../for-each'\r\nimport { TLSerialization, TLDeserialization } from '../tl'\r\nimport smartTimeout from '../smart-timeout'\r\nimport blueDefer from '../defer'\r\nimport { httpClient } from '../http'\r\nimport { chooseServer } from './dc-configurator'\r\nimport { PureStorage } from '../store'\r\n\r\nimport { convertToUint8Array, convertToArrayBuffer, sha1BytesSync,\r\n  nextRandomInt, bytesCmp, bytesToHex, bytesFromArrayBuffer,\r\n  bytesToArrayBuffer, longToBytes, uintToInt, bigStringInt } from '../bin'\r\n\r\nlet updatesProcessor\r\nlet iii = 0\r\nlet offlineInited = false\r\nlet akStopped = false\r\n// const chromeMatches = navigator.userAgent.match(/Chrome\\/(\\d+(\\.\\d+)?)/)\r\n// const chromeVersion = chromeMatches && parseFloat(chromeMatches[1]) || false\r\n// const xhrSendBuffer = !('ArrayBufferView' in window) && (!chromeVersion || chromeVersion < 30)\r\n\r\n\r\nconst NetworkerFabric = (appConfig, emit) => class NetworkerThread {\r\n  constructor(dc, authKey, serverSalt, options = {}) {\r\n    this.dcID = dc\r\n    this.iii = iii++\r\n\r\n    this.authKey = authKey\r\n    this.authKeyUint8 = convertToUint8Array(authKey)\r\n    this.authKeyBuffer = convertToArrayBuffer(authKey)\r\n    this.authKeyID = sha1BytesSync(authKey).slice(-8)\r\n\r\n    this.serverSalt = serverSalt\r\n\r\n    this.upload = options.fileUpload || options.fileDownload || false\r\n\r\n    this.updateSession()\r\n\r\n    this.lastServerMessages = []\r\n\r\n    this.currentRequests = 0\r\n    this.checkConnectionPeriod = 0\r\n\r\n    this.sentMessages = {}\r\n    this.clientMessages = []\r\n\r\n    this.pendingMessages = {}\r\n    this.pendingAcks = []\r\n    this.pendingResends = []\r\n    this.connectionInited = false\r\n\r\n    this.pendingTimeouts = []\r\n\r\n    setInterval(this.checkLongPoll, 10000)\r\n    this.checkLongPoll()\r\n\r\n    if (!offlineInited)\r\n      offlineInited = true\r\n  }\r\n  updateSession() {\r\n    this.seqNo = 0\r\n    this.prevSessionID = this.sessionID\r\n    this.sessionID = new Array(8)\r\n    MtpSecureRandom.nextBytes(this.sessionID)\r\n  }\r\n\r\n  updateSentMessage(sentMessageID) {\r\n    const sentMessage = this.sentMessages[sentMessageID]\r\n    if (!sentMessage) return false\r\n\r\n    if (sentMessage.container) {\r\n      const newInner = []\r\n      const updateInner = innerSentMessageID => {\r\n        const innerSentMessage = this.updateSentMessage(innerSentMessageID)\r\n        if (innerSentMessage)\r\n          newInner.push(innerSentMessage.msg_id)\r\n      }\r\n      forEach(sentMessage.inner, updateInner)\r\n      sentMessage.inner = newInner\r\n    }\r\n\r\n    sentMessage.msg_id = generateID()\r\n    sentMessage.seq_no = this.generateSeqNo(\r\n      sentMessage.notContentRelated ||\r\n      sentMessage.container\r\n    )\r\n    this.sentMessages[sentMessage.msg_id] = sentMessage\r\n    delete this.sentMessages[sentMessageID]\r\n\r\n    return sentMessage\r\n  }\r\n\r\n  generateSeqNo(notContentRelated) {\r\n    let seqNo = this.seqNo * 2\r\n\r\n    if (!notContentRelated) {\r\n      seqNo++\r\n      this.seqNo++\r\n    }\r\n\r\n    return seqNo\r\n  }\r\n\r\n  wrapMtpCall(method, params, options) {\r\n    const serializer = new TLSerialization({ mtproto: true })\r\n\r\n    serializer.storeMethod(method, params)\r\n\r\n    const messageID = generateID()\r\n    const seqNo = this.generateSeqNo()\r\n    const message = {\r\n      msg_id: messageID,\r\n      seq_no: seqNo,\r\n      body  : serializer.getBytes()\r\n    }\r\n\r\n    if (Config.Modes.debug) {\r\n      console.log(dTime(), 'MT call', method, params, messageID, seqNo)\r\n    }\r\n\r\n    return this.pushMessage(message, options)\r\n  }\r\n\r\n  wrapMtpMessage(object, options = {}) {\r\n\r\n    const serializer = new TLSerialization({ mtproto: true })\r\n    serializer.storeObject(object, 'Object')\r\n\r\n    const messageID = generateID()\r\n    const seqNo = this.generateSeqNo(options.notContentRelated)\r\n    const message = {\r\n      msg_id: messageID,\r\n      seq_no: seqNo,\r\n      body  : serializer.getBytes()\r\n    }\r\n\r\n    if (Config.Modes.debug)\r\n      console.log(dTime(), 'MT message', object, messageID, seqNo)\r\n\r\n    return this.pushMessage(message, options)\r\n  }\r\n\r\n  wrapApiCall(method, params, options) {\r\n    const serializer = new TLSerialization(options)\r\n\r\n    if (!this.connectionInited) {\r\n      // serializer.storeInt(0xda9b0d0d, 'invokeWithLayer')\r\n      // serializer.storeInt(Config.Schema.API.layer, 'layer')\r\n      // serializer.storeInt(0x69796de9, 'initConnection')\r\n      // serializer.storeInt(Config.App.id, 'api_id')\r\n      // serializer.storeString(navigator.userAgent || 'Unknown UserAgent', 'device_model')\r\n      // serializer.storeString(navigator.platform || 'Unknown Platform', 'system_version')\r\n      // serializer.storeString(Config.App.version, 'app_version')\r\n      // serializer.storeString(navigator.language || 'en', 'lang_code')\r\n      mapObjIndexed(serializer.storeIntString, appConfig)\r\n    }\r\n\r\n    if (options.afterMessageID) {\r\n      serializer.storeInt(0xcb9f372d, 'invokeAfterMsg')\r\n      serializer.storeLong(options.afterMessageID, 'msg_id')\r\n    }\r\n\r\n    options.resultType = serializer.storeMethod(method, params)\r\n\r\n    const messageID = generateID()\r\n    const seqNo = this.generateSeqNo()\r\n    const message = {\r\n      msg_id: messageID,\r\n      seq_no: seqNo,\r\n      body  : serializer.getBytes(true),\r\n      isAPI : true\r\n    }\r\n\r\n    if (Config.Modes.debug) {\r\n      console.log(dTime(), 'Api call', method, params, messageID, seqNo, options)\r\n    } else {\r\n      console.log(dTime(), 'Api call', method)\r\n    }\r\n\r\n    return this.pushMessage(message, options)\r\n  }\r\n\r\n  checkLongPollCond = () =>\r\n    this.longPollPending &&\r\n      this.longPollPending > tsNow() ||\r\n    !!this.offline ||\r\n    akStopped\r\n\r\n  checkLongPollAfterDcCond = (isClean, baseDc) => isClean && (\r\n    this.dcID !== baseDc ||\r\n    this.upload ||\r\n    this.sleepAfter &&\r\n      this.sleepAfter < tsNow()\r\n  )\r\n\r\n  checkLongPoll = force => {\r\n    const isClean = this.cleanupSent()\r\n    // console.log('Check lp', this.longPollPending, tsNow(), this.dcID, isClean)\r\n    if (this.checkLongPollCond())\r\n      return false\r\n\r\n    const afterGetDc = baseDc => {\r\n      if (this.checkLongPollAfterDcCond(isClean, baseDc))\r\n        // console.warn(dTime(), 'Send long-poll for DC is delayed', this.dcID, this.sleepAfter)\r\n        return\r\n\r\n      this.sendLongPoll()\r\n    }\r\n\r\n    PureStorage.get('dc')\r\n      .then(afterGetDc)\r\n  }\r\n\r\n  sendLongPoll() {\r\n    const maxWait = 25000\r\n    const self = this\r\n\r\n    this.longPollPending = tsNow() + maxWait\r\n    // console.log('Set lp', this.longPollPending, tsNow())\r\n\r\n    this.wrapMtpCall('http_wait', {\r\n      max_delay : 500,\r\n      wait_after: 150,\r\n      max_wait  : maxWait\r\n    }, {\r\n      noResponse: true,\r\n      longPoll  : true\r\n    }).then(() => {\r\n      delete self.longPollPending\r\n      setImmediate(self.checkLongPoll)\r\n    }, () => {\r\n      console.log('Long-poll failed')\r\n    })\r\n  }\r\n\r\n  pushMessage(message, options = {}) {\r\n    const deferred = blueDefer()\r\n\r\n    this.sentMessages[message.msg_id] = { ...message, ...options, deferred }\r\n    this.pendingMessages[message.msg_id] = 0\r\n\r\n    if (!options || !options.noShedule) {\r\n      this.sheduleRequest()\r\n    }\r\n    if (is(Object, options)) {\r\n      options.messageID = message.msg_id\r\n    }\r\n\r\n    return deferred.promise\r\n  }\r\n\r\n  pushResend(messageID, delay) {\r\n    const value = delay\r\n      ? tsNow() + delay\r\n      : 0\r\n    const sentMessage = this.sentMessages[messageID]\r\n    if (sentMessage.container) {\r\n      for (let i = 0; i < sentMessage.inner.length; i++) {\r\n        this.pendingMessages[sentMessage.inner[i]] = value\r\n      }\r\n    } else {\r\n      this.pendingMessages[messageID] = value\r\n    }\r\n\r\n    // console.log('Resend due', messageID, this.pendingMessages)\r\n\r\n    this.sheduleRequest(delay)\r\n  }\r\n\r\n  getMsgKeyIv(msgKey, isOut) {\r\n    const authKey = this.authKeyUint8\r\n    const x = isOut\r\n      ? 0\r\n      : 8\r\n    const sha1aText = new Uint8Array(48)\r\n    const sha1bText = new Uint8Array(48)\r\n    const sha1cText = new Uint8Array(48)\r\n    const sha1dText = new Uint8Array(48)\r\n    const promises = {}\r\n\r\n    sha1aText.set(msgKey, 0)\r\n    sha1aText.set(authKey.subarray(x, x + 32), 16)\r\n    promises.sha1a = CryptoWorker.sha1Hash(sha1aText)\r\n\r\n    sha1bText.set(authKey.subarray(x + 32, x + 48), 0)\r\n    sha1bText.set(msgKey, 16)\r\n    sha1bText.set(authKey.subarray(x + 48, x + 64), 32)\r\n    promises.sha1b = CryptoWorker.sha1Hash(sha1bText)\r\n\r\n    sha1cText.set(authKey.subarray(x + 64, x + 96), 0)\r\n    sha1cText.set(msgKey, 32)\r\n    promises.sha1c = CryptoWorker.sha1Hash(sha1cText)\r\n\r\n    sha1dText.set(msgKey, 0)\r\n    sha1dText.set(authKey.subarray(x + 96, x + 128), 16)\r\n    promises.sha1d = CryptoWorker.sha1Hash(sha1dText)\r\n\r\n    const onAll = result => {\r\n      const aesKey = new Uint8Array(32),\r\n            aesIv = new Uint8Array(32),\r\n            sha1a = new Uint8Array(result[0]),\r\n            sha1b = new Uint8Array(result[1]),\r\n            sha1c = new Uint8Array(result[2]),\r\n            sha1d = new Uint8Array(result[3])\r\n\r\n      aesKey.set(sha1a.subarray(0, 8))\r\n      aesKey.set(sha1b.subarray(8, 20), 8)\r\n      aesKey.set(sha1c.subarray(4, 16), 20)\r\n\r\n      aesIv.set(sha1a.subarray(8, 20))\r\n      aesIv.set(sha1b.subarray(0, 8), 12)\r\n      aesIv.set(sha1c.subarray(16, 20), 20)\r\n      aesIv.set(sha1d.subarray(0, 8), 24)\r\n\r\n      return [aesKey, aesIv]\r\n    }\r\n\r\n    return Promise.all(values(promises)).then(onAll)\r\n  }\r\n\r\n  checkConnection = event => {\r\n    console.log(dTime(), 'Check connection', event)\r\n    smartTimeout.cancel(this.checkConnectionPromise)\r\n\r\n    const serializer = new TLSerialization({ mtproto: true })\r\n    const pingID = [nextRandomInt(0xFFFFFFFF), nextRandomInt(0xFFFFFFFF)]\r\n\r\n    serializer.storeMethod('ping', { ping_id: pingID })\r\n\r\n    const pingMessage = {\r\n      msg_id: generateID(),\r\n      seq_no: this.generateSeqNo(true),\r\n      body  : serializer.getBytes()\r\n    }\r\n\r\n    const self = this\r\n    this.sendEncryptedRequest(pingMessage, { timeout: 15000 }).then(result =>\r\n      self.toggleOffline(false)\r\n    , () => {\r\n      console.log(dTime(), 'Delay ', self.checkConnectionPeriod * 1000)\r\n      self.checkConnectionPromise = smartTimeout(\r\n        self.checkConnection, parseInt(self.checkConnectionPeriod * 1000))\r\n      self.checkConnectionPeriod = Math.min(60, self.checkConnectionPeriod * 1.5)\r\n    })\r\n  }\r\n\r\n  toggleOffline(enabled) {\r\n    // console.log('toggle ', enabled, this.dcID, this.iii)\r\n    if (this.offline !== undefined && this.offline == enabled)\r\n      return false\r\n\r\n    this.offline = enabled\r\n\r\n    if (this.offline) {\r\n      smartTimeout.cancel(this.nextReqPromise)\r\n      delete this.nextReq\r\n\r\n      if (this.checkConnectionPeriod < 1.5)\r\n        this.checkConnectionPeriod = 0\r\n\r\n\r\n      this.checkConnectionPromise = smartTimeout(\r\n        this.checkConnection, parseInt(this.checkConnectionPeriod * 1000))\r\n      this.checkConnectionPeriod = Math.min(30, (1 + this.checkConnectionPeriod) * 1.5)\r\n\r\n      this.onOnlineCb = this.checkConnection\r\n      emit('net.offline', this.onOnlineCb)\r\n    } else {\r\n      delete this.longPollPending\r\n      this.checkLongPoll()\r\n      this.sheduleRequest()\r\n\r\n      if (this.onOnlineCb)\r\n        emit('net.online', this.onOnlineCb)\r\n\r\n      smartTimeout.cancel(this.checkConnectionPromise)\r\n    }\r\n  }\r\n  onNoResponseMsg = msgID => {\r\n    if (this.sentMessages[msgID]) {\r\n      const deferred = this.sentMessages[msgID].deferred\r\n      delete this.sentMessages[msgID]\r\n      return deferred.resolve()\r\n    }\r\n  }\r\n  onNoResponseMsgReject = msgID => {\r\n    if (this.sentMessages[msgID]) {\r\n      const deferred = this.sentMessages[msgID].deferred\r\n      delete this.sentMessages[msgID]\r\n      delete this.pendingMessages[msgID]\r\n      return deferred.reject()\r\n    }\r\n  }\r\n  resetPendingMessage = msgID => this.pendingMessages[msgID] = 0\r\n  performSheduledRequest = () => { //TODO extract huge method\r\n    // console.log(dTime(), 'sheduled', this.dcID, this.iii)\r\n    if (this.offline || akStopped) {\r\n      console.log(dTime(), 'Cancel sheduled')\r\n      return false\r\n    }\r\n    delete this.nextReq\r\n    if (this.pendingAcks.length) {\r\n      const ackMsgIDs = []\r\n      for (let i = 0; i < this.pendingAcks.length; i++) {\r\n        ackMsgIDs.push(this.pendingAcks[i])\r\n      }\r\n      // console.log('acking messages', ackMsgIDs)\r\n      this.wrapMtpMessage({ _: 'msgs_ack', msg_ids: ackMsgIDs }, { notContentRelated: true, noShedule: true })\r\n    }\r\n\r\n    if (this.pendingResends.length) {\r\n      const resendMsgIDs = []\r\n      const resendOpts = { noShedule: true, notContentRelated: true }\r\n      for (let i = 0; i < this.pendingResends.length; i++) {\r\n        resendMsgIDs.push(this.pendingResends[i])\r\n      }\r\n      // console.log('resendReq messages', resendMsgIDs)\r\n      this.wrapMtpMessage({ _: 'msg_resend_req', msg_ids: resendMsgIDs }, resendOpts)\r\n      this.lastResendReq = { req_msg_id: resendOpts.messageID, resend_msg_ids: resendMsgIDs }\r\n    }\r\n\r\n    const messages = []\r\n    let message,\r\n        messagesByteLen = 0\r\n    const currentTime = tsNow()\r\n    let hasApiCall = false\r\n    let hasHttpWait = false\r\n    let lengthOverflow = false\r\n    let singlesCount = 0\r\n\r\n    const onPendingMessage = (value, messageID) => {\r\n      if (!(!value || value >= currentTime)) return\r\n      message = this.sentMessages[messageID]\r\n      if (message) {\r\n        const messageByteLength = (message.body.byteLength || message.body.length) + 32\r\n        const cond1 = !message.notContentRelated && lengthOverflow\r\n        const cond2 =\r\n          !message.notContentRelated &&\r\n          messagesByteLen &&\r\n          messagesByteLen + messageByteLength > 655360 // 640 Kb\r\n        if (cond1) return\r\n        if (cond2) {\r\n          lengthOverflow = true\r\n          return\r\n        }\r\n        if (message.singleInRequest) {\r\n          singlesCount++\r\n          if (singlesCount > 1) return\r\n        }\r\n        messages.push(message)\r\n        messagesByteLen += messageByteLength\r\n        if (message.isAPI)\r\n          hasApiCall = true\r\n        else if (message.longPoll)\r\n          hasHttpWait = true\r\n      } else {\r\n        // console.log(message, messageID)\r\n      }\r\n      delete this.pendingMessages[messageID]\r\n    }\r\n\r\n    forEach(this.pendingMessages, onPendingMessage)\r\n\r\n    if (hasApiCall && !hasHttpWait) {\r\n      const serializer = new TLSerialization({ mtproto: true })\r\n      serializer.storeMethod('http_wait', {\r\n        max_delay : 500,\r\n        wait_after: 150,\r\n        max_wait  : 3000\r\n      })\r\n      messages.push({\r\n        msg_id: generateID(),\r\n        seq_no: this.generateSeqNo(),\r\n        body  : serializer.getBytes()\r\n      })\r\n    }\r\n\r\n    if (!messages.length) {\r\n      // console.log('no sheduled messages')\r\n      return\r\n    }\r\n\r\n    const noResponseMsgs = []\r\n\r\n    if (messages.length > 1) {\r\n      const container = new TLSerialization({ mtproto: true, startMaxLength: messagesByteLen + 64 })\r\n      container.storeInt(0x73f1f8dc, 'CONTAINER[id]')\r\n      container.storeInt(messages.length, 'CONTAINER[count]')\r\n      const onloads = []\r\n      const innerMessages = []\r\n      for (let i = 0; i < messages.length; i++) {\r\n        container.storeLong(messages[i].msg_id, `CONTAINER[${  i  }][msg_id]`)\r\n        innerMessages.push(messages[i].msg_id)\r\n        container.storeInt(messages[i].seq_no, `CONTAINER[${  i  }][seq_no]`)\r\n        container.storeInt(messages[i].body.length, `CONTAINER[${  i  }][bytes]`)\r\n        container.storeRawBytes(messages[i].body, `CONTAINER[${  i  }][body]`)\r\n        if (messages[i].noResponse) {\r\n          noResponseMsgs.push(messages[i].msg_id)\r\n        }\r\n      }\r\n\r\n      const containerSentMessage = {\r\n        msg_id   : generateID(),\r\n        seq_no   : this.generateSeqNo(true),\r\n        container: true,\r\n        inner    : innerMessages\r\n      }\r\n\r\n      message = { body: container.getBytes(true), ...containerSentMessage }\r\n\r\n      this.sentMessages[message.msg_id] = containerSentMessage\r\n\r\n      if (Config.Modes.debug) {\r\n        console.log(dTime(), 'Container', innerMessages, message.msg_id, message.seq_no)\r\n      }\r\n    } else {\r\n      if (message.noResponse)\r\n        noResponseMsgs.push(message.msg_id)\r\n      this.sentMessages[message.msg_id] = message\r\n    }\r\n\r\n    this.pendingAcks = []\r\n    const afterSendRequest = result => {\r\n      this.toggleOffline(false)\r\n      // console.log('parse for', message)\r\n      this\r\n        .parseResponse(result.data)\r\n        .then(afterResponseParse)\r\n    }\r\n    const afterResponseParse = response => {\r\n      if (Config.Modes.debug)\r\n        console.log(dTime(), 'Server response', this.dcID, response)\r\n\r\n      this.processMessage(\r\n        response.response,\r\n        response.messageID,\r\n        response.sessionID)\r\n\r\n      forEach(noResponseMsgs, this.onNoResponseMsg)\r\n\r\n      this.checkLongPoll()\r\n\r\n      this.checkConnectionPeriod = Math.max(1.1, Math.sqrt(this.checkConnectionPeriod))\r\n    }\r\n    const onRequestFail = error => {\r\n      console.log('Encrypted request failed', error)\r\n\r\n      if (message.container) {\r\n        forEach(message.inner, this.resetPendingMessage)\r\n        delete this.sentMessages[message.msg_id]\r\n      } else\r\n        this.pendingMessages[message.msg_id] = 0\r\n\r\n      forEach(noResponseMsgs, this.onNoResponseMsgReject)\r\n\r\n      this.toggleOffline(true)\r\n    }\r\n    this.sendEncryptedRequest(message)\r\n      .then(afterSendRequest)\r\n      .catch(onRequestFail)\r\n\r\n    if (lengthOverflow || singlesCount > 1) this.sheduleRequest()\r\n  }\r\n\r\n  getEncryptedMessage(bytes) {\r\n    let msgKey\r\n    const f1 = CryptoWorker.sha1Hash\r\n    const f2 = bytesHash => {\r\n      msgKey = new Uint8Array(bytesHash).subarray(4, 20)\r\n      return this.getMsgKeyIv(msgKey, true)\r\n    }\r\n    const f3 = keyIv => CryptoWorker.aesEncrypt(bytes, keyIv[0], keyIv[1])\r\n    const f4 = encryptedBytes => ({\r\n      bytes: encryptedBytes,\r\n      msgKey\r\n    })\r\n    const encryptFlow = pipeP(f1, f2, f3, f4)\r\n    return encryptFlow(bytes)\r\n  }\r\n\r\n  getDecryptedMessage(msgKey, encryptedData) {\r\n    const getKeyCurry = key => this.getMsgKeyIv(key, false)\r\n    const cryptoAesCurry = keyIv => CryptoWorker.aesDecrypt(encryptedData, keyIv[0], keyIv[1])\r\n    const decryptFlow = pipeP(getKeyCurry, cryptoAesCurry)\r\n    return decryptFlow(msgKey)\r\n  }\r\n\r\n  getRequestUrl = () => chooseServer(this.dcID, this.upload)\r\n\r\n  sendEncryptedRequest = (message, options = {}) => {\r\n    // console.log(dTime(), 'Send encrypted'/*, message*/)\r\n    // console.trace()\r\n    const data = new TLSerialization({ startMaxLength: message.body.length + 64 })\r\n\r\n    data.storeIntBytes(this.serverSalt, 64, 'salt')\r\n    data.storeIntBytes(this.sessionID, 64, 'session_id')\r\n\r\n    data.storeLong(message.msg_id, 'message_id')\r\n    data.storeInt(message.seq_no, 'seq_no')\r\n\r\n    data.storeInt(message.body.length, 'message_data_length')\r\n    data.storeRawBytes(message.body, 'message_data')\r\n\r\n    const url = this.getRequestUrl()\r\n    const baseError = { code: 406, type: 'NETWORK_BAD_RESPONSE', url }\r\n\r\n    const afterRequestData = result => {\r\n      if (!result.data || !result.data.byteLength)\r\n        return Promise.reject(baseError)\r\n      return result\r\n    }\r\n\r\n    const afterRequestReject = error => {\r\n      if (!error.message && !error.type)\r\n        error = { type: 'NETWORK_BAD_REQUEST', originalError: error, ...baseError }\r\n      return Promise.reject(error)\r\n    }\r\n\r\n    const onEncryptedResult = encryptedResult => {\r\n      // console.log(dTime(), 'Got encrypted out message'/*, encryptedResult*/)\r\n      const request = new TLSerialization({ startMaxLength: encryptedResult.bytes.byteLength + 256 })\r\n      request.storeIntBytes(this.authKeyID, 64, 'auth_key_id')\r\n      request.storeIntBytes(encryptedResult.msgKey, 128, 'msg_key')\r\n      request.storeRawBytes(encryptedResult.bytes, 'encrypted_data')\r\n\r\n      const requestData = /*xhrSendBuffer\r\n        ? request.getBuffer()\r\n        : */request.getArray()\r\n\r\n      try {\r\n        options = { responseType: 'arraybuffer', ...options }\r\n        return httpClient.post(url, requestData, options)\r\n      } catch (e) {\r\n        return Promise.reject(e)\r\n      }\r\n    }\r\n\r\n    return this\r\n      .getEncryptedMessage(data.getBuffer())\r\n      .then(onEncryptedResult)\r\n      .then(\r\n        afterRequestData,\r\n        afterRequestReject)\r\n  }\r\n\r\n  getMsgById = ({ req_msg_id }) => this.sentMessages[req_msg_id]\r\n\r\n  parseResponse(responseBuffer) {\r\n    // console.log(dTime(), 'Start parsing response')\r\n    // const self = this\r\n\r\n    const deserializer = new TLDeserialization(responseBuffer)\r\n\r\n    const authKeyID = deserializer.fetchIntBytes(64, false, 'auth_key_id')\r\n    if (!bytesCmp(authKeyID, this.authKeyID)) {\r\n      throw new Error(`[MT] Invalid server auth_key_id: ${  bytesToHex(authKeyID)}`)\r\n    }\r\n    const msgKey = deserializer.fetchIntBytes(128, true, 'msg_key')\r\n    const encryptedData = deserializer.fetchRawBytes(\r\n      responseBuffer.byteLength - deserializer.getOffset(),\r\n      true,\r\n      'encrypted_data')\r\n\r\n    const afterDecrypt = dataWithPadding => {\r\n      // console.log(dTime(), 'after decrypt')\r\n      const deserializer = new TLDeserialization(dataWithPadding, { mtproto: true })\r\n\r\n      const salt = deserializer.fetchIntBytes(64, false, 'salt')\r\n      const sessionID = deserializer.fetchIntBytes(64, false, 'session_id')\r\n      const messageID = deserializer.fetchLong('message_id')\r\n\r\n      const isInvalidSession =\r\n        !bytesCmp(sessionID, this.sessionID) && (\r\n          !this.prevSessionID ||\r\n          !bytesCmp(sessionID, this.prevSessionID))\r\n      if (isInvalidSession) {\r\n        console.warn('Sessions', sessionID, this.sessionID, this.prevSessionID)\r\n        throw new Error(`[MT] Invalid server session_id: ${ bytesToHex(sessionID) }`)\r\n      }\r\n\r\n      const seqNo = deserializer.fetchInt('seq_no')\r\n\r\n      let offset = deserializer.getOffset()\r\n      const totalLength = dataWithPadding.byteLength\r\n\r\n      const messageBodyLength = deserializer.fetchInt('message_data[length]')\r\n      if (messageBodyLength % 4 ||\r\n          messageBodyLength > totalLength - offset) {\r\n        throw new Error(`[MT] Invalid body length: ${  messageBodyLength}`)\r\n      }\r\n      const messageBody = deserializer.fetchRawBytes(messageBodyLength, true, 'message_data')\r\n\r\n      offset = deserializer.getOffset()\r\n      const paddingLength = totalLength - offset\r\n      if (paddingLength < 0 || paddingLength > 15)\r\n        throw new Error(`[MT] Invalid padding length: ${  paddingLength}`)\r\n      const hashData = convertToUint8Array(dataWithPadding).subarray(0, offset)\r\n\r\n      const afterShaHash = dataHash => {\r\n        if (!bytesCmp(msgKey, bytesFromArrayBuffer(dataHash).slice(-16))) {\r\n          console.warn(msgKey, bytesFromArrayBuffer(dataHash))\r\n          throw new Error('[MT] server msgKey mismatch')\r\n        }\r\n\r\n        const buffer = bytesToArrayBuffer(messageBody)\r\n        const deserializerOptions = getDeserializeOpts(this.getMsgById)\r\n        const deserializer = new TLDeserialization(buffer, deserializerOptions)\r\n        const response = deserializer.fetchObject('', 'INPUT')\r\n\r\n        return {\r\n          response,\r\n          messageID,\r\n          sessionID,\r\n          seqNo\r\n        }\r\n      }\r\n      return CryptoWorker\r\n        .sha1Hash(hashData)\r\n        .then(afterShaHash)\r\n    }\r\n\r\n\r\n    return this\r\n      .getDecryptedMessage(msgKey, encryptedData)\r\n      .then(afterDecrypt)\r\n  }\r\n\r\n  applyServerSalt(newServerSalt) {\r\n    const serverSalt = longToBytes(newServerSalt)\r\n\r\n    const storeObj = {\r\n      [`dc${ this.dcID }_server_salt`]: bytesToHex(serverSalt)\r\n    }\r\n    PureStorage.set(storeObj)\r\n\r\n    this.serverSalt = serverSalt\r\n    return true\r\n  }\r\n\r\n  sheduleRequest(delay = 0) {\r\n    if (this.offline) this.checkConnection('forced shedule')\r\n    const nextReq = tsNow() + delay\r\n\r\n    if (delay && this.nextReq && this.nextReq <= nextReq)\r\n      return false\r\n\r\n    // console.log(dTime(), 'shedule req', delay)\r\n    // console.trace()\r\n    smartTimeout.cancel(this.nextReqPromise)\r\n    if (delay > 0)\r\n      this.nextReqPromise = smartTimeout(\r\n        this.performSheduledRequest, delay)\r\n    else\r\n      setImmediate(this.performSheduledRequest)\r\n\r\n    this.nextReq = nextReq\r\n  }\r\n\r\n  ackMessage(msgID) {\r\n    // console.log('ack message', msgID)\r\n    this.pendingAcks.push(msgID)\r\n    this.sheduleRequest(30000)\r\n  }\r\n\r\n  reqResendMessage(msgID) {\r\n    console.log(dTime(), 'Req resend', msgID)\r\n    this.pendingResends.push(msgID)\r\n    this.sheduleRequest(100)\r\n  }\r\n\r\n  cleanupSent() {\r\n    let notEmpty = false\r\n    // console.log('clean start', this.dcID/*, this.sentMessages*/)\r\n    const cleanMessages = (message, msgID) => {\r\n      // console.log('clean iter', msgID, message)\r\n      if (message.notContentRelated && this.pendingMessages[msgID] === undefined) {\r\n        // console.log('clean notContentRelated', msgID)\r\n        delete this.sentMessages[msgID]\r\n      }\r\n      else if (message.container) {\r\n        for (let i = 0; i < message.inner.length; i++) {\r\n          if (this.sentMessages[message.inner[i]] !== undefined) {\r\n            // console.log('clean failed, found', msgID, message.inner[i], this.sentMessages[message.inner[i]].seq_no)\r\n            notEmpty = true\r\n            return\r\n          }\r\n        }\r\n        // console.log('clean container', msgID)\r\n        delete this.sentMessages[msgID]\r\n      } else {\r\n        notEmpty = true\r\n      }\r\n    }\r\n    forEach(this.sentMessages, cleanMessages)\r\n\r\n    return !notEmpty\r\n  }\r\n\r\n  processMessageAck = messageID => {\r\n    const sentMessage = this.sentMessages[messageID]\r\n    if (sentMessage && !sentMessage.acked) {\r\n      delete sentMessage.body\r\n      sentMessage.acked = true\r\n\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  processError(rawError) {\r\n    const matches = (rawError.error_message || '').match(/^([A-Z_0-9]+\\b)(: (.+))?/) || []\r\n    rawError.error_code = uintToInt(rawError.error_code)\r\n\r\n    return {\r\n      code: !rawError.error_code || rawError.error_code <= 0\r\n        ? 500\r\n        : rawError.error_code,\r\n      type         : matches[1] || 'UNKNOWN',\r\n      description  : matches[3] || `CODE#${  rawError.error_code  } ${  rawError.error_message}`,\r\n      originalError: rawError\r\n    }\r\n  }\r\n  spliceMessage = badMsgID => {\r\n    const pos = this.pendingResends.indexOf(badMsgID)\r\n    if (pos !== -1)\r\n      this.pendingResends.splice(pos, 1)\r\n  }\r\n  processMessage(message, messageID, sessionID) {\r\n    const msgidInt = parseInt(messageID.toString(10).substr(0, -10), 10)\r\n    if (msgidInt % 2) {\r\n      console.warn('[MT] Server even message id: ', messageID, message)\r\n      return\r\n    }\r\n    // console.log('process message', message, messageID, sessionID)\r\n    switch (message._) {\r\n      case 'msg_container': {\r\n        const len = message.messages.length\r\n        for (let i = 0; i < len; i++) {\r\n          this.processMessage(message.messages[i], message.messages[i].msg_id, sessionID)\r\n        }\r\n        break\r\n      }\r\n      case 'bad_server_salt': {\r\n        console.log(dTime(), 'Bad server salt', message)\r\n        const sentMessage = this.sentMessages[message.bad_msg_id]\r\n        if (!sentMessage || sentMessage.seq_no != message.bad_msg_seqno) {\r\n          console.log(message.bad_msg_id, message.bad_msg_seqno)\r\n          throw new Error('[MT] Bad server salt for invalid message')\r\n        }\r\n\r\n        this.applyServerSalt(message.new_server_salt)\r\n        this.pushResend(message.bad_msg_id)\r\n        this.ackMessage(messageID)\r\n        break\r\n      }\r\n      case 'bad_msg_notification': {\r\n        console.log(dTime(), 'Bad msg notification', message)\r\n        const sentMessage = this.sentMessages[message.bad_msg_id]\r\n        if (!sentMessage || sentMessage.seq_no != message.bad_msg_seqno) {\r\n          console.log(message.bad_msg_id, message.bad_msg_seqno)\r\n          throw new Error('[MT] Bad msg notification for invalid message')\r\n        }\r\n\r\n        if (message.error_code == 16 || message.error_code == 17) {\r\n          if (applyServerTime(\r\n              bigStringInt(messageID)\r\n                .shiftRight(32)\r\n                .toString(10)\r\n            )) {\r\n            console.log(dTime(), 'Update session')\r\n            this.updateSession()\r\n          }\r\n          const badMessage = this.updateSentMessage(message.bad_msg_id)\r\n          this.pushResend(badMessage.msg_id)\r\n          this.ackMessage(messageID)\r\n        }\r\n        break\r\n      }\r\n      case 'message': {\r\n        if (this.lastServerMessages.indexOf(messageID) != -1) {\r\n          // console.warn('[MT] Server same messageID: ', messageID)\r\n          this.ackMessage(messageID)\r\n          return\r\n        }\r\n        this.lastServerMessages.push(messageID)\r\n        if (this.lastServerMessages.length > 100) {\r\n          this.lastServerMessages.shift()\r\n        }\r\n        this.processMessage(message.body, message.msg_id, sessionID)\r\n        break\r\n      }\r\n      case 'new_session_created': {\r\n        this.ackMessage(messageID)\r\n\r\n        this.processMessageAck(message.first_msg_id)\r\n        this.applyServerSalt(message.server_salt)\r\n\r\n        const onBaseDc = baseDcID => {\r\n          const updateCond =\r\n            baseDcID === this.dcID &&\r\n            !this.upload &&\r\n            updatesProcessor\r\n          if (updateCond)\r\n            updatesProcessor(message, true)\r\n        }\r\n        PureStorage.get('dc').then(onBaseDc)\r\n        break\r\n      }\r\n      case 'msgs_ack': {\r\n        message.msg_ids.forEach(this.processMessageAck)\r\n        break\r\n      }\r\n      case 'msg_detailed_info': {\r\n        if (!this.sentMessages[message.msg_id]) {\r\n          this.ackMessage(message.answer_msg_id)\r\n          break\r\n        }\r\n        break\r\n      }\r\n      case 'msg_new_detailed_info': {\r\n        // this.ackMessage(message.answer_msg_id)\r\n        this.reqResendMessage(message.answer_msg_id)\r\n        break\r\n      }\r\n      case 'msgs_state_info': {\r\n        this.ackMessage(message.answer_msg_id)\r\n        const spliceCond =\r\n          this.lastResendReq &&\r\n          this.lastResendReq.req_msg_id == message.req_msg_id &&\r\n          this.pendingResends.length\r\n        if (spliceCond)\r\n          this.lastResendReq.resend_msg_ids.forEach(this.spliceMessage)\r\n        break\r\n      }\r\n      case 'rpc_result': {\r\n        this.ackMessage(messageID)\r\n\r\n        const sentMessageID = message.req_msg_id\r\n        const sentMessage = this.sentMessages[sentMessageID]\r\n\r\n        this.processMessageAck(sentMessageID)\r\n        if (!sentMessage) break\r\n\r\n        const deferred = sentMessage.deferred\r\n        if (message.result._ == 'rpc_error') {\r\n          const error = this.processError(message.result)\r\n          console.log(dTime(), 'Rpc error', error)\r\n          if (deferred) {\r\n            deferred.reject(error)\r\n          }\r\n        } else {\r\n          if (deferred) {\r\n            if (Config.Modes.debug) {\r\n              console.log(dTime(), 'Rpc response', message.result)\r\n            } else {\r\n              let dRes = message.result._\r\n              if (!dRes)\r\n                dRes = message.result.length > 5\r\n                  ? `[..${  message.result.length  }..]`\r\n                  : message.result\r\n              console.log(dTime(), 'Rpc response', dRes)\r\n            }\r\n            sentMessage.deferred.resolve(message.result)\r\n          }\r\n          if (sentMessage.isAPI)\r\n            this.connectionInited = true\r\n        }\r\n\r\n        delete this.sentMessages[sentMessageID]\r\n        break\r\n      }\r\n      default: {\r\n        this.ackMessage(messageID)\r\n\r\n        // console.log('Update', message)\r\n        if (updatesProcessor) updatesProcessor(message, true)\r\n        break\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst getDeserializeOpts = msgGetter => ({\r\n  mtproto : true,\r\n  override: {\r\n    mt_message(result, field) {\r\n      result.msg_id = this.fetchLong(`${field  }[msg_id]`)\r\n      result.seqno = this.fetchInt(`${field  }[seqno]`)\r\n      result.bytes = this.fetchInt(`${field  }[bytes]`)\r\n\r\n      const offset = this.getOffset()\r\n\r\n      try {\r\n        result.body = this.fetchObject('Object', `${field  }[body]`)\r\n      } catch (e) {\r\n        console.error(dTime(), 'parse error', e.message, e.stack)\r\n        result.body = { _: 'parse_error', error: e }\r\n      }\r\n      if (this.offset != offset + result.bytes) {\r\n        // console.warn(dTime(), 'set offset', this.offset, offset, result.bytes)\r\n        // console.log(dTime(), result)\r\n        this.offset = offset + result.bytes\r\n      }\r\n      // console.log(dTime(), 'override message', result)\r\n    },\r\n    mt_rpc_result(result, field) {\r\n      result.req_msg_id = this.fetchLong(`${ field }[req_msg_id]`)\r\n\r\n      const sentMessage = msgGetter(result)\r\n      const type = sentMessage && sentMessage.resultType || 'Object'\r\n\r\n      if (result.req_msg_id && !sentMessage) {\r\n        // console.warn(dTime(), 'Result for unknown message', result)\r\n        return\r\n      }\r\n      result.result = this.fetchObject(type, `${ field }[result]`)\r\n      // console.log(dTime(), 'override rpc_result', sentMessage, type, result)\r\n    }\r\n  }\r\n})\r\n\r\nexport const startAll = () => {\r\n  if (akStopped) {\r\n    akStopped = false\r\n    updatesProcessor({ _: 'new_session_created' }, true)\r\n  }\r\n}\r\n\r\nexport const stopAll = () => akStopped = true\r\n\r\nexport const getNetworker = (appConfig, emit) => {\r\n  const Networker = NetworkerFabric(appConfig, emit)\r\n  return (dc, authKey, serverSalt, options) =>\r\n    new Networker(dc, authKey, serverSalt, options)\r\n}\r\nexport const setUpdatesProcessor = callback =>\r\n  updatesProcessor = callback\r\n\n\n\n// WEBPACK FOOTER //\n// ./service/networker.js","module.exports = (__webpack_require__(0))(360);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ../node_modules/timers-browserify/main.js from dll-reference vendor\n// module id = 17\n// module chunks = 0","module.exports = (__webpack_require__(0))(63);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ../node_modules/setimmediate/setImmediate.js from dll-reference vendor\n// module id = 19\n// module chunks = 0","////////////////////////////////////////////////////////////////////////////////////////\r\n// Big Integer Library v. 5.5\r\n// Created 2000, last modified 2013\r\n// Leemon Baird\r\n// www.leemon.com\r\n//\r\n// Version history:\r\n// v 5.5  17 Mar 2013\r\n//   - two lines of a form like \"if (x<0) x+=n\" had the \"if\" changed to \"while\" to\r\n//     handle the case when x<-n. (Thanks to James Ansell for finding that bug)\r\n// v 5.4  3 Oct 2009\r\n//   - added \"var i\" to greaterShift() so i is not global. (Thanks to PŽter Szab— for finding that bug)\r\n//\r\n// v 5.3  21 Sep 2009\r\n//   - added randProbPrime(k) for probable primes\r\n//   - unrolled loop in mont_ (slightly faster)\r\n//   - millerRabin now takes a bigInt parameter rather than an int\r\n//\r\n// v 5.2  15 Sep 2009\r\n//   - fixed capitalization in call to int2bigInt in randBigInt\r\n//     (thanks to Emili Evripidou, Reinhold Behringer, and Samuel Macaleese for finding that bug)\r\n//\r\n// v 5.1  8 Oct 2007\r\n//   - renamed inverseModInt_ to inverseModInt since it doesn't change its parameters\r\n//   - added functions GCD and randBigInt, which call GCD_ and randBigInt_\r\n//   - fixed a bug found by Rob Visser (see comment with his name below)\r\n//   - improved comments\r\n//\r\n// This file is public domain.   You can use it for any purpose without restriction.\r\n// I do not guarantee that it is correct, so use it at your own risk.  If you use\r\n// it for something interesting, I'd appreciate hearing about it.  If you find\r\n// any bugs or make any improvements, I'd appreciate hearing about those too.\r\n// It would also be nice if my name and URL were left in the comments.  But none\r\n// of that is required.\r\n//\r\n// This code defines a bigInt library for arbitrary-precision integers.\r\n// A bigInt is an array of integers storing the value in chunks of bpe bits,\r\n// little endian (buff[0] is the least significant word).\r\n// Negative bigInts are stored two's complement.  Almost all the functions treat\r\n// bigInts as nonnegative.  The few that view them as two's complement say so\r\n// in their comments.  Some functions assume their parameters have at least one\r\n// leading zero element. Functions with an underscore at the end of the name put\r\n// their answer into one of the arrays passed in, and have unpredictable behavior\r\n// in case of overflow, so the caller must make sure the arrays are big enough to\r\n// hold the answer.  But the average user should never have to call any of the\r\n// underscored functions.  Each important underscored function has a wrapper function\r\n// of the same name without the underscore that takes care of the details for you.\r\n// For each underscored function where a parameter is modified, that same variable\r\n// must not be used as another argument too.  So, you cannot square x by doing\r\n// multMod_(x,x,n).  You must use squareMod_(x,n) instead, or do y=dup(x); multMod_(x,y,n).\r\n// Or simply use the multMod(x,x,n) function without the underscore, where\r\n// such issues never arise, because non-underscored functions never change\r\n// their parameters; they always allocate new memory for the answer that is returned.\r\n//\r\n// These functions are designed to avoid frequent dynamic memory allocation in the inner loop.\r\n// For most functions, if it needs a BigInt as a local variable it will actually use\r\n// a global, and will only allocate to it only when it's not the right size.  This ensures\r\n// that when a function is called repeatedly with same-sized parameters, it only allocates\r\n// memory on the first call.\r\n//\r\n// Note that for cryptographic purposes, the calls to Math.random() must\r\n// be replaced with calls to a better pseudorandom number generator.\r\n//\r\n// In the following, \"bigInt\" means a bigInt with at least one leading zero element,\r\n// and \"integer\" means a nonnegative integer less than radix.  In some cases, integer\r\n// can be negative.  Negative bigInts are 2s complement.\r\n//\r\n// The following functions do not modify their inputs.\r\n// Those returning a bigInt, string, or Array will dynamically allocate memory for that value.\r\n// Those returning a boolean will return the integer 0 (false) or 1 (true).\r\n// Those returning boolean or int will not allocate memory except possibly on the first\r\n// time they're called with a given parameter size.\r\n//\r\n// bigInt  add(x,y)               //return (x+y) for bigInts x and y.\r\n// bigInt  addInt(x,n)            //return (x+n) where x is a bigInt and n is an integer.\r\n// string  bigInt2str(x,base)     //return a string form of bigInt x in a given base, with 2 <= base <= 95\r\n// int     bitSize(x)             //return how many bits long the bigInt x is, not counting leading zeros\r\n// bigInt  dup(x)                 //return a copy of bigInt x\r\n// boolean equals(x,y)            //is the bigInt x equal to the bigint y?\r\n// boolean equalsInt(x,y)         //is bigint x equal to integer y?\r\n// bigInt  expand(x,n)            //return a copy of x with at least n elements, adding leading zeros if needed\r\n// Array   findPrimes(n)          //return array of all primes less than integer n\r\n// bigInt  GCD(x,y)               //return greatest common divisor of bigInts x and y (each with same number of elements).\r\n// boolean greater(x,y)           //is x>y?  (x and y are nonnegative bigInts)\r\n// boolean greaterShift(x,y,shift)//is (x <<(shift*bpe)) > y?\r\n// bigInt  int2bigInt(t,n,m)      //return a bigInt equal to integer t, with at least n bits and m array elements\r\n// bigInt  inverseMod(x,n)        //return (x**(-1) mod n) for bigInts x and n.  If no inverse exists, it returns null\r\n// int     inverseModInt(x,n)     //return x**(-1) mod n, for integers x and n.  Return 0 if there is no inverse\r\n// boolean isZero(x)              //is the bigInt x equal to zero?\r\n// boolean millerRabin(x,b)       //does one round of Miller-Rabin base integer b say that bigInt x is possibly prime? (b is bigInt, 1<b<x)\r\n// boolean millerRabinInt(x,b)    //does one round of Miller-Rabin base integer b say that bigInt x is possibly prime? (b is int,    1<b<x)\r\n// bigInt  mod(x,n)               //return a new bigInt equal to (x mod n) for bigInts x and n.\r\n// int     modInt(x,n)            //return x mod n for bigInt x and integer n.\r\n// bigInt  mult(x,y)              //return x*y for bigInts x and y. This is faster when y<x.\r\n// bigInt  multMod(x,y,n)         //return (x*y mod n) for bigInts x,y,n.  For greater speed, let y<x.\r\n// boolean negative(x)            //is bigInt x negative?\r\n// bigInt  powMod(x,y,n)          //return (x**y mod n) where x,y,n are bigInts and ** is exponentiation.  0**0=1. Faster for odd n.\r\n// bigInt  randBigInt(n,s)        //return an n-bit random BigInt (n>=1).  If s=1, then the most significant of those n bits is set to 1.\r\n// bigInt  randTruePrime(k)       //return a new, random, k-bit, true prime bigInt using Maurer's algorithm.\r\n// bigInt  randProbPrime(k)       //return a new, random, k-bit, probable prime bigInt (probability it's composite less than 2^-80).\r\n// bigInt  str2bigInt(s,b,n,m)    //return a bigInt for number represented in string s in base b with at least n bits and m array elements\r\n// bigInt  sub(x,y)               //return (x-y) for bigInts x and y.  Negative answers will be 2s complement\r\n// bigInt  trim(x,k)              //return a copy of x with exactly k leading zero elements\r\n//\r\n//\r\n// The following functions each have a non-underscored version, which most users should call instead.\r\n// These functions each write to a single parameter, and the caller is responsible for ensuring the array\r\n// passed in is large enough to hold the result.\r\n//\r\n// void    addInt_(x,n)          //do x=x+n where x is a bigInt and n is an integer\r\n// void    add_(x,y)             //do x=x+y for bigInts x and y\r\n// void    copy_(x,y)            //do x=y on bigInts x and y\r\n// void    copyInt_(x,n)         //do x=n on bigInt x and integer n\r\n// void    GCD_(x,y)             //set x to the greatest common divisor of bigInts x and y, (y is destroyed).  (This never overflows its array).\r\n// boolean inverseMod_(x,n)      //do x=x**(-1) mod n, for bigInts x and n. Returns 1 (0) if inverse does (doesn't) exist\r\n// void    mod_(x,n)             //do x=x mod n for bigInts x and n. (This never overflows its array).\r\n// void    mult_(x,y)            //do x=x*y for bigInts x and y.\r\n// void    multMod_(x,y,n)       //do x=x*y  mod n for bigInts x,y,n.\r\n// void    powMod_(x,y,n)        //do x=x**y mod n, where x,y,n are bigInts (n is odd) and ** is exponentiation.  0**0=1.\r\n// void    randBigInt_(b,n,s)    //do b = an n-bit random BigInt. if s=1, then nth bit (most significant bit) is set to 1. n>=1.\r\n// void    randTruePrime_(ans,k) //do ans = a random k-bit true random prime (not just probable prime) with 1 in the msb.\r\n// void    sub_(x,y)             //do x=x-y for bigInts x and y. Negative answers will be 2s complement.\r\n//\r\n// The following functions do NOT have a non-underscored version.\r\n// They each write a bigInt result to one or more parameters.  The caller is responsible for\r\n// ensuring the arrays passed in are large enough to hold the results.\r\n//\r\n// void addShift_(x,y,ys)       //do x=x+(y<<(ys*bpe))\r\n// void carry_(x)               //do carries and borrows so each element of the bigInt x fits in bpe bits.\r\n// void divide_(x,y,q,r)        //divide x by y giving quotient q and remainder r\r\n// int  divInt_(x,n)            //do x=floor(x/n) for bigInt x and integer n, and return the remainder. (This never overflows its array).\r\n// int  eGCD_(x,y,d,a,b)        //sets a,b,d to positive bigInts such that d = GCD_(x,y) = a*x-b*y\r\n// void halve_(x)               //do x=floor(|x|/2)*sgn(x) for bigInt x in 2's complement.  (This never overflows its array).\r\n// void leftShift_(x,n)         //left shift bigInt x by n bits.  n<bpe.\r\n// void linComb_(x,y,a,b)       //do x=a*x+b*y for bigInts x and y and integers a and b\r\n// void linCombShift_(x,y,b,ys) //do x=x+b*(y<<(ys*bpe)) for bigInts x and y, and integers b and ys\r\n// void mont_(x,y,n,np)         //Montgomery multiplication (see comments where the function is defined)\r\n// void multInt_(x,n)           //do x=x*n where x is a bigInt and n is an integer.\r\n// void rightShift_(x,n)        //right shift bigInt x by n bits.  0 <= n < bpe. (This never overflows its array).\r\n// void squareMod_(x,n)         //do x=x*x  mod n for bigInts x,n\r\n// void subShift_(x,y,ys)       //do x=x-(y<<(ys*bpe)). Negative answers will be 2s complement.\r\n//\r\n// The following functions are based on algorithms from the _Handbook of Applied Cryptography_\r\n//    powMod_()           = algorithm 14.94, Montgomery exponentiation\r\n//    eGCD_,inverseMod_() = algorithm 14.61, Binary extended GCD_\r\n//    GCD_()              = algorothm 14.57, Lehmer's algorithm\r\n//    mont_()             = algorithm 14.36, Montgomery multiplication\r\n//    divide_()           = algorithm 14.20  Multiple-precision division\r\n//    squareMod_()        = algorithm 14.16  Multiple-precision squaring\r\n//    randTruePrime_()    = algorithm  4.62, Maurer's algorithm\r\n//    millerRabin()       = algorithm  4.24, Miller-Rabin algorithm\r\n//\r\n// Profiling shows:\r\n//     randTruePrime_() spends:\r\n//         10% of its time in calls to powMod_()\r\n//         85% of its time in calls to millerRabin()\r\n//     millerRabin() spends:\r\n//         99% of its time in calls to powMod_()   (always with a base of 2)\r\n//     powMod_() spends:\r\n//         94% of its time in calls to mont_()  (almost always with x==y)\r\n//\r\n// This suggests there are several ways to speed up this library slightly:\r\n//     - convert powMod_ to use a Montgomery form of k-ary window (or maybe a Montgomery form of sliding window)\r\n//         -- this should especially focus on being fast when raising 2 to a power mod n\r\n//     - convert randTruePrime_() to use a minimum r of 1/3 instead of 1/2 with the appropriate change to the test\r\n//     - tune the parameters in randTruePrime_(), including c, m, and recLimit\r\n//     - speed up the single loop in mont_() that takes 95% of the runtime, perhaps by reducing checking\r\n//       within the loop when all the parameters are the same length.\r\n//\r\n// There are several ideas that look like they wouldn't help much at all:\r\n//     - replacing trial division in randTruePrime_() with a sieve (that speeds up something taking almost no time anyway)\r\n//     - increase bpe from 15 to 30 (that would help if we had a 32*32->64 multiplier, but not with JavaScript's 32*32->32)\r\n//     - speeding up mont_(x,y,n,np) when x==y by doing a non-modular, non-Montgomery square\r\n//       followed by a Montgomery reduction.  The intermediate answer will be twice as long as x, so that\r\n//       method would be slower.  This is unfortunate because the code currently spends almost all of its time\r\n//       doing mont_(x,x,...), both for randTruePrime_() and powMod_().  A faster method for Montgomery squaring\r\n//       would have a large impact on the speed of randTruePrime_() and powMod_().  HAC has a couple of poorly-worded\r\n//       sentences that seem to imply it's faster to do a non-modular square followed by a single\r\n//       Montgomery reduction, but that's obviously wrong.\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n//globals\r\nexport var bpe=0;         //bits stored per array element\r\nvar mask=0;        //AND this with an array element to chop it down to bpe bits\r\nvar radix=mask+1;  //equals 2^bpe.  A single 1 bit to the left of the last bit of mask.\r\n\r\n//the digits for converting to different bases\r\nvar digitsStr='0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_=!@#$%^&*()[]{}|;:,.<>/?`~ \\\\\\'\\\"+-';\r\n\r\n//initialize the global variables\r\nfor (bpe=0; (1<<(bpe+1)) > (1<<bpe); bpe++);  //bpe=number of bits in the mantissa on this platform\r\nbpe>>=1;                   //bpe=number of bits in one element of the array representing the bigInt\r\nmask=(1<<bpe)-1;           //AND the mask with an integer to get its bpe least significant bits\r\nradix=mask+1;              //2^bpe.  a single 1 bit to the left of the first bit of mask\r\nexport var one=int2bigInt(1,1,1);     //constant used in powMod_()\r\n\r\n//the following global variables are scratchpad memory to\r\n//reduce dynamic memory allocation in the inner loop\r\nvar t=new Array(0);\r\nvar ss=t;       //used in mult_()\r\nvar s0=t;       //used in multMod_(), squareMod_()\r\nvar s1=t;       //used in powMod_(), multMod_(), squareMod_()\r\nvar s2=t;       //used in powMod_(), multMod_()\r\nvar s3=t;       //used in powMod_()\r\nvar s4=t, s5=t; //used in mod_()\r\nvar s6=t;       //used in bigInt2str()\r\nvar s7=t;       //used in powMod_()\r\nvar T=t;        //used in GCD_()\r\nvar sa=t;       //used in mont_()\r\nvar mr_x1=t, mr_r=t, mr_a=t,                                      //used in millerRabin()\r\neg_v=t, eg_u=t, eg_A=t, eg_B=t, eg_C=t, eg_D=t,               //used in eGCD_(), inverseMod_()\r\nmd_q1=t, md_q2=t, md_q3=t, md_r=t, md_r1=t, md_r2=t, md_tt=t, //used in mod_()\r\n\r\nprimes=t, pows=t, s_i=t, s_i2=t, s_R=t, s_rm=t, s_q=t, s_n1=t,\r\n  s_a=t, s_r2=t, s_n=t, s_b=t, s_d=t, s_x1=t, s_x2=t, s_aa=t, //used in randTruePrime_()\r\n\r\nrpprb=t; //used in randProbPrimeRounds() (which also uses \"primes\")\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nvar k, buff\r\n\r\n//return array of all primes less than integer n\r\nfunction findPrimes(n) {\r\n  var i,s,p,ans;\r\n  s=new Array(n);\r\n  for (i=0;i<n;i++)\r\n    s[i]=0;\r\n  s[0]=2;\r\n  p=0;    //first p elements of s are primes, the rest are a sieve\r\n  for(;s[p]<n;) {                  //s[p] is the pth prime\r\n    for(i=s[p]*s[p]; i<n; i+=s[p]) //mark multiples of s[p]\r\n      s[i]=1;\r\n    p++;\r\n    s[p]=s[p-1]+1;\r\n    for(; s[p]<n && s[s[p]]; s[p]++); //find next prime (where s[p]==0)\r\n  }\r\n  ans=new Array(p);\r\n  for(i=0;i<p;i++)\r\n    ans[i]=s[i];\r\n  return ans;\r\n}\r\n\r\n\r\n//does a single round of Miller-Rabin base b consider x to be a possible prime?\r\n//x is a bigInt, and b is an integer, with b<x\r\nfunction millerRabinInt(x,b) {\r\n  if (mr_x1.length!=x.length) {\r\n    mr_x1=dup(x);\r\n    mr_r=dup(x);\r\n    mr_a=dup(x);\r\n  }\r\n\r\n  copyInt_(mr_a,b);\r\n  return millerRabin(x,mr_a);\r\n}\r\n\r\n//does a single round of Miller-Rabin base b consider x to be a possible prime?\r\n//x and b are bigInts with b<x\r\nfunction millerRabin(x,b) {\r\n  var i,j,k,s;\r\n\r\n  if (mr_x1.length!=x.length) {\r\n    mr_x1=dup(x);\r\n    mr_r=dup(x);\r\n    mr_a=dup(x);\r\n  }\r\n\r\n  copy_(mr_a,b);\r\n  copy_(mr_r,x);\r\n  copy_(mr_x1,x);\r\n\r\n  addInt_(mr_r,-1);\r\n  addInt_(mr_x1,-1);\r\n\r\n  //s=the highest power of two that divides mr_r\r\n  k=0;\r\n  for (i=0;i<mr_r.length;i++)\r\n    for (j=1;j<mask;j<<=1)\r\n      if (x[i] & j) {\r\n        s=(k<mr_r.length+bpe ? k : 0);\r\n         i=mr_r.length;\r\n         j=mask;\r\n      } else\r\n        k++;\r\n\r\n  if (s)\r\n    rightShift_(mr_r,s);\r\n\r\n  powMod_(mr_a,mr_r,x);\r\n\r\n  if (!equalsInt(mr_a,1) && !equals(mr_a,mr_x1)) {\r\n    j=1;\r\n    while (j<=s-1 && !equals(mr_a,mr_x1)) {\r\n      squareMod_(mr_a,x);\r\n      if (equalsInt(mr_a,1)) {\r\n        return 0;\r\n      }\r\n      j++;\r\n    }\r\n    if (!equals(mr_a,mr_x1)) {\r\n      return 0;\r\n    }\r\n  }\r\n  return 1;\r\n}\r\n\r\n//returns how many bits long the bigInt is, not counting leading zeros.\r\nfunction bitSize(x) {\r\n  var j,z,w;\r\n  for (j=x.length-1; (x[j]==0) && (j>0); j--);\r\n  for (z=0,w=x[j]; w; (w>>=1),z++);\r\n  z+=bpe*j;\r\n  return z;\r\n}\r\n\r\n//return a copy of x with at least n elements, adding leading zeros if needed\r\nfunction expand(x,n) {\r\n  var ans=int2bigInt(0,(x.length>n ? x.length : n)*bpe,0);\r\n  copy_(ans,x);\r\n  return ans;\r\n}\r\n\r\n//return a k-bit true random prime using Maurer's algorithm.\r\nfunction randTruePrime(k) {\r\n  var ans=int2bigInt(0,k,0);\r\n  randTruePrime_(ans,k);\r\n  return trim(ans,1);\r\n}\r\n\r\n//return a k-bit random probable prime with probability of error < 2^-80\r\nfunction randProbPrime(k) {\r\n  if (k>=600) return randProbPrimeRounds(k,2); //numbers from HAC table 4.3\r\n  if (k>=550) return randProbPrimeRounds(k,4);\r\n  if (k>=500) return randProbPrimeRounds(k,5);\r\n  if (k>=400) return randProbPrimeRounds(k,6);\r\n  if (k>=350) return randProbPrimeRounds(k,7);\r\n  if (k>=300) return randProbPrimeRounds(k,9);\r\n  if (k>=250) return randProbPrimeRounds(k,12); //numbers from HAC table 4.4\r\n  if (k>=200) return randProbPrimeRounds(k,15);\r\n  if (k>=150) return randProbPrimeRounds(k,18);\r\n  if (k>=100) return randProbPrimeRounds(k,27);\r\n              return randProbPrimeRounds(k,40); //number from HAC remark 4.26 (only an estimate)\r\n}\r\n\r\n//return a k-bit probable random prime using n rounds of Miller Rabin (after trial division with small primes)\r\nfunction randProbPrimeRounds(k,n) {\r\n  var ans, i, divisible, B;\r\n  B=30000;  //B is largest prime to use in trial division\r\n  ans=int2bigInt(0,k,0);\r\n\r\n  //optimization: try larger and smaller B to find the best limit.\r\n\r\n  if (primes.length==0)\r\n    primes=findPrimes(30000);  //check for divisibility by primes <=30000\r\n\r\n  if (rpprb.length!=ans.length)\r\n    rpprb=dup(ans);\r\n\r\n  for (;;) { //keep trying random values for ans until one appears to be prime\r\n    //optimization: pick a random number times L=2*3*5*...*p, plus a\r\n    //   random element of the list of all numbers in [0,L) not divisible by any prime up to p.\r\n    //   This can reduce the amount of random number generation.\r\n\r\n    randBigInt_(ans,k,0); //ans = a random odd number to check\r\n    ans[0] |= 1;\r\n    divisible=0;\r\n\r\n    //check ans for divisibility by small primes up to B\r\n    for (i=0; (i<primes.length) && (primes[i]<=B); i++)\r\n      if (modInt(ans,primes[i])==0 && !equalsInt(ans,primes[i])) {\r\n        divisible=1;\r\n        break;\r\n      }\r\n\r\n    //optimization: change millerRabin so the base can be bigger than the number being checked, then eliminate the while here.\r\n\r\n    //do n rounds of Miller Rabin, with random bases less than ans\r\n    for (i=0; i<n && !divisible; i++) {\r\n      randBigInt_(rpprb,k,0);\r\n      while(!greater(ans,rpprb)) //pick a random rpprb that's < ans\r\n        randBigInt_(rpprb,k,0);\r\n      if (!millerRabin(ans,rpprb))\r\n        divisible=1;\r\n    }\r\n\r\n    if(!divisible)\r\n      return ans;\r\n  }\r\n}\r\n\r\n//return a new bigInt equal to (x mod n) for bigInts x and n.\r\nfunction mod(x,n) {\r\n  var ans=dup(x);\r\n  mod_(ans,n);\r\n  return trim(ans,1);\r\n}\r\n\r\n//return (x+n) where x is a bigInt and n is an integer.\r\nfunction addInt(x,n) {\r\n  var ans=expand(x,x.length+1);\r\n  addInt_(ans,n);\r\n  return trim(ans,1);\r\n}\r\n\r\n//return x*y for bigInts x and y. This is faster when y<x.\r\nfunction mult(x,y) {\r\n  var ans=expand(x,x.length+y.length);\r\n  mult_(ans,y);\r\n  return trim(ans,1);\r\n}\r\n\r\n//return (x**y mod n) where x,y,n are bigInts and ** is exponentiation.  0**0=1. Faster for odd n.\r\nexport function powMod(x,y,n) {\r\n  var ans=expand(x,n.length);\r\n  powMod_(ans,trim(y,2),trim(n,2),0);  //this should work without the trim, but doesn't\r\n  return trim(ans,1);\r\n}\r\n\r\n//return (x-y) for bigInts x and y.  Negative answers will be 2s complement\r\nfunction sub(x,y) {\r\n  var ans=expand(x,(x.length>y.length ? x.length+1 : y.length+1));\r\n  sub_(ans,y);\r\n  return trim(ans,1);\r\n}\r\n\r\n//return (x+y) for bigInts x and y.\r\nfunction add(x,y) {\r\n  var ans=expand(x,(x.length>y.length ? x.length+1 : y.length+1));\r\n  add_(ans,y);\r\n  return trim(ans,1);\r\n}\r\n\r\n//return (x**(-1) mod n) for bigInts x and n.  If no inverse exists, it returns null\r\nfunction inverseMod(x,n) {\r\n  var ans=expand(x,n.length);\r\n  var s;\r\n  s=inverseMod_(ans,n);\r\n  return s ? trim(ans,1) : null;\r\n}\r\n\r\n//return (x*y mod n) for bigInts x,y,n.  For greater speed, let y<x.\r\nfunction multMod(x,y,n) {\r\n  var ans=expand(x,n.length);\r\n  multMod_(ans,y,n);\r\n  return trim(ans,1);\r\n}\r\n\r\n//generate a k-bit true random prime using Maurer's algorithm,\r\n//and put it into ans.  The bigInt ans must be large enough to hold it.\r\nfunction randTruePrime_(ans,k) {\r\n  var c,m,pm,dd,j,r,B,divisible,z,zz,recSize;\r\n\r\n  if (primes.length==0)\r\n    primes=findPrimes(30000);  //check for divisibility by primes <=30000\r\n\r\n  if (pows.length==0) {\r\n    pows=new Array(512);\r\n    for (j=0;j<512;j++) {\r\n      pows[j]=Math.pow(2,j/511.-1.);\r\n    }\r\n  }\r\n\r\n  //c and m should be tuned for a particular machine and value of k, to maximize speed\r\n  c=0.1;  //c=0.1 in HAC\r\n  m=20;   //generate this k-bit number by first recursively generating a number that has between k/2 and k-m bits\r\n  recLimit=20; //stop recursion when k <=recLimit.  Must have recLimit >= 2\r\n\r\n  if (s_i2.length!=ans.length) {\r\n    s_i2=dup(ans);\r\n    s_R =dup(ans);\r\n    s_n1=dup(ans);\r\n    s_r2=dup(ans);\r\n    s_d =dup(ans);\r\n    s_x1=dup(ans);\r\n    s_x2=dup(ans);\r\n    s_b =dup(ans);\r\n    s_n =dup(ans);\r\n    s_i =dup(ans);\r\n    s_rm=dup(ans);\r\n    s_q =dup(ans);\r\n    s_a =dup(ans);\r\n    s_aa=dup(ans);\r\n  }\r\n\r\n  if (k <= recLimit) {  //generate small random primes by trial division up to its square root\r\n    pm=(1<<((k+2)>>1))-1; //pm is binary number with all ones, just over sqrt(2^k)\r\n    copyInt_(ans,0);\r\n    for (dd=1;dd;) {\r\n      dd=0;\r\n      ans[0]= 1 | (1<<(k-1)) | Math.floor(Math.random()*(1<<k));  //random, k-bit, odd integer, with msb 1\r\n      for (j=1;(j<primes.length) && ((primes[j]&pm)==primes[j]);j++) { //trial division by all primes 3...sqrt(2^k)\r\n        if (0==(ans[0]%primes[j])) {\r\n          dd=1;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    carry_(ans);\r\n    return;\r\n  }\r\n\r\n  B=c*k*k;    //try small primes up to B (or all the primes[] array if the largest is less than B).\r\n  if (k>2*m)  //generate this k-bit number by first recursively generating a number that has between k/2 and k-m bits\r\n    for (r=1; k-k*r<=m; )\r\n      r=pows[Math.floor(Math.random()*512)];   //r=Math.pow(2,Math.random()-1);\r\n  else\r\n    r=.5;\r\n\r\n  //simulation suggests the more complex algorithm using r=.333 is only slightly faster.\r\n\r\n  recSize=Math.floor(r*k)+1;\r\n\r\n  randTruePrime_(s_q,recSize);\r\n  copyInt_(s_i2,0);\r\n  s_i2[Math.floor((k-2)/bpe)] |= (1<<((k-2)%bpe));   //s_i2=2^(k-2)\r\n  divide_(s_i2,s_q,s_i,s_rm);                        //s_i=floor((2^(k-1))/(2q))\r\n\r\n  z=bitSize(s_i);\r\n\r\n  for (;;) {\r\n    for (;;) {  //generate z-bit numbers until one falls in the range [0,s_i-1]\r\n      randBigInt_(s_R,z,0);\r\n      if (greater(s_i,s_R))\r\n        break;\r\n    }                //now s_R is in the range [0,s_i-1]\r\n    addInt_(s_R,1);  //now s_R is in the range [1,s_i]\r\n    add_(s_R,s_i);   //now s_R is in the range [s_i+1,2*s_i]\r\n\r\n    copy_(s_n,s_q);\r\n    mult_(s_n,s_R);\r\n    multInt_(s_n,2);\r\n    addInt_(s_n,1);    //s_n=2*s_R*s_q+1\r\n\r\n    copy_(s_r2,s_R);\r\n    multInt_(s_r2,2);  //s_r2=2*s_R\r\n\r\n    //check s_n for divisibility by small primes up to B\r\n    for (divisible=0,j=0; (j<primes.length) && (primes[j]<B); j++)\r\n      if (modInt(s_n,primes[j])==0 && !equalsInt(s_n,primes[j])) {\r\n        divisible=1;\r\n        break;\r\n      }\r\n\r\n    if (!divisible)    //if it passes small primes check, then try a single Miller-Rabin base 2\r\n      if (!millerRabinInt(s_n,2)) //this line represents 75% of the total runtime for randTruePrime_\r\n        divisible=1;\r\n\r\n    if (!divisible) {  //if it passes that test, continue checking s_n\r\n      addInt_(s_n,-3);\r\n      for (j=s_n.length-1;(s_n[j]==0) && (j>0); j--);  //strip leading zeros\r\n      for (zz=0,w=s_n[j]; w; (w>>=1),zz++);\r\n      zz+=bpe*j;                             //zz=number of bits in s_n, ignoring leading zeros\r\n      for (;;) {  //generate z-bit numbers until one falls in the range [0,s_n-1]\r\n        randBigInt_(s_a,zz,0);\r\n        if (greater(s_n,s_a))\r\n          break;\r\n      }                //now s_a is in the range [0,s_n-1]\r\n      addInt_(s_n,3);  //now s_a is in the range [0,s_n-4]\r\n      addInt_(s_a,2);  //now s_a is in the range [2,s_n-2]\r\n      copy_(s_b,s_a);\r\n      copy_(s_n1,s_n);\r\n      addInt_(s_n1,-1);\r\n      powMod_(s_b,s_n1,s_n);   //s_b=s_a^(s_n-1) modulo s_n\r\n      addInt_(s_b,-1);\r\n      if (isZero(s_b)) {\r\n        copy_(s_b,s_a);\r\n        powMod_(s_b,s_r2,s_n);\r\n        addInt_(s_b,-1);\r\n        copy_(s_aa,s_n);\r\n        copy_(s_d,s_b);\r\n        GCD_(s_d,s_n);  //if s_b and s_n are relatively prime, then s_n is a prime\r\n        if (equalsInt(s_d,1)) {\r\n          copy_(ans,s_aa);\r\n          return;     //if we've made it this far, then s_n is absolutely guaranteed to be prime\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n//Return an n-bit random BigInt (n>=1).  If s=1, then the most significant of those n bits is set to 1.\r\nfunction randBigInt(n,s) {\r\n  var a,b;\r\n  a=Math.floor((n-1)/bpe)+2; //# array elements to hold the BigInt with a leading 0 element\r\n  b=int2bigInt(0,0,a);\r\n  randBigInt_(b,n,s);\r\n  return b;\r\n}\r\n\r\n//Set b to an n-bit random BigInt.  If s=1, then the most significant of those n bits is set to 1.\r\n//Array b must be big enough to hold the result. Must have n>=1\r\nfunction randBigInt_(b,n,s) {\r\n  var i,a;\r\n  for (i=0;i<b.length;i++)\r\n    b[i]=0;\r\n  a=Math.floor((n-1)/bpe)+1; //# array elements to hold the BigInt\r\n  for (i=0;i<a;i++) {\r\n    b[i]=Math.floor(Math.random()*(1<<(bpe-1)));\r\n  }\r\n  b[a-1] &= (2<<((n-1)%bpe))-1;\r\n  if (s==1)\r\n    b[a-1] |= (1<<((n-1)%bpe));\r\n}\r\n\r\n//Return the greatest common divisor of bigInts x and y (each with same number of elements).\r\nfunction GCD(x,y) {\r\n  var xc,yc;\r\n  xc=dup(x);\r\n  yc=dup(y);\r\n  GCD_(xc,yc);\r\n  return xc;\r\n}\r\n\r\n//set x to the greatest common divisor of bigInts x and y (each with same number of elements).\r\n//y is destroyed.\r\nfunction GCD_(x,y) {\r\n  var i,xp,yp,A,B,C,D,q,sing;\r\n  if (T.length!=x.length)\r\n    T=dup(x);\r\n\r\n  sing=1;\r\n  while (sing) { //while y has nonzero elements other than y[0]\r\n    sing=0;\r\n    for (i=1;i<y.length;i++) //check if y has nonzero elements other than 0\r\n      if (y[i]) {\r\n        sing=1;\r\n        break;\r\n      }\r\n    if (!sing) break; //quit when y all zero elements except possibly y[0]\r\n\r\n    for (i=x.length;!x[i] && i>=0;i--);  //find most significant element of x\r\n    xp=x[i];\r\n    yp=y[i];\r\n    A=1; B=0; C=0; D=1;\r\n    while ((yp+C) && (yp+D)) {\r\n      q =Math.floor((xp+A)/(yp+C));\r\n      qp=Math.floor((xp+B)/(yp+D));\r\n      if (q!=qp)\r\n        break;\r\n      t= A-q*C;   A=C;   C=t;    //  do (A,B,xp, C,D,yp) = (C,D,yp, A,B,xp) - q*(0,0,0, C,D,yp)\r\n      t= B-q*D;   B=D;   D=t;\r\n      t=xp-q*yp; xp=yp; yp=t;\r\n    }\r\n    if (B) {\r\n      copy_(T,x);\r\n      linComb_(x,y,A,B); //x=A*x+B*y\r\n      linComb_(y,T,D,C); //y=D*y+C*T\r\n    } else {\r\n      mod_(x,y);\r\n      copy_(T,x);\r\n      copy_(x,y);\r\n      copy_(y,T);\r\n    }\r\n  }\r\n  if (y[0]==0)\r\n    return;\r\n  t=modInt(x,y[0]);\r\n  copyInt_(x,y[0]);\r\n  y[0]=t;\r\n  while (y[0]) {\r\n    x[0]%=y[0];\r\n    t=x[0]; x[0]=y[0]; y[0]=t;\r\n  }\r\n}\r\n\r\n//do x=x**(-1) mod n, for bigInts x and n.\r\n//If no inverse exists, it sets x to zero and returns 0, else it returns 1.\r\n//The x array must be at least as large as the n array.\r\nfunction inverseMod_(x,n) {\r\n  var k=1+2*Math.max(x.length,n.length);\r\n\r\n  if(!(x[0]&1)  && !(n[0]&1)) {  //if both inputs are even, then inverse doesn't exist\r\n    copyInt_(x,0);\r\n    return 0;\r\n  }\r\n\r\n  if (eg_u.length!=k) {\r\n    eg_u=new Array(k);\r\n    eg_v=new Array(k);\r\n    eg_A=new Array(k);\r\n    eg_B=new Array(k);\r\n    eg_C=new Array(k);\r\n    eg_D=new Array(k);\r\n  }\r\n\r\n  copy_(eg_u,x);\r\n  copy_(eg_v,n);\r\n  copyInt_(eg_A,1);\r\n  copyInt_(eg_B,0);\r\n  copyInt_(eg_C,0);\r\n  copyInt_(eg_D,1);\r\n  for (;;) {\r\n    while(!(eg_u[0]&1)) {  //while eg_u is even\r\n      halve_(eg_u);\r\n      if (!(eg_A[0]&1) && !(eg_B[0]&1)) { //if eg_A==eg_B==0 mod 2\r\n        halve_(eg_A);\r\n        halve_(eg_B);\r\n      } else {\r\n        add_(eg_A,n);  halve_(eg_A);\r\n        sub_(eg_B,x);  halve_(eg_B);\r\n      }\r\n    }\r\n\r\n    while (!(eg_v[0]&1)) {  //while eg_v is even\r\n      halve_(eg_v);\r\n      if (!(eg_C[0]&1) && !(eg_D[0]&1)) { //if eg_C==eg_D==0 mod 2\r\n        halve_(eg_C);\r\n        halve_(eg_D);\r\n      } else {\r\n        add_(eg_C,n);  halve_(eg_C);\r\n        sub_(eg_D,x);  halve_(eg_D);\r\n      }\r\n    }\r\n\r\n    if (!greater(eg_v,eg_u)) { //eg_v <= eg_u\r\n      sub_(eg_u,eg_v);\r\n      sub_(eg_A,eg_C);\r\n      sub_(eg_B,eg_D);\r\n    } else {                   //eg_v > eg_u\r\n      sub_(eg_v,eg_u);\r\n      sub_(eg_C,eg_A);\r\n      sub_(eg_D,eg_B);\r\n    }\r\n\r\n    if (equalsInt(eg_u,0)) {\r\n      while (negative(eg_C)) //make sure answer is nonnegative\r\n        add_(eg_C,n);\r\n      copy_(x,eg_C);\r\n\r\n      if (!equalsInt(eg_v,1)) { //if GCD_(x,n)!=1, then there is no inverse\r\n        copyInt_(x,0);\r\n        return 0;\r\n      }\r\n      return 1;\r\n    }\r\n  }\r\n}\r\n\r\n//return x**(-1) mod n, for integers x and n.  Return 0 if there is no inverse\r\nfunction inverseModInt(x,n) {\r\n  var a=1,b=0,t;\r\n  for (;;) {\r\n    if (x==1) return a;\r\n    if (x==0) return 0;\r\n    b-=a*Math.floor(n/x);\r\n    n%=x;\r\n\r\n    if (n==1) return b; //to avoid negatives, change this b to n-b, and each -= to +=\r\n    if (n==0) return 0;\r\n    a-=b*Math.floor(x/n);\r\n    x%=n;\r\n  }\r\n}\r\n\r\n//this deprecated function is for backward compatibility only.\r\nfunction inverseModInt_(x,n) {\r\n   return inverseModInt(x,n);\r\n}\r\n\r\n\r\n//Given positive bigInts x and y, change the bigints v, a, and b to positive bigInts such that:\r\n//     v = GCD_(x,y) = a*x-b*y\r\n//The bigInts v, a, b, must have exactly as many elements as the larger of x and y.\r\nexport function eGCD_(x,y,v,a,b) {\r\n  var g=0;\r\n  var k=Math.max(x.length,y.length);\r\n  if (eg_u.length!=k) {\r\n    eg_u=new Array(k);\r\n    eg_A=new Array(k);\r\n    eg_B=new Array(k);\r\n    eg_C=new Array(k);\r\n    eg_D=new Array(k);\r\n  }\r\n  while(!(x[0]&1)  && !(y[0]&1)) {  //while x and y both even\r\n    halve_(x);\r\n    halve_(y);\r\n    g++;\r\n  }\r\n  copy_(eg_u,x);\r\n  copy_(v,y);\r\n  copyInt_(eg_A,1);\r\n  copyInt_(eg_B,0);\r\n  copyInt_(eg_C,0);\r\n  copyInt_(eg_D,1);\r\n  for (;;) {\r\n    while(!(eg_u[0]&1)) {  //while u is even\r\n      halve_(eg_u);\r\n      if (!(eg_A[0]&1) && !(eg_B[0]&1)) { //if A==B==0 mod 2\r\n        halve_(eg_A);\r\n        halve_(eg_B);\r\n      } else {\r\n        add_(eg_A,y);  halve_(eg_A);\r\n        sub_(eg_B,x);  halve_(eg_B);\r\n      }\r\n    }\r\n\r\n    while (!(v[0]&1)) {  //while v is even\r\n      halve_(v);\r\n      if (!(eg_C[0]&1) && !(eg_D[0]&1)) { //if C==D==0 mod 2\r\n        halve_(eg_C);\r\n        halve_(eg_D);\r\n      } else {\r\n        add_(eg_C,y);  halve_(eg_C);\r\n        sub_(eg_D,x);  halve_(eg_D);\r\n      }\r\n    }\r\n\r\n    if (!greater(v,eg_u)) { //v<=u\r\n      sub_(eg_u,v);\r\n      sub_(eg_A,eg_C);\r\n      sub_(eg_B,eg_D);\r\n    } else {                //v>u\r\n      sub_(v,eg_u);\r\n      sub_(eg_C,eg_A);\r\n      sub_(eg_D,eg_B);\r\n    }\r\n    if (equalsInt(eg_u,0)) {\r\n      while (negative(eg_C)) {   //make sure a (C) is nonnegative\r\n        add_(eg_C,y);\r\n        sub_(eg_D,x);\r\n      }\r\n      multInt_(eg_D,-1);  ///make sure b (D) is nonnegative\r\n      copy_(a,eg_C);\r\n      copy_(b,eg_D);\r\n      leftShift_(v,g);\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//is bigInt x negative?\r\nfunction negative(x) {\r\n  return ((x[x.length-1]>>(bpe-1))&1);\r\n}\r\n\r\n\r\n//is (x << (shift*bpe)) > y?\r\n//x and y are nonnegative bigInts\r\n//shift is a nonnegative integer\r\nfunction greaterShift(x,y,shift) {\r\n  var i, kx=x.length, ky=y.length;\r\n  k=((kx+shift)<ky) ? (kx+shift) : ky;\r\n  for (i=ky-1-shift; i<kx && i>=0; i++)\r\n    if (x[i]>0)\r\n      return 1; //if there are nonzeros in x to the left of the first column of y, then x is bigger\r\n  for (i=kx-1+shift; i<ky; i++)\r\n    if (y[i]>0)\r\n      return 0; //if there are nonzeros in y to the left of the first column of x, then x is not bigger\r\n  for (i=k-1; i>=shift; i--)\r\n    if      (x[i-shift]>y[i]) return 1;\r\n    else if (x[i-shift]<y[i]) return 0;\r\n  return 0;\r\n}\r\n\r\n//is x > y? (x and y both nonnegative)\r\nexport function greater(x,y) {\r\n  var i;\r\n  var k=(x.length<y.length) ? x.length : y.length;\r\n\r\n  for (i=x.length;i<y.length;i++)\r\n    if (y[i])\r\n      return 0;  //y has more digits\r\n\r\n  for (i=y.length;i<x.length;i++)\r\n    if (x[i])\r\n      return 1;  //x has more digits\r\n\r\n  for (i=k-1;i>=0;i--)\r\n    if (x[i]>y[i])\r\n      return 1;\r\n    else if (x[i]<y[i])\r\n      return 0;\r\n  return 0;\r\n}\r\n\r\n//divide x by y giving quotient q and remainder r.  (q=floor(x/y),  r=x mod y).  All 4 are bigints.\r\n//x must have at least one leading zero element.\r\n//y must be nonzero.\r\n//q and r must be arrays that are exactly the same length as x. (Or q can have more).\r\n//Must have x.length >= y.length >= 2.\r\nexport function divide_(x,y,q,r) {\r\n  var kx, ky;\r\n  var i,j,y1,y2,c,a,b;\r\n  copy_(r,x);\r\n  for (ky=y.length;y[ky-1]==0;ky--); //ky is number of elements in y, not including leading zeros\r\n\r\n  //normalize: ensure the most significant element of y has its highest bit set\r\n  b=y[ky-1];\r\n  for (a=0; b; a++)\r\n    b>>=1;\r\n  a=bpe-a;  //a is how many bits to shift so that the high order bit of y is leftmost in its array element\r\n  leftShift_(y,a);  //multiply both by 1<<a now, then divide both by that at the end\r\n  leftShift_(r,a);\r\n\r\n  //Rob Visser discovered a bug: the following line was originally just before the normalization.\r\n  for (kx=r.length;r[kx-1]==0 && kx>ky;kx--); //kx is number of elements in normalized x, not including leading zeros\r\n\r\n  copyInt_(q,0);                      // q=0\r\n  while (!greaterShift(y,r,kx-ky)) {  // while (leftShift_(y,kx-ky) <= r) {\r\n    subShift_(r,y,kx-ky);             //   r=r-leftShift_(y,kx-ky)\r\n    q[kx-ky]++;                       //   q[kx-ky]++;\r\n  }                                   // }\r\n\r\n  for (i=kx-1; i>=ky; i--) {\r\n    if (r[i]==y[ky-1])\r\n      q[i-ky]=mask;\r\n    else\r\n      q[i-ky]=Math.floor((r[i]*radix+r[i-1])/y[ky-1]);\r\n\r\n    //The following for(;;) loop is equivalent to the commented while loop,\r\n    //except that the uncommented version avoids overflow.\r\n    //The commented loop comes from HAC, which assumes r[-1]==y[-1]==0\r\n    //  while (q[i-ky]*(y[ky-1]*radix+y[ky-2]) > r[i]*radix*radix+r[i-1]*radix+r[i-2])\r\n    //    q[i-ky]--;\r\n    for (;;) {\r\n      y2=(ky>1 ? y[ky-2] : 0)*q[i-ky];\r\n      c=y2>>bpe;\r\n      y2=y2 & mask;\r\n      y1=c+q[i-ky]*y[ky-1];\r\n      c=y1>>bpe;\r\n      y1=y1 & mask;\r\n\r\n      if (c==r[i] ? y1==r[i-1] ? y2>(i>1 ? r[i-2] : 0) : y1>r[i-1] : c>r[i])\r\n        q[i-ky]--;\r\n      else\r\n        break;\r\n    }\r\n\r\n    linCombShift_(r,y,-q[i-ky],i-ky);    //r=r-q[i-ky]*leftShift_(y,i-ky)\r\n    if (negative(r)) {\r\n      addShift_(r,y,i-ky);         //r=r+leftShift_(y,i-ky)\r\n      q[i-ky]--;\r\n    }\r\n  }\r\n\r\n  rightShift_(y,a);  //undo the normalization step\r\n  rightShift_(r,a);  //undo the normalization step\r\n}\r\n\r\n//do carries and borrows so each element of the bigInt x fits in bpe bits.\r\nfunction carry_(x) {\r\n  var i,k,c,b;\r\n  k=x.length;\r\n  c=0;\r\n  for (i=0;i<k;i++) {\r\n    c+=x[i];\r\n    b=0;\r\n    if (c<0) {\r\n      b=-(c>>bpe);\r\n      c+=b*radix;\r\n    }\r\n    x[i]=c & mask;\r\n    c=(c>>bpe)-b;\r\n  }\r\n}\r\n\r\n//return x mod n for bigInt x and integer n.\r\nfunction modInt(x,n) {\r\n  var i,c=0;\r\n  for (i=x.length-1; i>=0; i--)\r\n    c=(c*radix+x[i])%n;\r\n  return c;\r\n}\r\n\r\n//convert the integer t into a bigInt with at least the given number of bits.\r\n//the returned array stores the bigInt in bpe-bit chunks, little endian (buff[0] is least significant word)\r\n//Pad the array with leading zeros so that it has at least minSize elements.\r\n//There will always be at least one leading 0 element.\r\nfunction int2bigInt(t,bits,minSize) {\r\n  var i,k;\r\n  k=Math.ceil(bits/bpe)+1;\r\n  k=minSize>k ? minSize : k;\r\n  var buff=new Array(k);\r\n  copyInt_(buff,t);\r\n  return buff;\r\n}\r\n\r\n//return the bigInt given a string representation in a given base.\r\n//Pad the array with leading zeros so that it has at least minSize elements.\r\n//If base=-1, then it reads in a space-separated list of array elements in decimal.\r\n//The array will always have at least one leading zero, unless base=-1.\r\nexport function str2bigInt(s,base,minSize) {\r\n  var d, i, j, x, y, kk;\r\n  var k=s.length;\r\n  if (base==-1) { //comma-separated list of array elements in decimal\r\n    x=new Array(0);\r\n    for (;;) {\r\n      y=new Array(x.length+1);\r\n      for (i=0;i<x.length;i++)\r\n        y[i+1]=x[i];\r\n      y[0]=parseInt(s,10);\r\n      x=y;\r\n      d=s.indexOf(',',0);\r\n      if (d<1)\r\n        break;\r\n      s=s.substring(d+1);\r\n      if (s.length==0)\r\n        break;\r\n    }\r\n    if (x.length<minSize) {\r\n      y=new Array(minSize);\r\n      copy_(y,x);\r\n      return y;\r\n    }\r\n    return x;\r\n  }\r\n\r\n  x=int2bigInt(0,base*k,0);\r\n  for (i=0;i<k;i++) {\r\n    d=digitsStr.indexOf(s.substring(i,i+1),0);\r\n    if (base<=36 && d>=36)  //convert lowercase to uppercase if base<=36\r\n      d-=26;\r\n    if (d>=base || d<0) {   //stop at first illegal character\r\n      break;\r\n    }\r\n    multInt_(x,base);\r\n    addInt_(x,d);\r\n  }\r\n\r\n  for (k=x.length;k>0 && !x[k-1];k--); //strip off leading zeros\r\n  k=minSize>k+1 ? minSize : k+1;\r\n  y=new Array(k);\r\n  kk=k<x.length ? k : x.length;\r\n  for (i=0;i<kk;i++)\r\n    y[i]=x[i];\r\n  for (;i<k;i++)\r\n    y[i]=0;\r\n  return y;\r\n}\r\n\r\n//is bigint x equal to integer y?\r\n//y must have less than bpe bits\r\nexport function equalsInt(x,y) {\r\n  var i;\r\n  if (x[0]!=y)\r\n    return 0;\r\n  for (i=1;i<x.length;i++)\r\n    if (x[i])\r\n      return 0;\r\n  return 1;\r\n}\r\n\r\n//are bigints x and y equal?\r\n//this works even if x and y are different lengths and have arbitrarily many leading zeros\r\nfunction equals(x,y) {\r\n  var i;\r\n  var k=x.length<y.length ? x.length : y.length;\r\n  for (i=0;i<k;i++)\r\n    if (x[i]!=y[i])\r\n      return 0;\r\n  if (x.length>y.length) {\r\n    for (;i<x.length;i++)\r\n      if (x[i])\r\n        return 0;\r\n  } else {\r\n    for (;i<y.length;i++)\r\n      if (y[i])\r\n        return 0;\r\n  }\r\n  return 1;\r\n}\r\n\r\n//is the bigInt x equal to zero?\r\nexport function isZero(x) {\r\n  var i;\r\n  for (i=0;i<x.length;i++)\r\n    if (x[i])\r\n      return 0;\r\n  return 1;\r\n}\r\n\r\n//convert a bigInt into a string in a given base, from base 2 up to base 95.\r\n//Base -1 prints the contents of the array representing the number.\r\nexport function bigInt2str(x,base) {\r\n  var i,t,s=\"\";\r\n\r\n  if (s6.length!=x.length)\r\n    s6=dup(x);\r\n  else\r\n    copy_(s6,x);\r\n\r\n  if (base==-1) { //return the list of array contents\r\n    for (i=x.length-1;i>0;i--)\r\n      s+=x[i]+',';\r\n    s+=x[0];\r\n  }\r\n  else { //return it in the given base\r\n    while (!isZero(s6)) {\r\n      t=divInt_(s6,base);  //t=s6 % base; s6=floor(s6/base);\r\n      s=digitsStr.substring(t,t+1)+s;\r\n    }\r\n  }\r\n  if (s.length==0)\r\n    s=\"0\";\r\n  return s;\r\n}\r\n\r\n//returns a duplicate of bigInt x\r\nfunction dup(x) {\r\n  var i;\r\n  buff=new Array(x.length);\r\n  copy_(buff,x);\r\n  return buff;\r\n}\r\n\r\n//do x=y on bigInts x and y.  x must be an array at least as big as y (not counting the leading zeros in y).\r\nexport function copy_(x,y) {\r\n  var i;\r\n  var k=x.length<y.length ? x.length : y.length;\r\n  for (i=0;i<k;i++)\r\n    x[i]=y[i];\r\n  for (i=k;i<x.length;i++)\r\n    x[i]=0;\r\n}\r\n\r\n//do x=y on bigInt x and integer y.\r\nexport function copyInt_(x,n) {\r\n  var i,c;\r\n  for (c=n,i=0;i<x.length;i++) {\r\n    x[i]=c & mask;\r\n    c>>=bpe;\r\n  }\r\n}\r\n\r\n//do x=x+n where x is a bigInt and n is an integer.\r\n//x must be large enough to hold the result.\r\nfunction addInt_(x,n) {\r\n  var i,k,c,b;\r\n  x[0]+=n;\r\n  k=x.length;\r\n  c=0;\r\n  for (i=0;i<k;i++) {\r\n    c+=x[i];\r\n    b=0;\r\n    if (c<0) {\r\n      b=-(c>>bpe);\r\n      c+=b*radix;\r\n    }\r\n    x[i]=c & mask;\r\n    c=(c>>bpe)-b;\r\n    if (!c) return; //stop carrying as soon as the carry is zero\r\n  }\r\n}\r\n\r\n//right shift bigInt x by n bits.  0 <= n < bpe.\r\nexport function rightShift_(x,n) {\r\n  var i;\r\n  var k=Math.floor(n/bpe);\r\n  if (k) {\r\n    for (i=0;i<x.length-k;i++) //right shift x by k elements\r\n      x[i]=x[i+k];\r\n    for (;i<x.length;i++)\r\n      x[i]=0;\r\n    n%=bpe;\r\n  }\r\n  for (i=0;i<x.length-1;i++) {\r\n    x[i]=mask & ((x[i+1]<<(bpe-n)) | (x[i]>>n));\r\n  }\r\n  x[i]>>=n;\r\n}\r\n\r\n//do x=floor(|x|/2)*sgn(x) for bigInt x in 2's complement\r\nfunction halve_(x) {\r\n  var i;\r\n  for (i=0;i<x.length-1;i++) {\r\n    x[i]=mask & ((x[i+1]<<(bpe-1)) | (x[i]>>1));\r\n  }\r\n  x[i]=(x[i]>>1) | (x[i] & (radix>>1));  //most significant bit stays the same\r\n}\r\n\r\n//left shift bigInt x by n bits.\r\nfunction leftShift_(x,n) {\r\n  var i;\r\n  var k=Math.floor(n/bpe);\r\n  if (k) {\r\n    for (i=x.length; i>=k; i--) //left shift x by k elements\r\n      x[i]=x[i-k];\r\n    for (;i>=0;i--)\r\n      x[i]=0;\r\n    n%=bpe;\r\n  }\r\n  if (!n)\r\n    return;\r\n  for (i=x.length-1;i>0;i--) {\r\n    x[i]=mask & ((x[i]<<n) | (x[i-1]>>(bpe-n)));\r\n  }\r\n  x[i]=mask & (x[i]<<n);\r\n}\r\n\r\n//do x=x*n where x is a bigInt and n is an integer.\r\n//x must be large enough to hold the result.\r\nfunction multInt_(x,n) {\r\n  var i,k,c,b;\r\n  if (!n)\r\n    return;\r\n  k=x.length;\r\n  c=0;\r\n  for (i=0;i<k;i++) {\r\n    c+=x[i]*n;\r\n    b=0;\r\n    if (c<0) {\r\n      b=-(c>>bpe);\r\n      c+=b*radix;\r\n    }\r\n    x[i]=c & mask;\r\n    c=(c>>bpe)-b;\r\n  }\r\n}\r\n\r\n//do x=floor(x/n) for bigInt x and integer n, and return the remainder\r\nfunction divInt_(x,n) {\r\n  var i,r=0,s;\r\n  for (i=x.length-1;i>=0;i--) {\r\n    s=r*radix+x[i];\r\n    x[i]=Math.floor(s/n);\r\n    r=s%n;\r\n  }\r\n  return r;\r\n}\r\n\r\n//do the linear combination x=a*x+b*y for bigInts x and y, and integers a and b.\r\n//x must be large enough to hold the answer.\r\nfunction linComb_(x,y,a,b) {\r\n  var i,c,k,kk;\r\n  k=x.length<y.length ? x.length : y.length;\r\n  kk=x.length;\r\n  for (c=0,i=0;i<k;i++) {\r\n    c+=a*x[i]+b*y[i];\r\n    x[i]=c & mask;\r\n    c>>=bpe;\r\n  }\r\n  for (i=k;i<kk;i++) {\r\n    c+=a*x[i];\r\n    x[i]=c & mask;\r\n    c>>=bpe;\r\n  }\r\n}\r\n\r\n//do the linear combination x=a*x+b*(y<<(ys*bpe)) for bigInts x and y, and integers a, b and ys.\r\n//x must be large enough to hold the answer.\r\nfunction linCombShift_(x,y,b,ys) {\r\n  var i,c,k,kk;\r\n  k=x.length<ys+y.length ? x.length : ys+y.length;\r\n  kk=x.length;\r\n  for (c=0,i=ys;i<k;i++) {\r\n    c+=x[i]+b*y[i-ys];\r\n    x[i]=c & mask;\r\n    c>>=bpe;\r\n  }\r\n  for (i=k;c && i<kk;i++) {\r\n    c+=x[i];\r\n    x[i]=c & mask;\r\n    c>>=bpe;\r\n  }\r\n}\r\n\r\n//do x=x+(y<<(ys*bpe)) for bigInts x and y, and integers a,b and ys.\r\n//x must be large enough to hold the answer.\r\nfunction addShift_(x,y,ys) {\r\n  var i,c,k,kk;\r\n  k=x.length<ys+y.length ? x.length : ys+y.length;\r\n  kk=x.length;\r\n  for (c=0,i=ys;i<k;i++) {\r\n    c+=x[i]+y[i-ys];\r\n    x[i]=c & mask;\r\n    c>>=bpe;\r\n  }\r\n  for (i=k;c && i<kk;i++) {\r\n    c+=x[i];\r\n    x[i]=c & mask;\r\n    c>>=bpe;\r\n  }\r\n}\r\n\r\n//do x=x-(y<<(ys*bpe)) for bigInts x and y, and integers a,b and ys.\r\n//x must be large enough to hold the answer.\r\nfunction subShift_(x,y,ys) {\r\n  var i,c,k,kk;\r\n  k=x.length<ys+y.length ? x.length : ys+y.length;\r\n  kk=x.length;\r\n  for (c=0,i=ys;i<k;i++) {\r\n    c+=x[i]-y[i-ys];\r\n    x[i]=c & mask;\r\n    c>>=bpe;\r\n  }\r\n  for (i=k;c && i<kk;i++) {\r\n    c+=x[i];\r\n    x[i]=c & mask;\r\n    c>>=bpe;\r\n  }\r\n}\r\n\r\n//do x=x-y for bigInts x and y.\r\n//x must be large enough to hold the answer.\r\n//negative answers will be 2s complement\r\nexport function sub_(x,y) {\r\n  var i,c,k,kk;\r\n  k=x.length<y.length ? x.length : y.length;\r\n  for (c=0,i=0;i<k;i++) {\r\n    c+=x[i]-y[i];\r\n    x[i]=c & mask;\r\n    c>>=bpe;\r\n  }\r\n  for (i=k;c && i<x.length;i++) {\r\n    c+=x[i];\r\n    x[i]=c & mask;\r\n    c>>=bpe;\r\n  }\r\n}\r\n\r\n//do x=x+y for bigInts x and y.\r\n//x must be large enough to hold the answer.\r\nexport function add_(x,y) {\r\n  var i,c,k,kk;\r\n  k=x.length<y.length ? x.length : y.length;\r\n  for (c=0,i=0;i<k;i++) {\r\n    c+=x[i]+y[i];\r\n    x[i]=c & mask;\r\n    c>>=bpe;\r\n  }\r\n  for (i=k;c && i<x.length;i++) {\r\n    c+=x[i];\r\n    x[i]=c & mask;\r\n    c>>=bpe;\r\n  }\r\n}\r\n\r\n//do x=x*y for bigInts x and y.  This is faster when y<x.\r\nfunction mult_(x,y) {\r\n  var i;\r\n  if (ss.length!=2*x.length)\r\n    ss=new Array(2*x.length);\r\n  copyInt_(ss,0);\r\n  for (i=0;i<y.length;i++)\r\n    if (y[i])\r\n      linCombShift_(ss,x,y[i],i);   //ss=1*ss+y[i]*(x<<(i*bpe))\r\n  copy_(x,ss);\r\n}\r\n\r\n//do x=x mod n for bigInts x and n.\r\nfunction mod_(x,n) {\r\n  if (s4.length!=x.length)\r\n    s4=dup(x);\r\n  else\r\n    copy_(s4,x);\r\n  if (s5.length!=x.length)\r\n    s5=dup(x);\r\n  divide_(s4,n,s5,x);  //x = remainder of s4 / n\r\n}\r\n\r\n//do x=x*y mod n for bigInts x,y,n.\r\n//for greater speed, let y<x.\r\nfunction multMod_(x,y,n) {\r\n  var i;\r\n  if (s0.length!=2*x.length)\r\n    s0=new Array(2*x.length);\r\n  copyInt_(s0,0);\r\n  for (i=0;i<y.length;i++)\r\n    if (y[i])\r\n      linCombShift_(s0,x,y[i],i);   //s0=1*s0+y[i]*(x<<(i*bpe))\r\n  mod_(s0,n);\r\n  copy_(x,s0);\r\n}\r\n\r\n//do x=x*x mod n for bigInts x,n.\r\nfunction squareMod_(x,n) {\r\n  var i,j,d,c,kx,kn,k;\r\n  for (kx=x.length; kx>0 && !x[kx-1]; kx--);  //ignore leading zeros in x\r\n  k=kx>n.length ? 2*kx : 2*n.length; //k=# elements in the product, which is twice the elements in the larger of x and n\r\n  if (s0.length!=k)\r\n    s0=new Array(k);\r\n  copyInt_(s0,0);\r\n  for (i=0;i<kx;i++) {\r\n    c=s0[2*i]+x[i]*x[i];\r\n    s0[2*i]=c & mask;\r\n    c>>=bpe;\r\n    for (j=i+1;j<kx;j++) {\r\n      c=s0[i+j]+2*x[i]*x[j]+c;\r\n      s0[i+j]=(c & mask);\r\n      c>>=bpe;\r\n    }\r\n    s0[i+kx]=c;\r\n  }\r\n  mod_(s0,n);\r\n  copy_(x,s0);\r\n}\r\n\r\n//return x with exactly k leading zero elements\r\nfunction trim(x,k) {\r\n  var i,y;\r\n  for (i=x.length; i>0 && !x[i-1]; i--);\r\n  y=new Array(i+k);\r\n  copy_(y,x);\r\n  return y;\r\n}\r\n\r\n//do x=x**y mod n, where x,y,n are bigInts and ** is exponentiation.  0**0=1.\r\n//this is faster when n is odd.  x usually needs to have as many elements as n.\r\nfunction powMod_(x,y,n) {\r\n  var k1,k2,kn,np;\r\n  if(s7.length!=n.length)\r\n    s7=dup(n);\r\n\r\n  //for even modulus, use a simple square-and-multiply algorithm,\r\n  //rather than using the more complex Montgomery algorithm.\r\n  if ((n[0]&1)==0) {\r\n    copy_(s7,x);\r\n    copyInt_(x,1);\r\n    while(!equalsInt(y,0)) {\r\n      if (y[0]&1)\r\n        multMod_(x,s7,n);\r\n      divInt_(y,2);\r\n      squareMod_(s7,n);\r\n    }\r\n    return;\r\n  }\r\n\r\n  //calculate np from n for the Montgomery multiplications\r\n  copyInt_(s7,0);\r\n  for (kn=n.length;kn>0 && !n[kn-1];kn--);\r\n  np=radix-inverseModInt(modInt(n,radix),radix);\r\n  s7[kn]=1;\r\n  multMod_(x ,s7,n);   // x = x * 2**(kn*bp) mod n\r\n\r\n  if (s3.length!=x.length)\r\n    s3=dup(x);\r\n  else\r\n    copy_(s3,x);\r\n\r\n  for (k1=y.length-1;k1>0 & !y[k1]; k1--);  //k1=first nonzero element of y\r\n  if (y[k1]==0) {  //anything to the 0th power is 1\r\n    copyInt_(x,1);\r\n    return;\r\n  }\r\n  for (k2=1<<(bpe-1);k2 && !(y[k1] & k2); k2>>=1);  //k2=position of first 1 bit in y[k1]\r\n  for (;;) {\r\n    if (!(k2>>=1)) {  //look at next bit of y\r\n      k1--;\r\n      if (k1<0) {\r\n        mont_(x,one,n,np);\r\n        return;\r\n      }\r\n      k2=1<<(bpe-1);\r\n    }\r\n    mont_(x,x,n,np);\r\n\r\n    if (k2 & y[k1]) //if next bit is a 1\r\n      mont_(x,s3,n,np);\r\n  }\r\n}\r\n\r\n\r\n//do x=x*y*Ri mod n for bigInts x,y,n,\r\n//  where Ri = 2**(-kn*bpe) mod n, and kn is the\r\n//  number of elements in the n array, not\r\n//  counting leading zeros.\r\n//x array must have at least as many elemnts as the n array\r\n//It's OK if x and y are the same variable.\r\n//must have:\r\n//  x,y < n\r\n//  n is odd\r\n//  np = -(n^(-1)) mod radix\r\nfunction mont_(x,y,n,np) {\r\n  var i,j,c,ui,t,ks;\r\n  var kn=n.length;\r\n  var ky=y.length;\r\n\r\n  if (sa.length!=kn)\r\n    sa=new Array(kn);\r\n\r\n  copyInt_(sa,0);\r\n\r\n  for (;kn>0 && n[kn-1]==0;kn--); //ignore leading zeros of n\r\n  for (;ky>0 && y[ky-1]==0;ky--); //ignore leading zeros of y\r\n  ks=sa.length-1; //sa will never have more than this many nonzero elements.\r\n\r\n  //the following loop consumes 95% of the runtime for randTruePrime_() and powMod_() for large numbers\r\n  for (i=0; i<kn; i++) {\r\n    t=sa[0]+x[i]*y[0];\r\n    ui=((t & mask) * np) & mask;  //the inner \"& mask\" was needed on Safari (but not MSIE) at one time\r\n    c=(t+ui*n[0]) >> bpe;\r\n    t=x[i];\r\n\r\n    //do sa=(sa+x[i]*y+ui*n)/b   where b=2**bpe.  Loop is unrolled 5-fold for speed\r\n    j=1;\r\n    for (;j<ky-4;) { c+=sa[j]+ui*n[j]+t*y[j];   sa[j-1]=c & mask;   c>>=bpe;   j++;\r\n                     c+=sa[j]+ui*n[j]+t*y[j];   sa[j-1]=c & mask;   c>>=bpe;   j++;\r\n                     c+=sa[j]+ui*n[j]+t*y[j];   sa[j-1]=c & mask;   c>>=bpe;   j++;\r\n                     c+=sa[j]+ui*n[j]+t*y[j];   sa[j-1]=c & mask;   c>>=bpe;   j++;\r\n                     c+=sa[j]+ui*n[j]+t*y[j];   sa[j-1]=c & mask;   c>>=bpe;   j++; }\r\n    for (;j<ky;)   { c+=sa[j]+ui*n[j]+t*y[j];   sa[j-1]=c & mask;   c>>=bpe;   j++; }\r\n    for (;j<kn-4;) { c+=sa[j]+ui*n[j];          sa[j-1]=c & mask;   c>>=bpe;   j++;\r\n                     c+=sa[j]+ui*n[j];          sa[j-1]=c & mask;   c>>=bpe;   j++;\r\n                     c+=sa[j]+ui*n[j];          sa[j-1]=c & mask;   c>>=bpe;   j++;\r\n                     c+=sa[j]+ui*n[j];          sa[j-1]=c & mask;   c>>=bpe;   j++;\r\n                     c+=sa[j]+ui*n[j];          sa[j-1]=c & mask;   c>>=bpe;   j++; }\r\n    for (;j<kn;)   { c+=sa[j]+ui*n[j];          sa[j-1]=c & mask;   c>>=bpe;   j++; }\r\n    for (;j<ks;)   { c+=sa[j];                  sa[j-1]=c & mask;   c>>=bpe;   j++; }\r\n    sa[j-1]=c & mask;\r\n  }\r\n\r\n  if (!greater(n,sa))\r\n    sub_(sa,n);\r\n  copy_(x,sa);\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./leemon.js","import { TLSerialization } from '../tl'\r\n\r\nimport { bytesToHex, sha1BytesSync, bytesFromHex, bigStringInt } from '../bin'\r\n\r\n/**\r\n*  Server public key, obtained from here: https://core.telegram.org/api/obtaining_api_id\r\n*\r\n* -----BEGIN RSA PUBLIC KEY-----\r\n* MIIBCgKCAQEAwVACPi9w23mF3tBkdZz+zwrzKOaaQdr01vAbU4E1pvkfj4sqDsm6\r\n* lyDONS789sVoD/xCS9Y0hkkC3gtL1tSfTlgCMOOul9lcixlEKzwKENj1Yz/s7daS\r\n* an9tqw3bfUV/nqgbhGX81v/+7RFAEd+RwFnK7a+XYl9sluzHRyVVaTTveB2GazTw\r\n* Efzk2DWgkBluml8OREmvfraX3bkHZJTKX4EQSjBbbdJ2ZXIsRrYOXfaA+xayEGB+\r\n* 8hdlLmAjbCVfaigxX0CDqWeR1yFL9kwd9P0NsZRPsmoqVwMbMu7mStFai6aIhc3n\r\n* Slv8kg9qv1m6XHVQY3PnEw+QQtqSIXklHwIDAQAB\r\n* -----END RSA PUBLIC KEY-----\r\n*/\r\n\r\nconst publisKeysHex = [{\r\n  modulus : 'c150023e2f70db7985ded064759cfecf0af328e69a41daf4d6f01b538135a6f91f8f8b2a0ec9ba9720ce352efcf6c5680ffc424bd634864902de0b4bd6d49f4e580230e3ae97d95c8b19442b3c0a10d8f5633fecedd6926a7f6dab0ddb7d457f9ea81b8465fcd6fffeed114011df91c059caedaf97625f6c96ecc74725556934ef781d866b34f011fce4d835a090196e9a5f0e4449af7eb697ddb9076494ca5f81104a305b6dd27665722c46b60e5df680fb16b210607ef217652e60236c255f6a28315f4083a96791d7214bf64c1df4fd0db1944fb26a2a57031b32eee64ad15a8ba68885cde74a5bfc920f6abf59ba5c75506373e7130f9042da922179251f',\r\n  exponent: '010001'\r\n}]\r\n\r\nconst publicKeysParsed = {}\r\nlet prepared = false\r\n\r\n\r\nconst mapPrepare = keyParsed => {\r\n  const RSAPublicKey = new TLSerialization()\r\n  RSAPublicKey.storeBytes(bytesFromHex(keyParsed.modulus), 'n')\r\n  RSAPublicKey.storeBytes(bytesFromHex(keyParsed.exponent), 'e')\r\n\r\n  const buffer = RSAPublicKey.getBuffer()\r\n\r\n  const fingerprintBytes = sha1BytesSync(buffer).slice(-8)\r\n  fingerprintBytes.reverse()\r\n\r\n  publicKeysParsed[bytesToHex(fingerprintBytes)] = {\r\n    modulus : keyParsed.modulus,\r\n    exponent: keyParsed.exponent\r\n  }\r\n}\r\nconst prepareRsaKeys = () => {\r\n  if (prepared) return\r\n  publisKeysHex.forEach(mapPrepare)\r\n  prepared = true\r\n}\r\n\r\nconst selectRsaKeyByFingerPrint = fingerprints => {\r\n  prepareRsaKeys()\r\n\r\n  let fingerprintHex, foundKey\r\n  for (let i = 0; i < fingerprints.length; i++) {\r\n    fingerprintHex = bigStringInt(fingerprints[i]).toString(16)\r\n    if (foundKey = publicKeysParsed[fingerprintHex])\r\n      return { fingerprint: fingerprints[i], ...foundKey }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nexport { prepareRsaKeys as prepare }\r\nexport { selectRsaKeyByFingerPrint as select }\r\n\n\n\n// WEBPACK FOOTER //\n// ./service/rsa-keys-manger.js","module.exports = (__webpack_require__(0))(126);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ../node_modules/@goodmind/node-cryptojs-aes/cryptojs.js from dll-reference vendor\n// module id = 22\n// module chunks = 0","module.exports = (__webpack_require__(0))(127);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ../node_modules/axios/index.js from dll-reference vendor\n// module id = 23\n// module chunks = 0","module.exports = (__webpack_require__(0))(130);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ../node_modules/pako/lib/inflate.js from dll-reference vendor\n// module id = 24\n// module chunks = 0","module.exports = (__webpack_require__(0))(132);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ../node_modules/rusha/rusha.js from dll-reference vendor\n// module id = 25\n// module chunks = 0","import 'setimmediate'\r\n\r\nexport { smartTimeout } from './smart-timeout'\r\nexport { blueDefer } from './defer'\r\nexport { CryptoWorker } from './crypto'\r\nexport { bin } from './bin'\r\nexport { forEach } from './for-each'\r\nexport { mtpClearStorage, api, ApiManager } from './service/api-manager/index.js'\r\nexport { PureStorage } from './store'\r\n\r\nimport * as MtpTimeManager from './service/time-manager'\r\nexport { MtpTimeManager }\r\n\r\nimport * as MtpDcConfigurator from './service/dc-configurator'\r\nexport { MtpDcConfigurator }\r\n\r\n// import * as MtpRsaKeysManager from './service/rsa-keys-manger'\r\n// export { MtpRsaKeysManager }\r\n\r\nimport * as MtpAuthorizer from './service/authorizer'\r\nexport { MtpAuthorizer }\r\n\r\nimport MtpSecureRandom from './service/secure-random'\r\nexport { MtpSecureRandom }\r\n\r\nimport * as MtpNetworker from './service/networker'\r\nexport { MtpNetworker }\r\n\r\nexport * from './tl'\r\n\r\nexport { httpClient } from './http'\r\n\r\nconsole.debug('source loaded')\r\n\r\n\r\nexport default {}\n\n\n// WEBPACK FOOTER //\n// ./index.js","/*!\r\n * EventEmitter2\r\n * https://github.com/hij1nx/EventEmitter2\r\n *\r\n * Copyright (c) 2013 hij1nx\r\n * Licensed under the MIT license.\r\n */\r\n;!function(undefined) {\r\n\r\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\r\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n  };\r\n  var defaultMaxListeners = 10;\r\n\r\n  function init() {\r\n    this._events = {};\r\n    if (this._conf) {\r\n      configure.call(this, this._conf);\r\n    }\r\n  }\r\n\r\n  function configure(conf) {\r\n    if (conf) {\r\n      this._conf = conf;\r\n\r\n      conf.delimiter && (this.delimiter = conf.delimiter);\r\n      this._events.maxListeners = conf.maxListeners !== undefined ? conf.maxListeners : defaultMaxListeners;\r\n      conf.wildcard && (this.wildcard = conf.wildcard);\r\n      conf.newListener && (this.newListener = conf.newListener);\r\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\r\n\r\n      if (this.wildcard) {\r\n        this.listenerTree = {};\r\n      }\r\n    } else {\r\n      this._events.maxListeners = defaultMaxListeners;\r\n    }\r\n  }\r\n\r\n  function logPossibleMemoryLeak(count, eventName) {\r\n    var errorMsg = '(node) warning: possible EventEmitter memory ' +\r\n        'leak detected. %d listeners added. ' +\r\n        'Use emitter.setMaxListeners() to increase limit.';\r\n\r\n    if(this.verboseMemoryLeak){\r\n      errorMsg += ' Event name: %s.';\r\n      console.error(errorMsg, count, eventName);\r\n    } else {\r\n      console.error(errorMsg, count);\r\n    }\r\n\r\n    if (console.trace){\r\n      console.trace();\r\n    }\r\n  }\r\n\r\n  function EventEmitter(conf) {\r\n    this._events = {};\r\n    this.newListener = false;\r\n    this.verboseMemoryLeak = false;\r\n    configure.call(this, conf);\r\n  }\r\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\r\n\r\n  //\r\n  // Attention, function return type now is array, always !\r\n  // It has zero elements if no any matches found and one or more\r\n  // elements (leafs) if there are matches\r\n  //\r\n  function searchListenerTree(handlers, type, tree, i) {\r\n    if (!tree) {\r\n      return [];\r\n    }\r\n    var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\r\n        typeLength = type.length, currentType = type[i], nextType = type[i+1];\r\n    if (i === typeLength && tree._listeners) {\r\n      //\r\n      // If at the end of the event(s) list and the tree has listeners\r\n      // invoke those listeners.\r\n      //\r\n      if (typeof tree._listeners === 'function') {\r\n        handlers && handlers.push(tree._listeners);\r\n        return [tree];\r\n      } else {\r\n        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\r\n          handlers && handlers.push(tree._listeners[leaf]);\r\n        }\r\n        return [tree];\r\n      }\r\n    }\r\n\r\n    if ((currentType === '*' || currentType === '**') || tree[currentType]) {\r\n      //\r\n      // If the event emitted is '*' at this part\r\n      // or there is a concrete match at this patch\r\n      //\r\n      if (currentType === '*') {\r\n        for (branch in tree) {\r\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\r\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\r\n          }\r\n        }\r\n        return listeners;\r\n      } else if(currentType === '**') {\r\n        endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\r\n        if(endReached && tree._listeners) {\r\n          // The next element has a _listeners, add it to the handlers.\r\n          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\r\n        }\r\n\r\n        for (branch in tree) {\r\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\r\n            if(branch === '*' || branch === '**') {\r\n              if(tree[branch]._listeners && !endReached) {\r\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\r\n              }\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\r\n            } else if(branch === nextType) {\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\r\n            } else {\r\n              // No match on this one, shift into the tree but not in the type array.\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\r\n            }\r\n          }\r\n        }\r\n        return listeners;\r\n      }\r\n\r\n      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\r\n    }\r\n\r\n    xTree = tree['*'];\r\n    if (xTree) {\r\n      //\r\n      // If the listener tree will allow any match for this part,\r\n      // then recursively explore all branches of the tree\r\n      //\r\n      searchListenerTree(handlers, type, xTree, i+1);\r\n    }\r\n\r\n    xxTree = tree['**'];\r\n    if(xxTree) {\r\n      if(i < typeLength) {\r\n        if(xxTree._listeners) {\r\n          // If we have a listener on a '**', it will catch all, so add its handler.\r\n          searchListenerTree(handlers, type, xxTree, typeLength);\r\n        }\r\n\r\n        // Build arrays of matching next branches and others.\r\n        for(branch in xxTree) {\r\n          if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\r\n            if(branch === nextType) {\r\n              // We know the next element will match, so jump twice.\r\n              searchListenerTree(handlers, type, xxTree[branch], i+2);\r\n            } else if(branch === currentType) {\r\n              // Current node matches, move into the tree.\r\n              searchListenerTree(handlers, type, xxTree[branch], i+1);\r\n            } else {\r\n              isolatedBranch = {};\r\n              isolatedBranch[branch] = xxTree[branch];\r\n              searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\r\n            }\r\n          }\r\n        }\r\n      } else if(xxTree._listeners) {\r\n        // We have reached the end and still on a '**'\r\n        searchListenerTree(handlers, type, xxTree, typeLength);\r\n      } else if(xxTree['*'] && xxTree['*']._listeners) {\r\n        searchListenerTree(handlers, type, xxTree['*'], typeLength);\r\n      }\r\n    }\r\n\r\n    return listeners;\r\n  }\r\n\r\n  function growListenerTree(type, listener) {\r\n\r\n    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n\r\n    //\r\n    // Looks for two consecutive '**', if so, don't add the event at all.\r\n    //\r\n    for(var i = 0, len = type.length; i+1 < len; i++) {\r\n      if(type[i] === '**' && type[i+1] === '**') {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var tree = this.listenerTree;\r\n    var name = type.shift();\r\n\r\n    while (name !== undefined) {\r\n\r\n      if (!tree[name]) {\r\n        tree[name] = {};\r\n      }\r\n\r\n      tree = tree[name];\r\n\r\n      if (type.length === 0) {\r\n\r\n        if (!tree._listeners) {\r\n          tree._listeners = listener;\r\n        }\r\n        else {\r\n          if (typeof tree._listeners === 'function') {\r\n            tree._listeners = [tree._listeners];\r\n          }\r\n\r\n          tree._listeners.push(listener);\r\n\r\n          if (\r\n            !tree._listeners.warned &&\r\n            this._events.maxListeners > 0 &&\r\n            tree._listeners.length > this._events.maxListeners\r\n          ) {\r\n            tree._listeners.warned = true;\r\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      name = type.shift();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // By default EventEmitters will print a warning if more than\r\n  // 10 listeners are added to it. This is a useful default which\r\n  // helps finding memory leaks.\r\n  //\r\n  // Obviously not all Emitters should be limited to 10. This function allows\r\n  // that to be increased. Set to zero for unlimited.\r\n\r\n  EventEmitter.prototype.delimiter = '.';\r\n\r\n  EventEmitter.prototype.setMaxListeners = function(n) {\r\n    if (n !== undefined) {\r\n      this._events || init.call(this);\r\n      this._events.maxListeners = n;\r\n      if (!this._conf) this._conf = {};\r\n      this._conf.maxListeners = n;\r\n    }\r\n  };\r\n\r\n  EventEmitter.prototype.event = '';\r\n\r\n  EventEmitter.prototype.once = function(event, fn) {\r\n    this.many(event, 1, fn);\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.many = function(event, ttl, fn) {\r\n    var self = this;\r\n\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('many only accepts instances of Function');\r\n    }\r\n\r\n    function listener() {\r\n      if (--ttl === 0) {\r\n        self.off(event, listener);\r\n      }\r\n      fn.apply(this, arguments);\r\n    }\r\n\r\n    listener._origin = fn;\r\n\r\n    this.on(event, listener);\r\n\r\n    return self;\r\n  };\r\n\r\n  EventEmitter.prototype.emit = function() {\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0];\r\n\r\n    if (type === 'newListener' && !this.newListener) {\r\n      if (!this._events.newListener) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    var al = arguments.length;\r\n    var args,l,i,j;\r\n    var handler;\r\n\r\n    if (this._all && this._all.length) {\r\n      handler = this._all.slice();\r\n      if (al > 3) {\r\n        args = new Array(al);\r\n        for (j = 0; j < al; j++) args[j] = arguments[j];\r\n      }\r\n\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this, type);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, type, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, type, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, args);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      handler = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\r\n    } else {\r\n      handler = this._events[type];\r\n      if (typeof handler === 'function') {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler.call(this);\r\n          break;\r\n        case 2:\r\n          handler.call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler.call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          args = new Array(al - 1);\r\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n          handler.apply(this, args);\r\n        }\r\n        return true;\r\n      } else if (handler) {\r\n        // need to make copy of handlers because list can change in the middle\r\n        // of emit call\r\n        handler = handler.slice();\r\n      }\r\n    }\r\n\r\n    if (handler && handler.length) {\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, args);\r\n        }\r\n      }\r\n      return true;\r\n    } else if (!this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        throw arguments[1]; // Unhandled 'error' event\r\n      } else {\r\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n      return false;\r\n    }\r\n\r\n    return !!this._all;\r\n  };\r\n\r\n  EventEmitter.prototype.emitAsync = function() {\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0];\r\n\r\n    if (type === 'newListener' && !this.newListener) {\r\n        if (!this._events.newListener) { return Promise.resolve([false]); }\r\n    }\r\n\r\n    var promises= [];\r\n\r\n    var al = arguments.length;\r\n    var args,l,i,j;\r\n    var handler;\r\n\r\n    if (this._all) {\r\n      if (al > 3) {\r\n        args = new Array(al);\r\n        for (j = 1; j < al; j++) args[j] = arguments[j];\r\n      }\r\n      for (i = 0, l = this._all.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(this._all[i].call(this, type));\r\n          break;\r\n        case 2:\r\n          promises.push(this._all[i].call(this, type, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(this._all[i].apply(this, args));\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      handler = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\r\n    } else {\r\n      handler = this._events[type];\r\n    }\r\n\r\n    if (typeof handler === 'function') {\r\n      this.event = type;\r\n      switch (al) {\r\n      case 1:\r\n        promises.push(handler.call(this));\r\n        break;\r\n      case 2:\r\n        promises.push(handler.call(this, arguments[1]));\r\n        break;\r\n      case 3:\r\n        promises.push(handler.call(this, arguments[1], arguments[2]));\r\n        break;\r\n      default:\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n        promises.push(handler.apply(this, args));\r\n      }\r\n    } else if (handler && handler.length) {\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(handler[i].call(this));\r\n          break;\r\n        case 2:\r\n          promises.push(handler[i].call(this, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(handler[i].call(this, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(handler[i].apply(this, args));\r\n        }\r\n      }\r\n    } else if (!this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\r\n      } else {\r\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  };\r\n\r\n  EventEmitter.prototype.on = function(type, listener) {\r\n    if (typeof type === 'function') {\r\n      this.onAny(type);\r\n      return this;\r\n    }\r\n\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('on only accepts instances of Function');\r\n    }\r\n    this._events || init.call(this);\r\n\r\n    // To avoid recursion in the case that type == \"newListeners\"! Before\r\n    // adding it to the listeners, first emit \"newListeners\".\r\n    this.emit('newListener', type, listener);\r\n\r\n    if (this.wildcard) {\r\n      growListenerTree.call(this, type, listener);\r\n      return this;\r\n    }\r\n\r\n    if (!this._events[type]) {\r\n      // Optimize the case of one listener. Don't need the extra array object.\r\n      this._events[type] = listener;\r\n    }\r\n    else {\r\n      if (typeof this._events[type] === 'function') {\r\n        // Change to array.\r\n        this._events[type] = [this._events[type]];\r\n      }\r\n\r\n      // If we've already got an array, just append.\r\n      this._events[type].push(listener);\r\n\r\n      // Check for listener leak\r\n      if (\r\n        !this._events[type].warned &&\r\n        this._events.maxListeners > 0 &&\r\n        this._events[type].length > this._events.maxListeners\r\n      ) {\r\n        this._events[type].warned = true;\r\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.onAny = function(fn) {\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('onAny only accepts instances of Function');\r\n    }\r\n\r\n    if (!this._all) {\r\n      this._all = [];\r\n    }\r\n\r\n    // Add the function to the event listener collection.\r\n    this._all.push(fn);\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n  EventEmitter.prototype.off = function(type, listener) {\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('removeListener only takes instances of Function');\r\n    }\r\n\r\n    var handlers,leafs=[];\r\n\r\n    if(this.wildcard) {\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\r\n    }\r\n    else {\r\n      // does not use listeners(), so no side effect of creating _events[type]\r\n      if (!this._events[type]) return this;\r\n      handlers = this._events[type];\r\n      leafs.push({_listeners:handlers});\r\n    }\r\n\r\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\r\n      var leaf = leafs[iLeaf];\r\n      handlers = leaf._listeners;\r\n      if (isArray(handlers)) {\r\n\r\n        var position = -1;\r\n\r\n        for (var i = 0, length = handlers.length; i < length; i++) {\r\n          if (handlers[i] === listener ||\r\n            (handlers[i].listener && handlers[i].listener === listener) ||\r\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\r\n            position = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (position < 0) {\r\n          continue;\r\n        }\r\n\r\n        if(this.wildcard) {\r\n          leaf._listeners.splice(position, 1);\r\n        }\r\n        else {\r\n          this._events[type].splice(position, 1);\r\n        }\r\n\r\n        if (handlers.length === 0) {\r\n          if(this.wildcard) {\r\n            delete leaf._listeners;\r\n          }\r\n          else {\r\n            delete this._events[type];\r\n          }\r\n        }\r\n\r\n        this.emit(\"removeListener\", type, listener);\r\n\r\n        return this;\r\n      }\r\n      else if (handlers === listener ||\r\n        (handlers.listener && handlers.listener === listener) ||\r\n        (handlers._origin && handlers._origin === listener)) {\r\n        if(this.wildcard) {\r\n          delete leaf._listeners;\r\n        }\r\n        else {\r\n          delete this._events[type];\r\n        }\r\n\r\n        this.emit(\"removeListener\", type, listener);\r\n      }\r\n    }\r\n\r\n    function recursivelyGarbageCollect(root) {\r\n      if (root === undefined) {\r\n        return;\r\n      }\r\n      var keys = Object.keys(root);\r\n      for (var i in keys) {\r\n        var key = keys[i];\r\n        var obj = root[key];\r\n        if ((obj instanceof Function) || (typeof obj !== \"object\") || (obj === null))\r\n          continue;\r\n        if (Object.keys(obj).length > 0) {\r\n          recursivelyGarbageCollect(root[key]);\r\n        }\r\n        if (Object.keys(obj).length === 0) {\r\n          delete root[key];\r\n        }\r\n      }\r\n    }\r\n    recursivelyGarbageCollect(this.listenerTree);\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.offAny = function(fn) {\r\n    var i = 0, l = 0, fns;\r\n    if (fn && this._all && this._all.length > 0) {\r\n      fns = this._all;\r\n      for(i = 0, l = fns.length; i < l; i++) {\r\n        if(fn === fns[i]) {\r\n          fns.splice(i, 1);\r\n          this.emit(\"removeListenerAny\", fn);\r\n          return this;\r\n        }\r\n      }\r\n    } else {\r\n      fns = this._all;\r\n      for(i = 0, l = fns.length; i < l; i++)\r\n        this.emit(\"removeListenerAny\", fns[i]);\r\n      this._all = [];\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\r\n\r\n  EventEmitter.prototype.removeAllListeners = function(type) {\r\n    if (arguments.length === 0) {\r\n      !this._events || init.call(this);\r\n      return this;\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\r\n\r\n      for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\r\n        var leaf = leafs[iLeaf];\r\n        leaf._listeners = null;\r\n      }\r\n    }\r\n    else if (this._events) {\r\n      this._events[type] = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.listeners = function(type) {\r\n    if (this.wildcard) {\r\n      var handlers = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\r\n      return handlers;\r\n    }\r\n\r\n    this._events || init.call(this);\r\n\r\n    if (!this._events[type]) this._events[type] = [];\r\n    if (!isArray(this._events[type])) {\r\n      this._events[type] = [this._events[type]];\r\n    }\r\n    return this._events[type];\r\n  };\r\n\r\n  EventEmitter.prototype.listenerCount = function(type) {\r\n    return this.listeners(type).length;\r\n  };\r\n\r\n  EventEmitter.prototype.listenersAny = function() {\r\n\r\n    if(this._all) {\r\n      return this._all;\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n\r\n  };\r\n\r\n  if (typeof define === 'function' && define.amd) {\r\n     // AMD. Register as an anonymous module.\r\n    define(function() {\r\n      return EventEmitter;\r\n    });\r\n  } else if (typeof exports === 'object') {\r\n    // CommonJS\r\n    module.exports = EventEmitter;\r\n  }\r\n  else {\r\n    // Browser global.\r\n    window.EventEmitter2 = EventEmitter;\r\n  }\r\n}();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/eventemitter2/lib/eventemitter2.js\n// module id = 27\n// module chunks = 0","import Promise from 'bluebird'\r\nimport EventEmitter from 'eventemitter2'\r\n\r\nimport { pathSatisfies, complement, isNil, unless, is, always, propEq, reject } from 'ramda'\r\n\r\nimport { getNetworker } from '../networker'\r\nimport { auth } from '../authorizer'\r\nimport { PureStorage } from '../../store'\r\nimport blueDefer from '../../defer'\r\nimport { dTime } from '../time-manager'\r\n\r\nimport { bytesFromHex, bytesToHex } from '../../bin'\r\n\r\nimport { switchErrors } from './error-cases'\r\n\r\n// export const mtpSetUserAuth = onAuth =>\r\n//   function mtpSetUserAuth(dcID, userAuth) {\r\n//     const fullUserAuth = { dcID, ...userAuth }\r\n//     PureStorage.set({\r\n//       dc       : dcID,\r\n//       user_auth: fullUserAuth\r\n//     })\r\n//     onAuth(fullUserAuth, dcID)\r\n//   }\r\n\r\nconst hasPath = pathSatisfies( complement( isNil ) )\r\nconst defDc = unless( is(Number), always(2) )\r\nconst withoutNil = reject( isNil )\r\n\r\nconst baseDcID = 2\r\n\r\nexport const mtpClearStorage = function() {\r\n  const saveKeys = []\r\n  for (let dcID = 1; dcID <= 5; dcID++) {\r\n    saveKeys.push(`dc${  dcID  }_auth_key`)\r\n    saveKeys.push(`t_dc${  dcID  }_auth_key`)\r\n  }\r\n  PureStorage.noPrefix()\r\n  return PureStorage\r\n    .get(saveKeys)\r\n    .tap(PureStorage.clear)\r\n    .then(values => {\r\n      const restoreObj = {}\r\n      saveKeys.forEach((key, i) => {\r\n        const value = values[i]\r\n        if (value !== false && value !== undefined)\r\n          restoreObj[key] = value\r\n      })\r\n      PureStorage.noPrefix()\r\n      return restoreObj\r\n    })\r\n    .then(PureStorage.set)\r\n}\r\n\r\nconst Ln = propEq('length')\r\n\r\nexport class ApiManager {\r\n  emitter = new EventEmitter({\r\n    wildcard: true\r\n  })\r\n  on = this.emitter.on\r\n  emit = this.emitter.emit\r\n  cache = {\r\n    uploader  : {},\r\n    downloader: {}\r\n  }\r\n  static appSettings = {\r\n    invokeWithLayer: 0xda9b0d0d,\r\n    layer          : NaN,\r\n    initConnection : 0x69796de9,\r\n    api_id         : '',\r\n    device_model   : 'Unknown UserAgent',\r\n    system_version : 'Unknown Platform',\r\n    app_version    : '',\r\n    lang_code      : 'en'\r\n  }\r\n  constructor(appSettings = {}) {\r\n    this.mtpInvokeApi = this.mtpInvokeApi.bind(this)\r\n    this.setUserAuth = this.setUserAuth.bind(this)\r\n\r\n    this.appSettings = { ...ApiManager.appSettings, ...withoutNil(appSettings) }\r\n    this.networkFabric = getNetworker(this.appSettings, this.emit)\r\n  }\r\n  mtpGetNetworker = (dcID, options = {}) => {\r\n    const cache = options.fileUpload || options.fileDownload\r\n      ? this.cache.uploader\r\n      : this.cache.downloader\r\n    if (!dcID) throw new Error('get Networker without dcID')\r\n\r\n    if (!isNil(cache[dcID])) return cache[dcID]\r\n\r\n    const akk = `dc${  dcID  }_auth_key`\r\n    const ssk = `dc${  dcID  }_server_salt`\r\n\r\n    const networkGetter = result => {\r\n      if (cache[dcID]) return cache[dcID]\r\n\r\n      const authKeyHex = result[0]\r\n      let serverSaltHex = result[1]\r\n      // console.log('ass', dcID, authKeyHex, serverSaltHex)\r\n      if (Ln(512, authKeyHex)) {\r\n        if (!serverSaltHex || serverSaltHex.length !== 16)\r\n          serverSaltHex = 'AAAAAAAAAAAAAAAA'\r\n        const authKey = bytesFromHex(authKeyHex)\r\n        const serverSalt = bytesFromHex(serverSaltHex)\r\n\r\n        return cache[dcID] = this.networkFabric(dcID, authKey, serverSalt, options)\r\n      }\r\n\r\n      if (!options.createNetworker)\r\n        return Promise.reject({ type: 'AUTH_KEY_EMPTY', code: 401 })\r\n\r\n      const onDcAuth = ({ authKey, serverSalt }) => {\r\n        const storeObj = {\r\n          [akk]: bytesToHex(authKey),\r\n          [ssk]: bytesToHex(serverSalt)\r\n        }\r\n        PureStorage.set(storeObj)\r\n\r\n        return cache[dcID] = this.networkFabric(dcID, authKey, serverSalt, options)\r\n      }\r\n\r\n      return auth(dcID)\r\n        .then(onDcAuth, netError)\r\n    }\r\n\r\n    return PureStorage\r\n      .get(akk, ssk)\r\n      .then(networkGetter)\r\n  }\r\n  mtpInvokeApi(method, params, options = {}) {\r\n    // const self = this\r\n    const deferred = blueDefer()\r\n    const rejectPromise = error => {\r\n      if (!error)\r\n        error = { type: 'ERROR_EMPTY' }\r\n      else if (!is(Object, error))\r\n        error = { message: error }\r\n      deferred.reject(error)\r\n\r\n      if (!options.noErrorBox) { //TODO weird code. `error` changed after `.reject`?\r\n        error.input = method\r\n        error.stack =\r\n          stack ||\r\n          hasPath(['originalError', 'stack'], error) ||\r\n          error.stack ||\r\n          (new Error()).stack\r\n        this.emit('error.invoke', error)\r\n      }\r\n    }\r\n    let dcID,\r\n        cachedNetworker\r\n\r\n    const cachedNetThunk = () => performRequest(cachedNetworker)\r\n    const requestThunk = waitTime => setTimeout(cachedNetThunk, waitTime * 1e3)\r\n\r\n    const stack = (new Error()).stack || 'empty stack'\r\n    const performRequest = networker =>\r\n      (cachedNetworker = networker)\r\n        .wrapApiCall(method, params, options)\r\n        .then(\r\n          deferred.resolve,\r\n          error => {\r\n            const deferResolve = deferred.resolve\r\n            const apiSavedNet = () => cachedNetworker = networker\r\n            const apiRecall = networker => networker.wrapApiCall(method, params, options)\r\n            console.error(dTime(), 'Error', error.code, error.type, baseDcID, dcID)\r\n\r\n            return switchErrors(error, options, this.emit, rejectPromise, requestThunk,\r\n                                apiSavedNet, apiRecall, deferResolve, this.mtpInvokeApi,\r\n                                this.mtpGetNetworker)\r\n\r\n          })\r\n    const getDcNetworker = (baseDcID = 2) =>\r\n      this.mtpGetNetworker(dcID = defDc(baseDcID), options)\r\n\r\n    dcID = options.dcID || baseDcID\r\n    if (dcID)\r\n      Promise.resolve(this.mtpGetNetworker(dcID, options))\r\n        .then(performRequest)\r\n        .catch(rejectPromise)\r\n    else\r\n      PureStorage.get('dc')\r\n        .then(getDcNetworker)\r\n        .then(performRequest)\r\n        .catch(rejectPromise)\r\n\r\n    return deferred.promise\r\n  }\r\n  setUserAuth(dcID, userAuth) {\r\n    const fullUserAuth = { dcID, ...userAuth }\r\n    PureStorage.set({\r\n      dc       : dcID,\r\n      user_auth: fullUserAuth\r\n    })\r\n    this.emit('auth.dc', { dc: dcID, auth: userAuth })\r\n  }\r\n}\r\n\r\nconst netError = error => {\r\n  console.log('Get networker error', error, error.stack)\r\n  return Promise.reject(error)\r\n}\r\n\r\nexport const api = new ApiManager\r\n\r\nexport const mtpInvokeApi = api.mtpInvokeApi\n\n\n// WEBPACK FOOTER //\n// ./service/api-manager/index.js","import Promise from 'bluebird'\r\n\r\nimport { propOr, isNil } from 'ramda'\r\n\r\nimport blueDefer from '../../defer'\r\nimport Switch from '../../switch'\r\nimport { PureStorage } from '../../store'\r\nimport { tsNow } from '../time-manager'\r\n\r\nconst cachedExportPromise = {}\r\n\r\nconst protect = (\r\n    { code = NaN, type = '' },\r\n    { rawError = null },\r\n    dcID,\r\n    baseDcID\r\n  ) => ({\r\n    base: baseDcID,\r\n    errR: rawError,\r\n    code,\r\n    type,\r\n    dcID\r\n  })\r\n\r\nconst patterns = {\r\n  noBaseAuth: ({ code, dcID, base })  =>  code === 401 && dcID === base,\r\n  noDcAuth  : ({ code, dcID, base })  =>  code === 401 && dcID !== base,\r\n  migrate   : ({ code })              =>  code === 303,\r\n  floodWait : ({ code, errR })        =>  !errR && code === 420,\r\n  waitFail  : ({ code, type, errR })  =>  !errR && (code === 500 || type === 'MSG_WAIT_FAILED'),\r\n  _         : ()                      =>  true\r\n}\r\n\r\n\r\nconst matchProtect =\r\n  matched => (\r\n      error,\r\n      options,\r\n      emit,\r\n      rejectPromise,\r\n      requestThunk,\r\n      apiSavedNet,\r\n      apiRecall,\r\n      deferResolve,\r\n      mtpInvokeApi,\r\n      mtpGetNetworker\r\n    ) =>\r\n      matched({\r\n        invoke   : mtpInvokeApi,\r\n        throwNext: () => rejectPromise(error),\r\n        reject   : rejectPromise,\r\n        getNet   : mtpGetNetworker,\r\n        error,\r\n        options,\r\n        emit,\r\n        requestThunk,\r\n        apiRecall,\r\n        deferResolve,\r\n        apiSavedNet\r\n      })\r\n\r\n\r\nconst noBaseAuth = ({ emit, throwNext }) => {\r\n  PureStorage.remove('dc', 'user_auth')\r\n  emit('error.401.base')\r\n  throwNext()\r\n}\r\n\r\nconst noDcAuth = ({ dcID, reject, apiSavedNet, apiRecall, deferResolve, invoke }) => {\r\n  const importAuth = ({ id, bytes }) => invoke(\r\n    'auth.importAuthorization',\r\n    { id, bytes },\r\n    { dcID, noErrorBox: true })\r\n\r\n\r\n  if (isNil(cachedExportPromise[dcID])) {\r\n    const exportDeferred = blueDefer()\r\n\r\n    invoke(\r\n      'auth.exportAuthorization',\r\n      { dc_id: dcID },\r\n      { noErrorBox: true })\r\n\r\n      .then(importAuth)\r\n      .then(exportDeferred.resolve)\r\n      .catch(exportDeferred.reject)\r\n\r\n    cachedExportPromise[dcID] = exportDeferred.promise\r\n  }\r\n\r\n\r\n\r\n  cachedExportPromise[dcID]\r\n    .then(apiSavedNet)\r\n    .then(apiRecall)\r\n    .then(deferResolve)\r\n    .catch(reject)\r\n}\r\n\r\nconst migrate = ({ error, dcID, options, reject, apiRecall, deferResolve, getNet }) => {\r\n  const newDcID = error.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_)(\\d+)/)[2]\r\n  if (newDcID === dcID) return\r\n  if (options.dcID)\r\n    options.dcID = newDcID\r\n  else\r\n    PureStorage.set({ dc: /*baseDcID =*/ newDcID })\r\n\r\n  getNet(newDcID, options)\r\n    .then(apiRecall)\r\n    .then(deferResolve)\r\n    .catch(reject)\r\n}\r\n\r\nconst floodWait = ({ error, options, throwNext, requestThunk }) => {\r\n  const waitTime = error.type.match(/^FLOOD_WAIT_(\\d+)/)[1] || 10\r\n  if (waitTime > (options.timeout || 60))\r\n    return throwNext()\r\n  requestThunk(waitTime)\r\n}\r\n\r\nconst waitFail = ({ options, throwNext, requestThunk }) => {\r\n  const now = tsNow()\r\n  if (options.stopTime) {\r\n    if (now >= options.stopTime)\r\n      return throwNext()\r\n  } else\r\n    options.stopTime = now + propOr(10, 'timeout', options) * 1000\r\n  options.waitTime = options.waitTime\r\n    ? Math.min(60, options.waitTime * 1.5)\r\n    : 1\r\n  requestThunk(options.waitTime)\r\n}\r\n\r\nconst def = ({ throwNext }) => throwNext()\r\n\r\n\r\nexport const switchErrors = Switch(patterns, protect)({\r\n  noBaseAuth,\r\n  noDcAuth,\r\n  migrate,\r\n  floodWait,\r\n  waitFail,\r\n  _: def\r\n}, matchProtect)\n\n\n// WEBPACK FOOTER //\n// ./service/api-manager/error-cases.js","export const Switch = (patterns, protector = e => e) =>\r\n  (matches, mProtector = e => e) => (...data) => {\r\n    const keyList = Object.keys(patterns)\r\n    const normalized = protector(...data)\r\n    for (const key of keyList)\r\n      if (patterns[key](normalized))\r\n        return mProtector(matches[key])\r\n  }\r\n\r\nexport default Switch\n\n\n// WEBPACK FOOTER //\n// ./switch.js","module.exports = false;\n\n// Only Node.JS has a process variable that is of [[Class]] process\ntry {\n module.exports = Object.prototype.toString.call(global.process) === '[object process]' \n} catch(e) {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/detect-node/index.js\n// module id = 31\n// module chunks = 0","module.exports = (__webpack_require__(0))(62);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ../node_modules/webpack/buildin/global.js from dll-reference vendor\n// module id = 32\n// module chunks = 0"],"sourceRoot":""}